{
  "permissions": {
    "canRead": true,
    "canWrite": true
  },
  "processGroupFlow": {
    "id": "8d1d9a24-0158-1000-da01-5d861f4c2834",
    "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/flow/process-groups/8d1d9a24-0158-1000-da01-5d861f4c2834",
    "breadcrumb": {
      "id": "8d1d9a24-0158-1000-da01-5d861f4c2834",
      "permissions": {
        "canRead": true,
        "canWrite": true
      },
      "breadcrumb": {
        "id": "8d1d9a24-0158-1000-da01-5d861f4c2834",
        "name": "NiFi Flow"
      }
    },
    "flow": {
      "processGroups": [
        {
          "revision": {
            "clientId": "5cd37522-015a-1000-6cb6-2f2b640fac1c",
            "version": 7
          },
          "id": "25595ab4-db90-108c-ffff-ffffc78ca314",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/process-groups/25595ab4-db90-108c-ffff-ffffc78ca314",
          "position": {
            "x": 6481.015303130546,
            "y": 284.26718539171964
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "25595ab4-db90-108c-ffff-ffffc78ca314",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 6481.015303130546,
              "y": 284.26718539171964
            },
            "name": "avn_etl",
            "comments": "",
            "runningCount": 20,
            "stoppedCount": 2,
            "invalidCount": 0,
            "disabledCount": 0,
            "activeRemotePortCount": 0,
            "inactiveRemotePortCount": 0,
            "inputPortCount": 1,
            "outputPortCount": 0
          },
          "status": {
            "id": "25595ab4-db90-108c-ffff-ffffc78ca314",
            "name": "avn_etl",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "25595ab4-db90-108c-ffff-ffffc78ca314",
              "name": "avn_etl",
              "connectionStatusSnapshots": [],
              "processorStatusSnapshots": [],
              "remoteProcessGroupStatusSnapshots": [],
              "inputPortStatusSnapshots": [],
              "outputPortStatusSnapshots": [],
              "flowFilesIn": 53,
              "bytesIn": 0,
              "input": "53 (0 bytes)",
              "flowFilesQueued": 2685508,
              "bytesQueued": 16834808233,
              "queued": "2,685,508 (15.68 GB)",
              "queuedCount": "2,685,508",
              "queuedSize": "15.68 GB",
              "bytesRead": 2304918491,
              "read": "2.15 GB",
              "bytesWritten": 4447777856,
              "written": "4.14 GB",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesTransferred": 2990812,
              "bytesTransferred": 7503689932,
              "transferred": "2,990,812 (6.99 GB)",
              "bytesReceived": 23075441,
              "flowFilesReceived": 53,
              "received": "53 (22.01 MB)",
              "bytesSent": 0,
              "flowFilesSent": 0,
              "sent": "0 (0 bytes)",
              "activeThreadCount": 0
            }
          },
          "runningCount": 20,
          "stoppedCount": 2,
          "invalidCount": 0,
          "disabledCount": 0,
          "activeRemotePortCount": 0,
          "inactiveRemotePortCount": 0,
          "inputPortCount": 1,
          "outputPortCount": 0
        }
      ],
      "remoteProcessGroups": [
        {
          "revision": {
            "clientId": "384eecf8-015a-1000-d300-3c0f37d92719",
            "version": 12
          },
          "id": "25595cd7-db90-108c-ffff-ffff9b1df94c",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/remote-process-groups/25595cd7-db90-108c-ffff-ffff9b1df94c",
          "position": {
            "x": 6037.109849634627,
            "y": 595.0838833072256
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "25595cd7-db90-108c-ffff-ffff9b1df94c",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 6037.109849634627,
              "y": 595.0838833072256
            },
            "targetUri": "https://d03nappp0045.hadoop.charter.com:8443/nifi",
            "targetUris": "https://d03nappp0045.hadoop.charter.com:8443/nifi,https://d03nappp0030.hadoop.charter.com:8443/nifi,https://d03nappp0015.hadoop.charter.com:8443/nifi",
            "targetSecure": true,
            "name": "https://d03nappp0045.hadoop.charter.com:8443/nifi",
            "communicationsTimeout": "30 sec",
            "yieldDuration": "10 sec",
            "transportProtocol": "HTTP",
            "proxyHost": "",
            "proxyUser": "",
            "authorizationIssues": [],
            "transmitting": true,
            "inputPortCount": 2,
            "outputPortCount": 0,
            "activeRemoteInputPortCount": 1,
            "inactiveRemoteInputPortCount": 0,
            "activeRemoteOutputPortCount": 0,
            "inactiveRemoteOutputPortCount": 0,
            "flowRefreshed": "02/23/2017 14:31:29 CST",
            "contents": {
              "inputPorts": [
                {
                  "id": "27cc402a-e681-1ace-ffff-ffffbf55d2ba",
                  "name": "pi-wireless-s3-downlaod",
                  "comments": "",
                  "concurrentlySchedulableTaskCount": 1,
                  "transmitting": false,
                  "useCompression": false,
                  "exists": true,
                  "targetRunning": true,
                  "connected": false
                },
                {
                  "id": "25595d3d-db90-108c-ffff-ffffc421c2c5",
                  "name": "avn_ftp_fetch_input",
                  "comments": "",
                  "concurrentlySchedulableTaskCount": 1,
                  "transmitting": true,
                  "useCompression": false,
                  "exists": true,
                  "targetRunning": true,
                  "connected": true
                }
              ],
              "outputPorts": []
            }
          },
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "25595cd7-db90-108c-ffff-ffff9b1df94c",
            "name": "https://d03nappp0045.hadoop.charter.com:8443/nifi",
            "targetUri": "https://d03nappp0045.hadoop.charter.com:8443/nifi",
            "transmissionStatus": "Transmitting",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "25595cd7-db90-108c-ffff-ffff9b1df94c",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "https://d03nappp0045.hadoop.charter.com:8443/nifi",
              "targetUri": "https://d03nappp0045.hadoop.charter.com:8443/nifi",
              "transmissionStatus": "Transmitting",
              "activeThreadCount": 0,
              "flowFilesSent": 53,
              "bytesSent": 0,
              "sent": "53 (0 bytes)",
              "flowFilesReceived": 0,
              "bytesReceived": 0,
              "received": "0 (0 bytes)"
            }
          },
          "inputPortCount": 2,
          "outputPortCount": 0
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 14
          },
          "id": "27cc4069-e681-1ace-0000-00005d15370f",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/remote-process-groups/27cc4069-e681-1ace-0000-00005d15370f",
          "position": {
            "x": 2136.3236663382536,
            "y": 988.0239903503117
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "27cc4069-e681-1ace-0000-00005d15370f",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 2136.3236663382536,
              "y": 988.0239903503117
            },
            "targetUri": "https://d03nappp0045.hadoop.charter.com:8443/nifi",
            "targetUris": "https://d03nappp0045.hadoop.charter.com:8443/nifi,https://d03nappp0030.hadoop.charter.com:8443/nifi,https://d03nappp0015.hadoop.charter.com:8443/nifi",
            "targetSecure": true,
            "name": "https://d03nappp0045.hadoop.charter.com:8443/nifi",
            "communicationsTimeout": "30 sec",
            "yieldDuration": "10 sec",
            "transportProtocol": "HTTP",
            "proxyHost": "",
            "proxyUser": "",
            "authorizationIssues": [],
            "transmitting": true,
            "inputPortCount": 2,
            "outputPortCount": 0,
            "activeRemoteInputPortCount": 1,
            "inactiveRemoteInputPortCount": 0,
            "activeRemoteOutputPortCount": 0,
            "inactiveRemoteOutputPortCount": 0,
            "flowRefreshed": "02/23/2017 14:31:29 CST",
            "contents": {
              "inputPorts": [
                {
                  "id": "27cc402a-e681-1ace-ffff-ffffbf55d2ba",
                  "name": "pi-wireless-s3-downlaod",
                  "comments": "",
                  "concurrentlySchedulableTaskCount": 1,
                  "transmitting": true,
                  "useCompression": false,
                  "exists": true,
                  "targetRunning": true,
                  "connected": true
                },
                {
                  "id": "25595d3d-db90-108c-ffff-ffffc421c2c5",
                  "name": "avn_ftp_fetch_input",
                  "comments": "",
                  "concurrentlySchedulableTaskCount": 1,
                  "transmitting": false,
                  "useCompression": false,
                  "exists": true,
                  "targetRunning": true,
                  "connected": false
                }
              ],
              "outputPorts": []
            }
          },
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "27cc4069-e681-1ace-0000-00005d15370f",
            "name": "https://d03nappp0045.hadoop.charter.com:8443/nifi",
            "targetUri": "https://d03nappp0045.hadoop.charter.com:8443/nifi",
            "transmissionStatus": "Transmitting",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "27cc4069-e681-1ace-0000-00005d15370f",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "https://d03nappp0045.hadoop.charter.com:8443/nifi",
              "targetUri": "https://d03nappp0045.hadoop.charter.com:8443/nifi",
              "transmissionStatus": "Transmitting",
              "activeThreadCount": 0,
              "flowFilesSent": 0,
              "bytesSent": 0,
              "sent": "0 (0 bytes)",
              "flowFilesReceived": 0,
              "bytesReceived": 0,
              "received": "0 (0 bytes)"
            }
          },
          "inputPortCount": 2,
          "outputPortCount": 0
        }
      ],
      "processors": [
        {
          "revision": {
            "clientId": "aeff4253-2604-1e1f-60bd-8d385f539e16",
            "version": 21
          },
          "id": "81983a94-4bfe-142c-ab90-dce8fbb98c49",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/81983a94-4bfe-142c-ab90-dce8fbb98c49",
          "position": {
            "x": 365.496307428858,
            "y": 1193.4298757334502
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "81983a94-4bfe-142c-ab90-dce8fbb98c49",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 365.496307428858,
              "y": 1193.4298757334502
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/venona/prod_error_messages/partition_date=${now():plus(21600000):format('yyyy-MM-dd')}/partition_hour=${now():plus(21600000):format('HH')}",
                "Conflict Resolution Strategy": "fail",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "81983a94-4bfe-142c-ab90-dce8fbb98c49",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "81983a94-4bfe-142c-ab90-dce8fbb98c49",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "f095c049-0159-1000-5856-17d60e5b4a0f",
            "version": 9
          },
          "id": "6e8635aa-739b-1c1b-829f-4730779c8da4",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/6e8635aa-739b-1c1b-829f-4730779c8da4",
          "position": {
            "x": 1575.4568016905537,
            "y": 52.434775942629486
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "6e8635aa-739b-1c1b-829f-4730779c8da4",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 1575.4568016905537,
              "y": 52.434775942629486
            },
            "name": "GetKafka - video_error_977FC20E5971627026E12B03BDF7914E",
            "type": "org.apache.nifi.processors.kafka.GetKafka",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are created are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "ZooKeeper Connection String": "zk2-internal.dp.aws.charter.com:2181,zk3-internal.dp.aws.charter.com:2181,zk3-internal.dp.aws.charter.com:2181",
                "Topic Name": "video_error_977FC20E5971627026E12B03BDF7914E",
                "Zookeeper Commit Frequency": "60 secs",
                "Batch Size": "1",
                "Message Demarcator": "\\n",
                "Client Name": "NiFi-f4b3e296-0158-1000-0000-00003aeefad8",
                "Group ID": "6e8635aa-739b-1c1b-829f-4730779c8da4",
                "Kafka Communications Timeout": "30 secs",
                "ZooKeeper Communications Timeout": "30 secs",
                "Auto Offset Reset": "largest"
              },
              "descriptors": {
                "ZooKeeper Connection String": {
                  "name": "ZooKeeper Connection String",
                  "displayName": "ZooKeeper Connection String",
                  "description": "The Connection String to use in order to connect to ZooKeeper. This is often a comma-separated list of <host>:<port> combinations. For example, host1:2181,host2:2181,host3:2188",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Topic Name": {
                  "name": "Topic Name",
                  "displayName": "Topic Name",
                  "description": "The Kafka Topic to pull messages from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Zookeeper Commit Frequency": {
                  "name": "Zookeeper Commit Frequency",
                  "displayName": "Zookeeper Commit Frequency",
                  "description": "Specifies how often to communicate with ZooKeeper to indicate which messages have been pulled. A longer time period will result in better overall performance but can result in more data duplication if a NiFi node is lost",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "Specifies the maximum number of messages to combine into a single FlowFile. These messages will be concatenated together with the <Message Demarcator> string placed between the content of each message. If the messages from Kafka should not be concatenated together, leave this value at 1.",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Message Demarcator": {
                  "name": "Message Demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the characters to use in order to demarcate multiple messages from Kafka. If the <Batch Size> property is set to 1, this value is ignored. Otherwise, for each two subsequent messages in the batch, this value will be placed in between them.",
                  "defaultValue": "\\n",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Client Name": {
                  "name": "Client Name",
                  "displayName": "Client Name",
                  "description": "Client Name to use when communicating with Kafka",
                  "defaultValue": "NiFi-6e8635aa-739b-1c1b-829f-4730779c8da4",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Group ID": {
                  "name": "Group ID",
                  "displayName": "Group ID",
                  "description": "A Group ID is used to identify consumers that are within the same consumer group",
                  "defaultValue": "6e8635aa-739b-1c1b-829f-4730779c8da4",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kafka Communications Timeout": {
                  "name": "Kafka Communications Timeout",
                  "displayName": "Kafka Communications Timeout",
                  "description": "The amount of time to wait for a response from Kafka before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "ZooKeeper Communications Timeout": {
                  "name": "ZooKeeper Communications Timeout",
                  "displayName": "ZooKeeper Communications Timeout",
                  "description": "The amount of time to wait for a response from ZooKeeper before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Auto Offset Reset": {
                  "name": "Auto Offset Reset",
                  "displayName": "Auto Offset Reset",
                  "description": "Automatically reset the offset to the smallest or largest offset available on the broker",
                  "defaultValue": "largest",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "smallest",
                        "value": "smallest"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "largest",
                        "value": "largest"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "60 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 2000,
              "concurrentlySchedulableTaskCount": 32,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "6e8635aa-739b-1c1b-829f-4730779c8da4",
            "name": "GetKafka - video_error_977FC20E5971627026E12B03BDF7914E",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "6e8635aa-739b-1c1b-829f-4730779c8da4",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka - video_error_977FC20E5971627026E12B03BDF7914E",
              "type": "GetKafka",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 1382077,
              "read": "0 bytes",
              "written": "1.32 MB",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 861,
              "bytesOut": 1382077,
              "output": "861 (1.32 MB)",
              "taskCount": 697015,
              "tasksDurationNanos": 962472748183,
              "tasks": "697,015",
              "tasksDuration": "00:16:02.472",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "5d4332aa-015a-1000-14ae-172bf712a4a6",
            "version": 12
          },
          "id": "ad113bd0-cd83-166b-87e3-3f030723c296",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/ad113bd0-cd83-166b-87e3-3f030723c296",
          "position": {
            "x": 7060.401073005386,
            "y": 296.2633372947098
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "ad113bd0-cd83-166b-87e3-3f030723c296",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 7060.401073005386,
              "y": 296.2633372947098
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/cats/partition_date=${now():plus(21600000):format('yyyy-MM-dd')}",
                "Conflict Resolution Strategy": "replace",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "ad113bd0-cd83-166b-87e3-3f030723c296",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "ad113bd0-cd83-166b-87e3-3f030723c296",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e0664271-0159-1000-db71-4624a50c9d70",
            "version": 1
          },
          "id": "b5b2301a-f229-1384-0000-000004580ff9",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/b5b2301a-f229-1384-0000-000004580ff9",
          "position": {
            "x": -1420.259525203955,
            "y": 229.56297925975377
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "b5b2301a-f229-1384-0000-000004580ff9",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -1420.259525203955,
              "y": 229.56297925975377
            },
            "name": "PutHiveStreaming",
            "type": "org.apache.nifi.processors.hive.PutHiveStreaming",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "A FlowFile containing the JSON contents of a record is routed to this relationship if the record could not be transmitted to Hive.",
                "autoTerminate": true
              },
              {
                "name": "retry",
                "description": "The incoming FlowFile is routed to this relationship if its records cannot be transmitted to Hive. Note that some records may have been processed successfully, they will be routed (as JSON flow files) to the success relationship. The combination of the retry, success, and failure relationships indicate how many records succeeded and/or failed. This can be used to provide a retry capability since full rollback is not possible.",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "A FlowFile containing the JSON contents of a record is routed to this relationship after the record has been successfully transmitted to Hive.",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": false,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_ALLOWED",
            "config": {
              "properties": {
                "hive-stream-metastore-uri": "thrift://d03nappp0016.hadoop.charter.com:9083",
                "hive-config-resources": "/usr/hdp/current/hive-client/conf/hive-site.xml",
                "hive-stream-database-name": "prod",
                "hive-stream-table-name": "video_finished_messages",
                "hive-stream-partition-cols": "partition",
                "hive-stream-autocreate-partition": "true",
                "hive-stream-max-open-connections": "20",
                "hive-stream-heartbeat-interval": "60",
                "hive-stream-transactions-per-batch": "10000",
                "Kerberos Principal": "nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab"
              },
              "descriptors": {
                "hive-stream-metastore-uri": {
                  "name": "hive-stream-metastore-uri",
                  "displayName": "Hive Metastore URI",
                  "description": "The URI location for the Hive Metastore. Note that this is not the location of the Hive Server. The default port for the Hive metastore is 9043.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "hive-config-resources": {
                  "name": "hive-config-resources",
                  "displayName": "Hive Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hive configuration (hive-site.xml, e.g.). Without this, Hadoop will search the classpath for a 'hive-site.xml' file or will revert to a default configuration. Note that to enable authentication with Kerberos e.g., the appropriate properties must be set in the configuration files. Please see the Hive documentation for more details.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "hive-stream-database-name": {
                  "name": "hive-stream-database-name",
                  "displayName": "Database Name",
                  "description": "The name of the database in which to put the data.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "hive-stream-table-name": {
                  "name": "hive-stream-table-name",
                  "displayName": "Table Name",
                  "description": "The name of the database table in which to put the data.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "hive-stream-partition-cols": {
                  "name": "hive-stream-partition-cols",
                  "displayName": "Partition Columns",
                  "description": "A comma-delimited list of column names on which the table has been partitioned. The order of values in this list must correspond exactly to the order of partition columns specified during the table creation.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "hive-stream-autocreate-partition": {
                  "name": "hive-stream-autocreate-partition",
                  "displayName": "Auto-Create Partitions",
                  "description": "Flag indicating whether partitions should be automatically created",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "hive-stream-max-open-connections": {
                  "name": "hive-stream-max-open-connections",
                  "displayName": "Max Open Connections",
                  "description": "The maximum number of open connections that can be allocated from this pool at the same time, or negative for no limit.",
                  "defaultValue": "8",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "hive-stream-heartbeat-interval": {
                  "name": "hive-stream-heartbeat-interval",
                  "displayName": "Heartbeat Interval",
                  "description": "Indicates that a heartbeat should be sent when the specified number of seconds has elapsed. A value of 0 indicates that no heartbeat should be sent.",
                  "defaultValue": "60",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "hive-stream-transactions-per-batch": {
                  "name": "hive-stream-transactions-per-batch",
                  "displayName": "Transactions per Batch",
                  "description": "A hint to Hive Streaming indicating how many transactions the processor task will need. This value must be greater than 1.",
                  "defaultValue": "100",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_ALLOWED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "b5b2301a-f229-1384-0000-000004580ff9",
            "name": "PutHiveStreaming",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "b5b2301a-f229-1384-0000-000004580ff9",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHiveStreaming",
              "type": "PutHiveStreaming",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 7
          },
          "id": "65dd3a5f-aefb-1ec4-971d-df277ee8d0ee",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/65dd3a5f-aefb-1ec4-971d-df277ee8d0ee",
          "position": {
            "x": 1576.1619028744885,
            "y": 273.56602420727563
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "65dd3a5f-aefb-1ec4-971d-df277ee8d0ee",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 1576.1619028744885,
              "y": 273.56602420727563
            },
            "name": "MergeContent",
            "type": "org.apache.nifi.processors.standard.MergeContent",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure",
                "autoTerminate": true
              },
              {
                "name": "merged",
                "description": "The FlowFile containing the merged content",
                "autoTerminate": false
              },
              {
                "name": "original",
                "description": "The FlowFiles that were used to create the bundle",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Merge Strategy": "Bin-Packing Algorithm",
                "Merge Format": "Avro",
                "Attribute Strategy": "Keep All Unique Attributes",
                "Correlation Attribute Name": null,
                "Minimum Number of Entries": "200000",
                "Maximum Number of Entries": "400000",
                "Minimum Group Size": "0 B",
                "Maximum Group Size": null,
                "Max Bin Age": "1 hour",
                "Maximum number of Bins": "5",
                "Delimiter Strategy": "Filename",
                "Header File": null,
                "Footer File": null,
                "Demarcator File": null,
                "Compression Level": "1",
                "Keep Path": "false"
              },
              "descriptors": {
                "Merge Strategy": {
                  "name": "Merge Strategy",
                  "displayName": "Merge Strategy",
                  "description": "Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles",
                  "defaultValue": "Bin-Packing Algorithm",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Bin-Packing Algorithm",
                        "value": "Bin-Packing Algorithm",
                        "description": "Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the <Correlation Attribute> property is set)"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Defragment",
                        "value": "Defragment",
                        "description": "Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes <fragment.identifier>, <fragment.count>, and <fragment.index> or alternatively (for backward compatibility purposes) <segment.identifier>, <segment.count>, and <segment.index>. All FlowFiles with the same value for \"fragment.identifier\" will be grouped together. All FlowFiles in this group must have the same value for the \"fragment.count\" attribute. All FlowFiles in this group must have a unique value for the \"fragment.index\" attribute between 0 and the value of the \"fragment.count\" attribute."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Merge Format": {
                  "name": "Merge Format",
                  "displayName": "Merge Format",
                  "description": "Determines the format that will be used to merge the content.",
                  "defaultValue": "Binary Concatenation",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "TAR",
                        "value": "TAR",
                        "description": "A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' <path> attribute will be used to create a directory in the TAR file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named <tar.permissions> that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ZIP",
                        "value": "ZIP",
                        "description": "A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' <path> attribute will be used to create a directory in the ZIP file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The <Compression Level> property indicates the ZIP compression to use."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v3",
                        "value": "FlowFile Stream, v3",
                        "description": "A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v2",
                        "value": "FlowFile Stream, v2",
                        "description": "A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Tar, v1",
                        "value": "FlowFile Tar, v1",
                        "description": "A bin of FlowFiles will be combined into a single Version 1 FlowFile Package"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Binary Concatenation",
                        "value": "Binary Concatenation",
                        "description": "The contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Avro",
                        "value": "Avro",
                        "description": "The Avro contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Attribute Strategy": {
                  "name": "Attribute Strategy",
                  "displayName": "Attribute Strategy",
                  "description": "Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.",
                  "defaultValue": "Keep Only Common Attributes",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Keep Only Common Attributes",
                        "value": "Keep Only Common Attributes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Keep All Unique Attributes",
                        "value": "Keep All Unique Attributes"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Correlation Attribute Name": {
                  "name": "Correlation Attribute Name",
                  "displayName": "Correlation Attribute Name",
                  "description": "If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Minimum Number of Entries": {
                  "name": "Minimum Number of Entries",
                  "displayName": "Minimum Number of Entries",
                  "description": "The minimum number of files to include in a bundle",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Number of Entries": {
                  "name": "Maximum Number of Entries",
                  "displayName": "Maximum Number of Entries",
                  "description": "The maximum number of files to include in a bundle. If not specified, there is no maximum.",
                  "defaultValue": "1000",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum Group Size": {
                  "name": "Minimum Group Size",
                  "displayName": "Minimum Group Size",
                  "description": "The minimum size of for the bundle",
                  "defaultValue": "0 B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Group Size": {
                  "name": "Maximum Group Size",
                  "displayName": "Maximum Group Size",
                  "description": "The maximum size for the bundle. If not specified, there is no maximum.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Bin Age": {
                  "name": "Max Bin Age",
                  "displayName": "Max Bin Age",
                  "description": "The maximum age of a Bin that will trigger a Bin to be complete. Expected format is <duration> <time unit> where <duration> is a positive integer and time unit is one of seconds, minutes, hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum number of Bins": {
                  "name": "Maximum number of Bins",
                  "displayName": "Maximum number of Bins",
                  "description": "Specifies the maximum number of bins that can be held in memory at any one time",
                  "defaultValue": "5",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Delimiter Strategy": {
                  "name": "Delimiter Strategy",
                  "displayName": "Delimiter Strategy",
                  "description": "Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.",
                  "defaultValue": "Filename",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Filename",
                        "value": "Filename",
                        "description": "The values of Header, Footer, and Demarcator will be retrieved from the contents of a file"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text",
                        "description": "The values of Header, Footer, and Demarcator will be specified as property values"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Header File": {
                  "name": "Header File",
                  "displayName": "Header",
                  "description": "Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Footer File": {
                  "name": "Footer File",
                  "displayName": "Footer",
                  "description": "Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Demarcator File": {
                  "name": "Demarcator File",
                  "displayName": "Demarcator",
                  "description": "Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Compression Level": {
                  "name": "Compression Level",
                  "displayName": "Compression Level",
                  "description": "Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored",
                  "defaultValue": "1",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "0",
                        "value": "0"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "1",
                        "value": "1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "2",
                        "value": "2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "3",
                        "value": "3"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "4",
                        "value": "4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "5",
                        "value": "5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "6",
                        "value": "6"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "7",
                        "value": "7"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "8",
                        "value": "8"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "9",
                        "value": "9"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Keep Path": {
                  "name": "Keep Path",
                  "displayName": "Keep Path",
                  "description": "If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "65dd3a5f-aefb-1ec4-971d-df277ee8d0ee",
            "name": "MergeContent",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "65dd3a5f-aefb-1ec4-971d-df277ee8d0ee",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "type": "MergeContent",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 474,
              "tasksDurationNanos": 23166822,
              "tasks": "474",
              "tasksDuration": "00:00:00.023",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e0664271-0159-1000-db71-4624a50c9d70",
            "version": 1
          },
          "id": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
          "position": {
            "x": -1955.1101675144766,
            "y": 458.36431031728125
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -1955.1101675144766,
              "y": 458.36431031728125
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "replaceString": "${now():format('yyyyMMdd'):prepend('{\"name\":\"partition_date\",\"type\":\"string\",\"default\":\"'):append('\"},{\"name\":\"received_timestamp\"')}"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "replaceString": {
                  "name": "replaceString",
                  "displayName": "replaceString",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "aeff4253-2604-1e1f-60bd-8d385f539e16",
            "version": 11
          },
          "id": "4ef73f54-cc5d-14c3-88cc-bc35813eb926",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/4ef73f54-cc5d-14c3-88cc-bc35813eb926",
          "position": {
            "x": 5440.933299567886,
            "y": 1177.2767345115067
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "4ef73f54-cc5d-14c3-88cc-bc35813eb926",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 5440.933299567886,
              "y": 1177.2767345115067
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/venona/staging_error/partition_date=${now():plus(21600000):format('yyyy-MM-dd')}/partition_hour=${now():plus(21600000):format('HH')}",
                "Conflict Resolution Strategy": "fail",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "4ef73f54-cc5d-14c3-88cc-bc35813eb926",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "4ef73f54-cc5d-14c3-88cc-bc35813eb926",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 3
          },
          "id": "6cca351a-e7b8-13df-bf15-5b558c1ac9a2",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/6cca351a-e7b8-13df-bf15-5b558c1ac9a2",
          "position": {
            "x": -33.10516929768437,
            "y": 750.9960300507441
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "6cca351a-e7b8-13df-bf15-5b558c1ac9a2",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -33.10516929768437,
              "y": 750.9960300507441
            },
            "name": "ExtractAvroMetadata",
            "type": "org.apache.nifi.processors.avro.ExtractAvroMetadata",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "A FlowFile is routed to this relationship if it cannot be parsed as Avro or metadata cannot be extracted for any reason",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "A FlowFile is routed to this relationship after metadata has been extracted.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Fingerprint Algorithm": "CRC-64-AVRO",
                "Metadata Keys": "avro.schema",
                "Count Items": "false"
              },
              "descriptors": {
                "Fingerprint Algorithm": {
                  "name": "Fingerprint Algorithm",
                  "displayName": "Fingerprint Algorithm",
                  "description": "The algorithm used to generate the schema fingerprint. Available choices are based on the Avro recommended practices for fingerprint generation.",
                  "defaultValue": "CRC-64-AVRO",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "CRC-64-AVRO",
                        "value": "CRC-64-AVRO"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "MD5",
                        "value": "MD5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SHA-256",
                        "value": "SHA-256"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Metadata Keys": {
                  "name": "Metadata Keys",
                  "displayName": "Metadata Keys",
                  "description": "A comma-separated list of keys indicating key/value pairs to extract from the Avro file header. The key 'avro.schema' can be used to extract the full schema in JSON format, and 'avro.codec' can be used to extract the codec name if one exists.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Count Items": {
                  "name": "Count Items",
                  "displayName": "Count Items",
                  "description": "If true the number of items in the datafile will be counted and stored in a FlowFile attribute 'item.count'. The counting is done by reading blocks and getting the number of items for each block, thus avoiding de-serializing. The items being counted will be the top-level items in the datafile. For example, with a schema of type record the items will be the records, and for a schema of type Array the items will be the arrays (not the number of entries in each array).",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "6cca351a-e7b8-13df-bf15-5b558c1ac9a2",
            "name": "ExtractAvroMetadata",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "6cca351a-e7b8-13df-bf15-5b558c1ac9a2",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "type": "ExtractAvroMetadata",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 7
          },
          "id": "66c7bfa4-015a-1000-ffff-ffffbf9b1dc4",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/66c7bfa4-015a-1000-ffff-ffffbf9b1dc4",
          "position": {
            "x": 8627.467049119694,
            "y": 1742.8050302581955
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "66c7bfa4-015a-1000-ffff-ffffbf9b1dc4",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8627.467049119694,
              "y": 1742.8050302581955
            },
            "name": "FetchFile",
            "type": "org.apache.nifi.processors.standard.FetchFile",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Any FlowFile that could not be fetched from the file system for any reason other than insufficient permissions or the file not existing will be transferred to this Relationship.",
                "autoTerminate": true
              },
              {
                "name": "not.found",
                "description": "Any FlowFile that could not be fetched from the file system because the file could not be found will be transferred to this Relationship.",
                "autoTerminate": true
              },
              {
                "name": "permission.denied",
                "description": "Any FlowFile that could not be fetched from the file system due to the user running NiFi not having sufficient permissions will be transferred to this Relationship.",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Any FlowFile that is successfully fetched from the file system will be transferred to this Relationship.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "File to Fetch": "${absolute.path}/${filename}",
                "Completion Strategy": "None",
                "Move Destination Directory": null,
                "Move Conflict Strategy": "Rename",
                "Log level when file not found": "ERROR",
                "Log level when permission denied": "ERROR"
              },
              "descriptors": {
                "File to Fetch": {
                  "name": "File to Fetch",
                  "displayName": "File to Fetch",
                  "description": "The fully-qualified filename of the file to fetch from the file system",
                  "defaultValue": "${absolute.path}/${filename}",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Completion Strategy": {
                  "name": "Completion Strategy",
                  "displayName": "Completion Strategy",
                  "description": "Specifies what to do with the original file on the file system once it has been pulled into NiFi",
                  "defaultValue": "None",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "None",
                        "value": "None",
                        "description": "Leave the file as-is"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Move File",
                        "value": "Move File",
                        "description": "Moves the file to the directory specified by the <Move Destination Directory> property"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Delete File",
                        "value": "Delete File",
                        "description": "Deletes the original file from the file system"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Move Destination Directory": {
                  "name": "Move Destination Directory",
                  "displayName": "Move Destination Directory",
                  "description": "The directory to the move the original file to once it has been fetched from the file system. This property is ignored unless the Completion Strategy is set to \"Move File\". If the directory does not exist, it will be created.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Move Conflict Strategy": {
                  "name": "Move Conflict Strategy",
                  "displayName": "Move Conflict Strategy",
                  "description": "If Completion Strategy is set to Move File and a file already exists in the destination directory with the same name, this property specifies how that naming conflict should be resolved",
                  "defaultValue": "Rename",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Rename",
                        "value": "Rename",
                        "description": "The existing destination file should remain intact. The newly ingested file should be moved to the destination directory but be renamed to a random filename"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Replace File",
                        "value": "Replace File",
                        "description": "The newly ingested file should replace the existing file in the Destination Directory"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Keep Existing",
                        "value": "Keep Existing",
                        "description": "The existing file should in the Destination Directory should stay intact and the newly ingested file should be deleted"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Fail",
                        "value": "Fail",
                        "description": "The existing destination file should remain intact and the incoming FlowFile should be routed to failure"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Log level when file not found": {
                  "name": "Log level when file not found",
                  "displayName": "Log level when file not found",
                  "description": "Log level to use in case the file does not exist when the processor is triggered",
                  "defaultValue": "ERROR",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "TRACE",
                        "value": "TRACE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEBUG",
                        "value": "DEBUG"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "INFO",
                        "value": "INFO"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "WARN",
                        "value": "WARN"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ERROR",
                        "value": "ERROR"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FATAL",
                        "value": "FATAL"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Log level when permission denied": {
                  "name": "Log level when permission denied",
                  "displayName": "Log level when permission denied",
                  "description": "Log level to use in case user nifi does not have sufficient permissions to read the file",
                  "defaultValue": "ERROR",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "TRACE",
                        "value": "TRACE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEBUG",
                        "value": "DEBUG"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "INFO",
                        "value": "INFO"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "WARN",
                        "value": "WARN"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ERROR",
                        "value": "ERROR"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FATAL",
                        "value": "FATAL"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "66c7bfa4-015a-1000-ffff-ffffbf9b1dc4",
            "name": "FetchFile",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "66c7bfa4-015a-1000-ffff-ffffbf9b1dc4",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchFile",
              "type": "FetchFile",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e0664271-0159-1000-db71-4624a50c9d70",
            "version": 1
          },
          "id": "b7f11420-0158-1000-ffff-ffffdcb4aaa5",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/b7f11420-0158-1000-ffff-ffffdcb4aaa5",
          "position": {
            "x": -2377.7804260253906,
            "y": 16.584808349609375
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "b7f11420-0158-1000-ffff-ffffdcb4aaa5",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -2377.7804260253906,
              "y": 16.584808349609375
            },
            "name": "GetHDFS",
            "type": "org.apache.nifi.processors.hadoop.GetHDFS",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All files retrieved from HDFS are transferred to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/user/chefadmin/nifi/in",
                "Recurse Subdirectories": "true",
                "Keep Source File": "false",
                "File Filter Regex": "^.*[^_]$",
                "Filter Match Name Only": "true",
                "Ignore Dotted Files": "true",
                "Minimum File Age": "0 sec",
                "Maximum File Age": null,
                "Polling Interval": "0 sec",
                "Batch Size": "100",
                "IO Buffer Size": null,
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The HDFS directory from which files should be read",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Recurse Subdirectories": {
                  "name": "Recurse Subdirectories",
                  "displayName": "Recurse Subdirectories",
                  "description": "Indicates whether to pull files from subdirectories of the HDFS directory",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Keep Source File": {
                  "name": "Keep Source File",
                  "displayName": "Keep Source File",
                  "description": "Determines whether to delete the file from HDFS after it has been successfully transferred. If true, the file will be fetched repeatedly. This is intended for testing only.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "File Filter Regex": {
                  "name": "File Filter Regex",
                  "displayName": "File Filter Regex",
                  "description": "A Java Regular Expression for filtering Filenames; if a filter is supplied then only files whose names match that Regular Expression will be fetched, otherwise all files will be fetched",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Filter Match Name Only": {
                  "name": "Filter Match Name Only",
                  "displayName": "Filter Match Name Only",
                  "description": "If true then File Filter Regex will match on just the filename, otherwise subdirectory names will be included with filename in the regex comparison",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Ignore Dotted Files": {
                  "name": "Ignore Dotted Files",
                  "displayName": "Ignore Dotted Files",
                  "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum File Age": {
                  "name": "Minimum File Age",
                  "displayName": "Minimum File Age",
                  "description": "The minimum age that a file must be in order to be pulled; any file younger than this amount of time (based on last modification date) will be ignored",
                  "defaultValue": "0 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum File Age": {
                  "name": "Maximum File Age",
                  "displayName": "Maximum File Age",
                  "description": "The maximum age that a file must be in order to be pulled; any file older than this amount of time (based on last modification date) will be ignored",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Polling Interval": {
                  "name": "Polling Interval",
                  "displayName": "Polling Interval",
                  "description": "Indicates how long to wait between performing directory listings",
                  "defaultValue": "0 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "The maximum number of files to pull in each iteration, based on run schedule.",
                  "defaultValue": "100",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "b7f11420-0158-1000-ffff-ffffdcb4aaa5",
            "name": "GetHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "b7f11420-0158-1000-ffff-ffffdcb4aaa5",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetHDFS",
              "type": "GetHDFS",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "version": 0
          },
          "id": "29123db0-856e-1c88-0000-00000707924b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/29123db0-856e-1c88-0000-00000707924b",
          "position": {
            "x": 3150.651878049185,
            "y": 38.256142865122115
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "29123db0-856e-1c88-0000-00000707924b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 3150.651878049185,
              "y": 38.256142865122115
            },
            "name": "ListSFTP truconnect_etl@files.chartercom.com",
            "type": "org.apache.nifi.processors.standard.ListSFTP",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are received are routed to success",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": false,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": true,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "Hostname": "files.chartercom.com",
                "Port": "22",
                "Username": "truconnect_etl",
                "Password": "********",
                "Private Key Path": null,
                "Private Key Passphrase": null,
                "Remote Path": ".",
                "Distributed Cache Service": null,
                "Search Recursively": "false",
                "File Filter Regex": "TCT.*bz2",
                "Path Filter Regex": null,
                "Ignore Dotted Files": "true",
                "Strict Host Key Checking": "false",
                "Host Key File": null,
                "Connection Timeout": "30 sec",
                "Data Timeout": "30 sec",
                "Send Keep Alive On Timeout": "true"
              },
              "descriptors": {
                "Hostname": {
                  "name": "Hostname",
                  "displayName": "Hostname",
                  "description": "The fully qualified hostname or IP address of the remote system",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Port": {
                  "name": "Port",
                  "displayName": "Port",
                  "description": "The port to connect to on the remote host to fetch the data from",
                  "defaultValue": "22",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Username": {
                  "name": "Username",
                  "displayName": "Username",
                  "description": "Username",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Password": {
                  "name": "Password",
                  "displayName": "Password",
                  "description": "Password for the user account",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Path": {
                  "name": "Private Key Path",
                  "displayName": "Private Key Path",
                  "description": "The fully qualified path to the Private Key file",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Passphrase": {
                  "name": "Private Key Passphrase",
                  "displayName": "Private Key Passphrase",
                  "description": "Password for the private key",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Path": {
                  "name": "Remote Path",
                  "displayName": "Remote Path",
                  "description": "The path on the remote system from which to pull or push files",
                  "defaultValue": ".",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Distributed Cache Service": {
                  "name": "Distributed Cache Service",
                  "displayName": "Distributed Cache Service",
                  "description": "Specifies the Controller Service that should be used to maintain state about what has been pulled from the remote server so that if a new node begins pulling data, it won't duplicate all of the work that has been done. If not specified, the information will not be shared across the cluster. This property does not need to be set for standalone instances of NiFi but should be configured if NiFi is run within a cluster.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.distributed.cache.client.DistributedMapCacheClient"
                },
                "Search Recursively": {
                  "name": "Search Recursively",
                  "displayName": "Search Recursively",
                  "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "File Filter Regex": {
                  "name": "File Filter Regex",
                  "displayName": "File Filter Regex",
                  "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Path Filter Regex": {
                  "name": "Path Filter Regex",
                  "displayName": "Path Filter Regex",
                  "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Ignore Dotted Files": {
                  "name": "Ignore Dotted Files",
                  "displayName": "Ignore Dotted Files",
                  "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Strict Host Key Checking": {
                  "name": "Strict Host Key Checking",
                  "displayName": "Strict Host Key Checking",
                  "description": "Indicates whether or not strict enforcement of hosts keys should be applied",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Host Key File": {
                  "name": "Host Key File",
                  "displayName": "Host Key File",
                  "description": "If supplied, the given file will be used as the Host Key; otherwise, no use host key file will be used",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Connection Timeout": {
                  "name": "Connection Timeout",
                  "displayName": "Connection Timeout",
                  "description": "Amount of time to wait before timing out while creating a connection",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Data Timeout": {
                  "name": "Data Timeout",
                  "displayName": "Data Timeout",
                  "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Send Keep Alive On Timeout": {
                  "name": "Send Keep Alive On Timeout",
                  "displayName": "Send Keep Alive On Timeout",
                  "description": "Indicates whether or not to send a single Keep Alive message when SSH socket times out",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "PRIMARY_NODE_ONLY",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "29123db0-856e-1c88-0000-00000707924b",
            "name": "ListSFTP truconnect_etl@files.chartercom.com",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "29123db0-856e-1c88-0000-00000707924b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListSFTP truconnect_etl@files.chartercom.com",
              "type": "ListSFTP",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "5cd37522-015a-1000-6cb6-2f2b640fac1c",
            "version": 11
          },
          "id": "6e0c47a4-f622-17ad-0000-00005ce0c934",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/6e0c47a4-f622-17ad-0000-00005ce0c934",
          "position": {
            "x": 7058.221157889571,
            "y": 56.56385909899899
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "6e0c47a4-f622-17ad-0000-00005ce0c934",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 7058.221157889571,
              "y": 56.56385909899899
            },
            "name": "ListenHTTP",
            "type": "org.apache.nifi.processors.standard.ListenHTTP",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "Relationship for successfully received FlowFiles",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "Base Path": "cats_ingest",
                "Listening Port": "8082",
                "Max Data to Receive per Second": null,
                "SSL Context Service": null,
                "Authorized DN Pattern": ".*",
                "Max Unconfirmed Flowfile Time": "60 secs",
                "HTTP Headers to receive as Attributes (Regex)": ".*"
              },
              "descriptors": {
                "Base Path": {
                  "name": "Base Path",
                  "displayName": "Base Path",
                  "description": "Base path for incoming connections",
                  "defaultValue": "contentListener",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Listening Port": {
                  "name": "Listening Port",
                  "displayName": "Listening Port",
                  "description": "The Port to listen on for incoming connections",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Data to Receive per Second": {
                  "name": "Max Data to Receive per Second",
                  "displayName": "Max Data to Receive per Second",
                  "description": "The maximum amount of data to receive per second; this allows the bandwidth to be throttled to a specified data rate; if not specified, the data rate is not throttled",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "SSL Context Service": {
                  "name": "SSL Context Service",
                  "displayName": "SSL Context Service",
                  "description": "The Controller Service to use in order to obtain an SSL Context",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService"
                },
                "Authorized DN Pattern": {
                  "name": "Authorized DN Pattern",
                  "displayName": "Authorized DN Pattern",
                  "description": "A Regular Expression to apply against the Distinguished Name of incoming connections. If the Pattern does not match the DN, the connection will be refused.",
                  "defaultValue": ".*",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Unconfirmed Flowfile Time": {
                  "name": "Max Unconfirmed Flowfile Time",
                  "displayName": "Max Unconfirmed Flowfile Time",
                  "description": "The maximum amount of time to wait for a FlowFile to be confirmed before it is removed from the cache",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "HTTP Headers to receive as Attributes (Regex)": {
                  "name": "HTTP Headers to receive as Attributes (Regex)",
                  "displayName": "HTTP Headers to receive as Attributes (Regex)",
                  "description": "Specifies the Regular Expression that determines the names of HTTP Headers that should be passed along as FlowFile attributes",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "6e0c47a4-f622-17ad-0000-00005ce0c934",
            "name": "ListenHTTP",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "6e0c47a4-f622-17ad-0000-00005ce0c934",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListenHTTP",
              "type": "ListenHTTP",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 898,
              "tasksDurationNanos": 11875326,
              "tasks": "898",
              "tasksDuration": "00:00:00.011",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 101
          },
          "id": "f6fcddff-0159-1000-adf9-063fcff52548",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/f6fcddff-0159-1000-adf9-063fcff52548",
          "position": {
            "x": 9047.879559823321,
            "y": 1498.4117092809859
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "f6fcddff-0159-1000-adf9-063fcff52548",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 9047.879559823321,
              "y": 1498.4117092809859
            },
            "name": "ExecuteStreamCommand",
            "type": "org.apache.nifi.processors.standard.ExecuteStreamCommand",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "original",
                "description": "FlowFiles that were successfully processed",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Command Arguments": "enable;python27;\"python /home/nifi/s3-decryptor/decryptor.py -f '${datafile}' -s '${keyfile}' -k/home/nifi/.ssh/id_rsa_gv -d${s3-finished-dir}\"",
                "Command Path": "scl",
                "Ignore STDIN": "false",
                "Working Directory": null,
                "Argument Delimiter": ";",
                "Output Destination Attribute": "output",
                "Max Attribute Length": "256"
              },
              "descriptors": {
                "Command Arguments": {
                  "name": "Command Arguments",
                  "displayName": "Command Arguments",
                  "description": "The arguments to supply to the executable delimited by the ';' character.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Command Path": {
                  "name": "Command Path",
                  "displayName": "Command Path",
                  "description": "Specifies the command to be executed; if just the name of an executable is provided, it must be in the user's environment PATH.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Ignore STDIN": {
                  "name": "Ignore STDIN",
                  "displayName": "Ignore STDIN",
                  "description": "If true, the contents of the incoming flowfile will not be passed to the executing command",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Working Directory": {
                  "name": "Working Directory",
                  "displayName": "Working Directory",
                  "description": "The directory to use as the current working directory when executing the command",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Argument Delimiter": {
                  "name": "Argument Delimiter",
                  "displayName": "Argument Delimiter",
                  "description": "Delimiter to use to separate arguments for a command [default: ;]. Must be a single character",
                  "defaultValue": ";",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Output Destination Attribute": {
                  "name": "Output Destination Attribute",
                  "displayName": "Output Destination Attribute",
                  "description": "If set, the output of the stream command will be put into an attribute of the original FlowFile instead of a separate FlowFile. There will no longer be a relationship for 'output stream'. The value of this property will be the key for the output attribute.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Attribute Length": {
                  "name": "Max Attribute Length",
                  "displayName": "Max Attribute Length",
                  "description": "If routing the output of the stream command to an attribute, the number of characters put to the attribute value will be at most this amount. This is important because attributes are held in memory and large attributes will quickly cause out of memory issues. If the output goes longer than this value, it will truncated to fit. Consider making this smaller if able.",
                  "defaultValue": "256",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "f6fcddff-0159-1000-adf9-063fcff52548",
            "name": "ExecuteStreamCommand",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "f6fcddff-0159-1000-adf9-063fcff52548",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExecuteStreamCommand",
              "type": "ExecuteStreamCommand",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 7
          },
          "id": "8ee6432d-0159-1000-0000-00007be84223",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/8ee6432d-0159-1000-0000-00007be84223",
          "position": {
            "x": 2156.7632844188274,
            "y": 41.70743927825154
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "8ee6432d-0159-1000-0000-00007be84223",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 2156.7632844188274,
              "y": 41.70743927825154
            },
            "name": "ListS3 pi-wireless bucket",
            "type": "org.apache.nifi.processors.aws.s3.ListS3",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "FlowFiles are routed to success relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": false,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": true,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "Bucket": "pi-wireless",
                "Region": "us-east-1",
                "Access Key": "********",
                "Secret Key": "********",
                "Credentials File": null,
                "AWS Credentials Provider service": null,
                "Communications Timeout": "30 secs",
                "SSL Context Service": null,
                "Endpoint Override URL": "https://s3.amazonaws.com/",
                "Signer Override": "Default Signature",
                "Proxy Host": null,
                "Proxy Host Port": null,
                "delimiter": null,
                "prefix": null,
                "use-versions": "false"
              },
              "descriptors": {
                "Bucket": {
                  "name": "Bucket",
                  "displayName": "Bucket",
                  "description": "",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Region": {
                  "name": "Region",
                  "displayName": "Region",
                  "description": "",
                  "defaultValue": "us-west-2",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "us-gov-west-1",
                        "value": "us-gov-west-1",
                        "description": "us-gov-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-east-1",
                        "value": "us-east-1",
                        "description": "us-east-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-west-1",
                        "value": "us-west-1",
                        "description": "us-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-west-2",
                        "value": "us-west-2",
                        "description": "us-west-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "eu-west-1",
                        "value": "eu-west-1",
                        "description": "eu-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "eu-central-1",
                        "value": "eu-central-1",
                        "description": "eu-central-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-southeast-1",
                        "value": "ap-southeast-1",
                        "description": "ap-southeast-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-southeast-2",
                        "value": "ap-southeast-2",
                        "description": "ap-southeast-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-northeast-1",
                        "value": "ap-northeast-1",
                        "description": "ap-northeast-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-northeast-2",
                        "value": "ap-northeast-2",
                        "description": "ap-northeast-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "sa-east-1",
                        "value": "sa-east-1",
                        "description": "sa-east-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "cn-north-1",
                        "value": "cn-north-1",
                        "description": "cn-north-1"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Access Key": {
                  "name": "Access Key",
                  "displayName": "Access Key",
                  "description": "",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Secret Key": {
                  "name": "Secret Key",
                  "displayName": "Secret Key",
                  "description": "",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Credentials File": {
                  "name": "Credentials File",
                  "displayName": "Credentials File",
                  "description": "Path to a file containing AWS access key and secret key in properties file format.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "AWS Credentials Provider service": {
                  "name": "AWS Credentials Provider service",
                  "displayName": "AWS Credentials Provider service",
                  "description": "The Controller Service that is used to obtain aws credentials provider",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService"
                },
                "Communications Timeout": {
                  "name": "Communications Timeout",
                  "displayName": "Communications Timeout",
                  "description": "",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "SSL Context Service": {
                  "name": "SSL Context Service",
                  "displayName": "SSL Context Service",
                  "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService"
                },
                "Endpoint Override URL": {
                  "name": "Endpoint Override URL",
                  "displayName": "Endpoint Override URL",
                  "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Signer Override": {
                  "name": "Signer Override",
                  "displayName": "Signer Override",
                  "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                  "defaultValue": "Default Signature",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Default Signature",
                        "value": "Default Signature"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Signature v4",
                        "value": "AWSS3V4SignerType"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Signature v2",
                        "value": "S3SignerType"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Proxy Host": {
                  "name": "Proxy Host",
                  "displayName": "Proxy Host",
                  "description": "Proxy host name or IP",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Proxy Host Port": {
                  "name": "Proxy Host Port",
                  "displayName": "Proxy Host Port",
                  "description": "Proxy host port",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "delimiter": {
                  "name": "delimiter",
                  "displayName": "Delimiter",
                  "description": "The string used to delimit directories within the bucket. Please consult the AWS documentation for the correct use of this field.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "prefix": {
                  "name": "prefix",
                  "displayName": "Prefix",
                  "description": "The prefix used to filter the object list. In most cases, it should end with a forward slash ('/').",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "use-versions": {
                  "name": "use-versions",
                  "displayName": "Use Versions",
                  "description": "Specifies whether to use S3 versions, if applicable.  If false, only the latest version of each object will be returned.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "3600 sec",
              "schedulingStrategy": "PRIMARY_NODE_ONLY",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "8ee6432d-0159-1000-0000-00007be84223",
            "name": "ListS3 pi-wireless bucket",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "8ee6432d-0159-1000-0000-00007be84223",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListS3 pi-wireless bucket",
              "type": "ListS3",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 15
          },
          "id": "76da3475-2307-11d6-af57-4a9cf1c8c0a8",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/76da3475-2307-11d6-af57-4a9cf1c8c0a8",
          "position": {
            "x": 4643.736647436408,
            "y": 42.35841158059469
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "76da3475-2307-11d6-af57-4a9cf1c8c0a8",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 4643.736647436408,
              "y": 42.35841158059469
            },
            "name": "GetXGAnalyticsKafka - staging venona_finished_messages",
            "type": "org.apache.nifi.processors.kafka.GetKafka",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are created are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "ZooKeeper Connection String": "zookeeper.xganalytics.io:2181",
                "Topic Name": "venona_finished_messages_avro_9B71F1F26C65EC48006D80ED957A9511",
                "Zookeeper Commit Frequency": "60 secs",
                "Batch Size": "1",
                "Message Demarcator": "\\n",
                "Client Name": "NiFi-f4b3e296-0158-1000-0000-00003aeefad8",
                "Group ID": "76da3475-2307-11d6-af57-4a9cf1c8c0a8",
                "Kafka Communications Timeout": "30 secs",
                "ZooKeeper Communications Timeout": "30 secs",
                "Auto Offset Reset": "smallest",
                "zookeeper.connection.timeout.ms": "15000",
                "zookeeper.session.timeout.ms": "15000"
              },
              "descriptors": {
                "ZooKeeper Connection String": {
                  "name": "ZooKeeper Connection String",
                  "displayName": "ZooKeeper Connection String",
                  "description": "The Connection String to use in order to connect to ZooKeeper. This is often a comma-separated list of <host>:<port> combinations. For example, host1:2181,host2:2181,host3:2188",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Topic Name": {
                  "name": "Topic Name",
                  "displayName": "Topic Name",
                  "description": "The Kafka Topic to pull messages from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Zookeeper Commit Frequency": {
                  "name": "Zookeeper Commit Frequency",
                  "displayName": "Zookeeper Commit Frequency",
                  "description": "Specifies how often to communicate with ZooKeeper to indicate which messages have been pulled. A longer time period will result in better overall performance but can result in more data duplication if a NiFi node is lost",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "Specifies the maximum number of messages to combine into a single FlowFile. These messages will be concatenated together with the <Message Demarcator> string placed between the content of each message. If the messages from Kafka should not be concatenated together, leave this value at 1.",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Message Demarcator": {
                  "name": "Message Demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the characters to use in order to demarcate multiple messages from Kafka. If the <Batch Size> property is set to 1, this value is ignored. Otherwise, for each two subsequent messages in the batch, this value will be placed in between them.",
                  "defaultValue": "\\n",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Client Name": {
                  "name": "Client Name",
                  "displayName": "Client Name",
                  "description": "Client Name to use when communicating with Kafka",
                  "defaultValue": "NiFi-76da3475-2307-11d6-af57-4a9cf1c8c0a8",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Group ID": {
                  "name": "Group ID",
                  "displayName": "Group ID",
                  "description": "A Group ID is used to identify consumers that are within the same consumer group",
                  "defaultValue": "76da3475-2307-11d6-af57-4a9cf1c8c0a8",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kafka Communications Timeout": {
                  "name": "Kafka Communications Timeout",
                  "displayName": "Kafka Communications Timeout",
                  "description": "The amount of time to wait for a response from Kafka before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "ZooKeeper Communications Timeout": {
                  "name": "ZooKeeper Communications Timeout",
                  "displayName": "ZooKeeper Communications Timeout",
                  "description": "The amount of time to wait for a response from ZooKeeper before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Auto Offset Reset": {
                  "name": "Auto Offset Reset",
                  "displayName": "Auto Offset Reset",
                  "description": "Automatically reset the offset to the smallest or largest offset available on the broker",
                  "defaultValue": "largest",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "smallest",
                        "value": "smallest"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "largest",
                        "value": "largest"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "zookeeper.connection.timeout.ms": {
                  "name": "zookeeper.connection.timeout.ms",
                  "displayName": "zookeeper.connection.timeout.ms",
                  "description": "Specifies the value for 'zookeeper.connection.timeout.ms' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "zookeeper.session.timeout.ms": {
                  "name": "zookeeper.session.timeout.ms",
                  "displayName": "zookeeper.session.timeout.ms",
                  "description": "Specifies the value for 'zookeeper.session.timeout.ms' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "300 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 2000,
              "concurrentlySchedulableTaskCount": 32,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "76da3475-2307-11d6-af57-4a9cf1c8c0a8",
            "name": "GetXGAnalyticsKafka - staging venona_finished_messages",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "76da3475-2307-11d6-af57-4a9cf1c8c0a8",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetXGAnalyticsKafka - staging venona_finished_messages",
              "type": "GetKafka",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 10788209,
              "read": "0 bytes",
              "written": "10.29 MB",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 390,
              "bytesOut": 10788209,
              "output": "390 (10.29 MB)",
              "taskCount": 110517,
              "tasksDurationNanos": 192481563202,
              "tasks": "110,517",
              "tasksDuration": "00:03:12.481",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "29263fa8-aa65-130e-adb4-8bdcfb0499fa",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/29263fa8-aa65-130e-adb4-8bdcfb0499fa",
          "position": {
            "x": 5434.404613590735,
            "y": 518.8136104338566
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "29263fa8-aa65-130e-adb4-8bdcfb0499fa",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 5434.404613590735,
              "y": 518.8136104338566
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "venona_error_${UUID()}.avro"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "29263fa8-aa65-130e-adb4-8bdcfb0499fa",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "29263fa8-aa65-130e-adb4-8bdcfb0499fa",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6649ea2a-015a-1000-44a3-292baef40f2b",
            "version": 25
          },
          "id": "48fe8692-015a-1000-b354-5eec57a27b34",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/48fe8692-015a-1000-b354-5eec57a27b34",
          "position": {
            "x": 8225.765251583478,
            "y": 898.5665481008798
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48fe8692-015a-1000-b354-5eec57a27b34",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8225.765251583478,
              "y": 898.5665481008798
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "${filename:substringAfterLast('/'):replaceAll(':', '-')}"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "48fe8692-015a-1000-b354-5eec57a27b34",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "48fe8692-015a-1000-b354-5eec57a27b34",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 4
          },
          "id": "316b35c2-801b-102f-80d1-f2a408dae33e",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/316b35c2-801b-102f-80d1-f2a408dae33e",
          "position": {
            "x": 1185.6062388119885,
            "y": 277.9659494392092
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "316b35c2-801b-102f-80d1-f2a408dae33e",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 1185.6062388119885,
              "y": 277.9659494392092
            },
            "name": "MergeContent",
            "type": "org.apache.nifi.processors.standard.MergeContent",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure",
                "autoTerminate": true
              },
              {
                "name": "merged",
                "description": "The FlowFile containing the merged content",
                "autoTerminate": false
              },
              {
                "name": "original",
                "description": "The FlowFiles that were used to create the bundle",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Merge Strategy": "Bin-Packing Algorithm",
                "Merge Format": "Avro",
                "Attribute Strategy": "Keep All Unique Attributes",
                "Correlation Attribute Name": null,
                "Minimum Number of Entries": "200000",
                "Maximum Number of Entries": "400000",
                "Minimum Group Size": "0 B",
                "Maximum Group Size": null,
                "Max Bin Age": "1 hour",
                "Maximum number of Bins": "5",
                "Delimiter Strategy": "Filename",
                "Header File": null,
                "Footer File": null,
                "Demarcator File": null,
                "Compression Level": "1",
                "Keep Path": "false"
              },
              "descriptors": {
                "Merge Strategy": {
                  "name": "Merge Strategy",
                  "displayName": "Merge Strategy",
                  "description": "Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles",
                  "defaultValue": "Bin-Packing Algorithm",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Bin-Packing Algorithm",
                        "value": "Bin-Packing Algorithm",
                        "description": "Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the <Correlation Attribute> property is set)"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Defragment",
                        "value": "Defragment",
                        "description": "Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes <fragment.identifier>, <fragment.count>, and <fragment.index> or alternatively (for backward compatibility purposes) <segment.identifier>, <segment.count>, and <segment.index>. All FlowFiles with the same value for \"fragment.identifier\" will be grouped together. All FlowFiles in this group must have the same value for the \"fragment.count\" attribute. All FlowFiles in this group must have a unique value for the \"fragment.index\" attribute between 0 and the value of the \"fragment.count\" attribute."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Merge Format": {
                  "name": "Merge Format",
                  "displayName": "Merge Format",
                  "description": "Determines the format that will be used to merge the content.",
                  "defaultValue": "Binary Concatenation",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "TAR",
                        "value": "TAR",
                        "description": "A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' <path> attribute will be used to create a directory in the TAR file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named <tar.permissions> that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ZIP",
                        "value": "ZIP",
                        "description": "A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' <path> attribute will be used to create a directory in the ZIP file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The <Compression Level> property indicates the ZIP compression to use."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v3",
                        "value": "FlowFile Stream, v3",
                        "description": "A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v2",
                        "value": "FlowFile Stream, v2",
                        "description": "A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Tar, v1",
                        "value": "FlowFile Tar, v1",
                        "description": "A bin of FlowFiles will be combined into a single Version 1 FlowFile Package"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Binary Concatenation",
                        "value": "Binary Concatenation",
                        "description": "The contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Avro",
                        "value": "Avro",
                        "description": "The Avro contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Attribute Strategy": {
                  "name": "Attribute Strategy",
                  "displayName": "Attribute Strategy",
                  "description": "Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.",
                  "defaultValue": "Keep Only Common Attributes",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Keep Only Common Attributes",
                        "value": "Keep Only Common Attributes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Keep All Unique Attributes",
                        "value": "Keep All Unique Attributes"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Correlation Attribute Name": {
                  "name": "Correlation Attribute Name",
                  "displayName": "Correlation Attribute Name",
                  "description": "If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Minimum Number of Entries": {
                  "name": "Minimum Number of Entries",
                  "displayName": "Minimum Number of Entries",
                  "description": "The minimum number of files to include in a bundle",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Number of Entries": {
                  "name": "Maximum Number of Entries",
                  "displayName": "Maximum Number of Entries",
                  "description": "The maximum number of files to include in a bundle. If not specified, there is no maximum.",
                  "defaultValue": "1000",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum Group Size": {
                  "name": "Minimum Group Size",
                  "displayName": "Minimum Group Size",
                  "description": "The minimum size of for the bundle",
                  "defaultValue": "0 B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Group Size": {
                  "name": "Maximum Group Size",
                  "displayName": "Maximum Group Size",
                  "description": "The maximum size for the bundle. If not specified, there is no maximum.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Bin Age": {
                  "name": "Max Bin Age",
                  "displayName": "Max Bin Age",
                  "description": "The maximum age of a Bin that will trigger a Bin to be complete. Expected format is <duration> <time unit> where <duration> is a positive integer and time unit is one of seconds, minutes, hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum number of Bins": {
                  "name": "Maximum number of Bins",
                  "displayName": "Maximum number of Bins",
                  "description": "Specifies the maximum number of bins that can be held in memory at any one time",
                  "defaultValue": "5",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Delimiter Strategy": {
                  "name": "Delimiter Strategy",
                  "displayName": "Delimiter Strategy",
                  "description": "Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.",
                  "defaultValue": "Filename",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Filename",
                        "value": "Filename",
                        "description": "The values of Header, Footer, and Demarcator will be retrieved from the contents of a file"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text",
                        "description": "The values of Header, Footer, and Demarcator will be specified as property values"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Header File": {
                  "name": "Header File",
                  "displayName": "Header",
                  "description": "Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Footer File": {
                  "name": "Footer File",
                  "displayName": "Footer",
                  "description": "Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Demarcator File": {
                  "name": "Demarcator File",
                  "displayName": "Demarcator",
                  "description": "Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Compression Level": {
                  "name": "Compression Level",
                  "displayName": "Compression Level",
                  "description": "Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored",
                  "defaultValue": "1",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "0",
                        "value": "0"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "1",
                        "value": "1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "2",
                        "value": "2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "3",
                        "value": "3"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "4",
                        "value": "4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "5",
                        "value": "5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "6",
                        "value": "6"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "7",
                        "value": "7"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "8",
                        "value": "8"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "9",
                        "value": "9"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Keep Path": {
                  "name": "Keep Path",
                  "displayName": "Keep Path",
                  "description": "If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "316b35c2-801b-102f-80d1-f2a408dae33e",
            "name": "MergeContent",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "316b35c2-801b-102f-80d1-f2a408dae33e",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "type": "MergeContent",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 1060,
              "tasksDurationNanos": 170903059,
              "tasks": "1,060",
              "tasksDuration": "00:00:00.170",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 10
          },
          "id": "45223a78-0257-1985-b532-e9a1ef2c61d6",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/45223a78-0257-1985-b532-e9a1ef2c61d6",
          "position": {
            "x": 364.3658858539957,
            "y": 974.2588176611973
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "45223a78-0257-1985-b532-e9a1ef2c61d6",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 364.3658858539957,
              "y": 974.2588176611973
            },
            "name": "ConvertAvroSchema",
            "type": "org.apache.nifi.processors.kite.ConvertAvroSchema",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Avro content that failed to convert",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Avro content that converted successfully",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Input Schema": "${avro.schema}",
                "Output Schema": "${avro.schema}",
                "Locale": "default",
                "kite-compression-type": "DEFLATE"
              },
              "descriptors": {
                "Input Schema": {
                  "name": "Input Schema",
                  "displayName": "Input Schema",
                  "description": "Avro Schema of Input Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Output Schema": {
                  "name": "Output Schema",
                  "displayName": "Output Schema",
                  "description": "Avro Schema of Output Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Locale": {
                  "name": "Locale",
                  "displayName": "Locale",
                  "description": "Locale to use for scanning data (see https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html)or \" default\" for JVM default",
                  "defaultValue": "default",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "kite-compression-type": {
                  "name": "kite-compression-type",
                  "displayName": "Compression type",
                  "description": "Compression type to use when writting Avro files. Default is Snappy.",
                  "defaultValue": "SNAPPY",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "BZIP2",
                        "value": "BZIP2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFLATE",
                        "value": "DEFLATE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZO",
                        "value": "LZO"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "45223a78-0257-1985-b532-e9a1ef2c61d6",
            "name": "ConvertAvroSchema",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "45223a78-0257-1985-b532-e9a1ef2c61d6",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "type": "ConvertAvroSchema",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 23
          },
          "id": "e9963c5c-3f71-1869-9bb3-10ea3cccb612",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/e9963c5c-3f71-1869-9bb3-10ea3cccb612",
          "position": {
            "x": 8655.883983161635,
            "y": 2503.1774303122875
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e9963c5c-3f71-1869-9bb3-10ea3cccb612",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8655.883983161635,
              "y": 2503.1774303122875
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/apps/hive/warehouse/tmp.db/${hdfs-table-name}",
                "Conflict Resolution Strategy": "replace",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "e9963c5c-3f71-1869-9bb3-10ea3cccb612",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "e9963c5c-3f71-1869-9bb3-10ea3cccb612",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "aeff4253-2604-1e1f-60bd-8d385f539e16",
            "version": 16
          },
          "id": "a79034f8-39c6-1c38-a962-b5ea7dca0914",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/a79034f8-39c6-1c38-a962-b5ea7dca0914",
          "position": {
            "x": 1580.397899622813,
            "y": 1185.7342786831118
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a79034f8-39c6-1c38-a962-b5ea7dca0914",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 1580.397899622813,
              "y": 1185.7342786831118
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/video_error_977FC20E5971627026E12B03BDF7914E/partition_date=${now():plus(21600000):format('yyyy-MM-dd')}/partition_hour=${now():plus(21600000):format('HH')}",
                "Conflict Resolution Strategy": "fail",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "a79034f8-39c6-1c38-a962-b5ea7dca0914",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "a79034f8-39c6-1c38-a962-b5ea7dca0914",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 6
          },
          "id": "8f033ce9-3bbb-16dc-91d0-90dfe5a74aec",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/8f033ce9-3bbb-16dc-91d0-90dfe5a74aec",
          "position": {
            "x": 5432.899085046124,
            "y": 261.74608379543605
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "8f033ce9-3bbb-16dc-91d0-90dfe5a74aec",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 5432.899085046124,
              "y": 261.74608379543605
            },
            "name": "MergeContent",
            "type": "org.apache.nifi.processors.standard.MergeContent",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure",
                "autoTerminate": true
              },
              {
                "name": "merged",
                "description": "The FlowFile containing the merged content",
                "autoTerminate": false
              },
              {
                "name": "original",
                "description": "The FlowFiles that were used to create the bundle",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Merge Strategy": "Bin-Packing Algorithm",
                "Merge Format": "Avro",
                "Attribute Strategy": "Keep All Unique Attributes",
                "Correlation Attribute Name": null,
                "Minimum Number of Entries": "200000",
                "Maximum Number of Entries": "400000",
                "Minimum Group Size": "100 MB",
                "Maximum Group Size": null,
                "Max Bin Age": "1 hour",
                "Maximum number of Bins": "5",
                "Delimiter Strategy": "Filename",
                "Header File": null,
                "Footer File": null,
                "Demarcator File": null,
                "Compression Level": "1",
                "Keep Path": "false"
              },
              "descriptors": {
                "Merge Strategy": {
                  "name": "Merge Strategy",
                  "displayName": "Merge Strategy",
                  "description": "Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles",
                  "defaultValue": "Bin-Packing Algorithm",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Bin-Packing Algorithm",
                        "value": "Bin-Packing Algorithm",
                        "description": "Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the <Correlation Attribute> property is set)"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Defragment",
                        "value": "Defragment",
                        "description": "Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes <fragment.identifier>, <fragment.count>, and <fragment.index> or alternatively (for backward compatibility purposes) <segment.identifier>, <segment.count>, and <segment.index>. All FlowFiles with the same value for \"fragment.identifier\" will be grouped together. All FlowFiles in this group must have the same value for the \"fragment.count\" attribute. All FlowFiles in this group must have a unique value for the \"fragment.index\" attribute between 0 and the value of the \"fragment.count\" attribute."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Merge Format": {
                  "name": "Merge Format",
                  "displayName": "Merge Format",
                  "description": "Determines the format that will be used to merge the content.",
                  "defaultValue": "Binary Concatenation",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "TAR",
                        "value": "TAR",
                        "description": "A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' <path> attribute will be used to create a directory in the TAR file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named <tar.permissions> that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ZIP",
                        "value": "ZIP",
                        "description": "A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' <path> attribute will be used to create a directory in the ZIP file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The <Compression Level> property indicates the ZIP compression to use."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v3",
                        "value": "FlowFile Stream, v3",
                        "description": "A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v2",
                        "value": "FlowFile Stream, v2",
                        "description": "A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Tar, v1",
                        "value": "FlowFile Tar, v1",
                        "description": "A bin of FlowFiles will be combined into a single Version 1 FlowFile Package"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Binary Concatenation",
                        "value": "Binary Concatenation",
                        "description": "The contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Avro",
                        "value": "Avro",
                        "description": "The Avro contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Attribute Strategy": {
                  "name": "Attribute Strategy",
                  "displayName": "Attribute Strategy",
                  "description": "Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.",
                  "defaultValue": "Keep Only Common Attributes",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Keep Only Common Attributes",
                        "value": "Keep Only Common Attributes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Keep All Unique Attributes",
                        "value": "Keep All Unique Attributes"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Correlation Attribute Name": {
                  "name": "Correlation Attribute Name",
                  "displayName": "Correlation Attribute Name",
                  "description": "If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Minimum Number of Entries": {
                  "name": "Minimum Number of Entries",
                  "displayName": "Minimum Number of Entries",
                  "description": "The minimum number of files to include in a bundle",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Number of Entries": {
                  "name": "Maximum Number of Entries",
                  "displayName": "Maximum Number of Entries",
                  "description": "The maximum number of files to include in a bundle. If not specified, there is no maximum.",
                  "defaultValue": "1000",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum Group Size": {
                  "name": "Minimum Group Size",
                  "displayName": "Minimum Group Size",
                  "description": "The minimum size of for the bundle",
                  "defaultValue": "0 B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Group Size": {
                  "name": "Maximum Group Size",
                  "displayName": "Maximum Group Size",
                  "description": "The maximum size for the bundle. If not specified, there is no maximum.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Bin Age": {
                  "name": "Max Bin Age",
                  "displayName": "Max Bin Age",
                  "description": "The maximum age of a Bin that will trigger a Bin to be complete. Expected format is <duration> <time unit> where <duration> is a positive integer and time unit is one of seconds, minutes, hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum number of Bins": {
                  "name": "Maximum number of Bins",
                  "displayName": "Maximum number of Bins",
                  "description": "Specifies the maximum number of bins that can be held in memory at any one time",
                  "defaultValue": "5",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Delimiter Strategy": {
                  "name": "Delimiter Strategy",
                  "displayName": "Delimiter Strategy",
                  "description": "Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.",
                  "defaultValue": "Filename",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Filename",
                        "value": "Filename",
                        "description": "The values of Header, Footer, and Demarcator will be retrieved from the contents of a file"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text",
                        "description": "The values of Header, Footer, and Demarcator will be specified as property values"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Header File": {
                  "name": "Header File",
                  "displayName": "Header",
                  "description": "Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Footer File": {
                  "name": "Footer File",
                  "displayName": "Footer",
                  "description": "Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Demarcator File": {
                  "name": "Demarcator File",
                  "displayName": "Demarcator",
                  "description": "Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Compression Level": {
                  "name": "Compression Level",
                  "displayName": "Compression Level",
                  "description": "Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored",
                  "defaultValue": "1",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "0",
                        "value": "0"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "1",
                        "value": "1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "2",
                        "value": "2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "3",
                        "value": "3"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "4",
                        "value": "4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "5",
                        "value": "5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "6",
                        "value": "6"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "7",
                        "value": "7"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "8",
                        "value": "8"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "9",
                        "value": "9"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Keep Path": {
                  "name": "Keep Path",
                  "displayName": "Keep Path",
                  "description": "If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "8f033ce9-3bbb-16dc-91d0-90dfe5a74aec",
            "name": "MergeContent",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "8f033ce9-3bbb-16dc-91d0-90dfe5a74aec",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "type": "MergeContent",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 474,
              "tasksDurationNanos": 20212290,
              "tasks": "474",
              "tasksDuration": "00:00:00.020",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 4
          },
          "id": "d733624c-0159-1000-ffff-ffffe20fd6c5",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/d733624c-0159-1000-ffff-ffffe20fd6c5",
          "position": {
            "x": 3913.1598912014006,
            "y": 721.6299750899282
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "d733624c-0159-1000-ffff-ffffe20fd6c5",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 3913.1598912014006,
              "y": 721.6299750899282
            },
            "name": "CompressContent",
            "type": "org.apache.nifi.processors.standard.CompressContent",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "FlowFiles will be transferred to the failure relationship if they fail to compress/decompress",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles will be transferred to the success relationship after successfully being compressed or decompressed",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Mode": "decompress",
                "Compression Format": "gzip",
                "Compression Level": "1",
                "Update Filename": "true"
              },
              "descriptors": {
                "Mode": {
                  "name": "Mode",
                  "displayName": "Mode",
                  "description": "Indicates whether the processor should compress content or decompress content. Must be either 'compress' or 'decompress'",
                  "defaultValue": "compress",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "compress",
                        "value": "compress"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "decompress",
                        "value": "decompress"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression Format": {
                  "name": "Compression Format",
                  "displayName": "Compression Format",
                  "description": "The compression format to use. Valid values are: GZIP, BZIP2, XZ-LZMA2, LZMA, Snappy, and Snappy Framed",
                  "defaultValue": "use mime.type attribute",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "use mime.type attribute",
                        "value": "use mime.type attribute"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "gzip",
                        "value": "gzip"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "bzip2",
                        "value": "bzip2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "xz-lzma2",
                        "value": "xz-lzma2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "lzma",
                        "value": "lzma"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "snappy",
                        "value": "snappy"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "snappy framed",
                        "value": "snappy framed"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression Level": {
                  "name": "Compression Level",
                  "displayName": "Compression Level",
                  "description": "The compression level to use; this is valid only when using GZIP compression. A lower value results in faster processing but less compression; a value of 0 indicates no compression but simply archiving",
                  "defaultValue": "1",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "0",
                        "value": "0"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "1",
                        "value": "1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "2",
                        "value": "2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "3",
                        "value": "3"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "4",
                        "value": "4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "5",
                        "value": "5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "6",
                        "value": "6"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "7",
                        "value": "7"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "8",
                        "value": "8"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "9",
                        "value": "9"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Update Filename": {
                  "name": "Update Filename",
                  "displayName": "Update Filename",
                  "description": "If true, will remove the filename extension when decompressing data (only if the extension indicates the appropriate compression format) and add the appropriate extension when compressing data",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "d733624c-0159-1000-ffff-ffffe20fd6c5",
            "name": "CompressContent",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "d733624c-0159-1000-ffff-ffffe20fd6c5",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "CompressContent",
              "type": "CompressContent",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 70
          },
          "id": "669e7cc5-015a-1000-ffff-ffff8ee0e387",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/669e7cc5-015a-1000-ffff-ffff8ee0e387",
          "position": {
            "x": 8222.362611941116,
            "y": 1738.0154169208515
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "669e7cc5-015a-1000-ffff-ffff8ee0e387",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8222.362611941116,
              "y": 1738.0154169208515
            },
            "name": "ListFile",
            "type": "org.apache.nifi.processors.standard.ListFile",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are received are routed to success",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": false,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": true,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "Input Directory": "/data/nifi/s3_decryption_downloads/s3_decrypted_output",
                "Recurse Subdirectories": "false",
                "Input Directory Location": "Local",
                "File Filter": ".*.enc.dec",
                "Path Filter": null,
                "Minimum File Age": "0 sec",
                "Maximum File Age": null,
                "Minimum File Size": "0 B",
                "Maximum File Size": null,
                "Ignore Hidden Files": "true"
              },
              "descriptors": {
                "Input Directory": {
                  "name": "Input Directory",
                  "displayName": "Input Directory",
                  "description": "The input directory from which files to pull files",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Recurse Subdirectories": {
                  "name": "Recurse Subdirectories",
                  "displayName": "Recurse Subdirectories",
                  "description": "Indicates whether to list files from subdirectories of the directory",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Input Directory Location": {
                  "name": "Input Directory Location",
                  "displayName": "Input Directory Location",
                  "description": "Specifies where the Input Directory is located. This is used to determine whether state should be stored locally or across the cluster.",
                  "defaultValue": "Local",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Local",
                        "value": "Local",
                        "description": "Input Directory is located on a local disk. State will be stored locally on each node in the cluster."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Remote",
                        "value": "Remote",
                        "description": "Input Directory is located on a remote system. State will be stored across the cluster so that the listing can be performed on Primary Node Only and another node can pick up where the last node left off, if the Primary Node changes"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "File Filter": {
                  "name": "File Filter",
                  "displayName": "File Filter",
                  "description": "Only files whose names match the given regular expression will be picked up",
                  "defaultValue": "[^\\.].*",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Path Filter": {
                  "name": "Path Filter",
                  "displayName": "Path Filter",
                  "description": "When Recurse Subdirectories is true, then only subdirectories whose path matches the given regular expression will be scanned",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum File Age": {
                  "name": "Minimum File Age",
                  "displayName": "Minimum File Age",
                  "description": "The minimum age that a file must be in order to be pulled; any file younger than this amount of time (according to last modification date) will be ignored",
                  "defaultValue": "0 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum File Age": {
                  "name": "Maximum File Age",
                  "displayName": "Maximum File Age",
                  "description": "The maximum age that a file must be in order to be pulled; any file older than this amount of time (according to last modification date) will be ignored",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum File Size": {
                  "name": "Minimum File Size",
                  "displayName": "Minimum File Size",
                  "description": "The minimum size that a file must be in order to be pulled",
                  "defaultValue": "0 B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum File Size": {
                  "name": "Maximum File Size",
                  "displayName": "Maximum File Size",
                  "description": "The maximum size that a file can be in order to be pulled",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Ignore Hidden Files": {
                  "name": "Ignore Hidden Files",
                  "displayName": "Ignore Hidden Files",
                  "description": "Indicates whether or not hidden files should be ignored",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "669e7cc5-015a-1000-ffff-ffff8ee0e387",
            "name": "ListFile",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "669e7cc5-015a-1000-ffff-ffff8ee0e387",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListFile",
              "type": "ListFile",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 896,
              "tasksDurationNanos": 795078910,
              "tasks": "896",
              "tasksDuration": "00:00:00.795",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "version": 0
          },
          "id": "2e403b0b-ea71-1b91-8aaa-ba8a3cd173f5",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/2e403b0b-ea71-1b91-8aaa-ba8a3cd173f5",
          "position": {
            "x": 4118.2323745352005,
            "y": 253.1238643089747
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "2e403b0b-ea71-1b91-8aaa-ba8a3cd173f5",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 4118.2323745352005,
              "y": 253.1238643089747
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "ftp_path": "/On2/twrd/${filename}"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "ftp_path": {
                  "name": "ftp_path",
                  "displayName": "ftp_path",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "2e403b0b-ea71-1b91-8aaa-ba8a3cd173f5",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "2e403b0b-ea71-1b91-8aaa-ba8a3cd173f5",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 7
          },
          "id": "a397371a-a1d2-170b-bf8c-0aaa11e157a6",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/a397371a-a1d2-170b-bf8c-0aaa11e157a6",
          "position": {
            "x": 4640.118323327374,
            "y": 267.276227533229
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a397371a-a1d2-170b-bf8c-0aaa11e157a6",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 4640.118323327374,
              "y": 267.276227533229
            },
            "name": "MergeContent",
            "type": "org.apache.nifi.processors.standard.MergeContent",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure",
                "autoTerminate": true
              },
              {
                "name": "merged",
                "description": "The FlowFile containing the merged content",
                "autoTerminate": false
              },
              {
                "name": "original",
                "description": "The FlowFiles that were used to create the bundle",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Merge Strategy": "Bin-Packing Algorithm",
                "Merge Format": "Avro",
                "Attribute Strategy": "Keep All Unique Attributes",
                "Correlation Attribute Name": null,
                "Minimum Number of Entries": "200000",
                "Maximum Number of Entries": "400000",
                "Minimum Group Size": "100 MB",
                "Maximum Group Size": null,
                "Max Bin Age": "1 hr",
                "Maximum number of Bins": "5",
                "Delimiter Strategy": "Filename",
                "Header File": null,
                "Footer File": null,
                "Demarcator File": null,
                "Compression Level": "1",
                "Keep Path": "false"
              },
              "descriptors": {
                "Merge Strategy": {
                  "name": "Merge Strategy",
                  "displayName": "Merge Strategy",
                  "description": "Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles",
                  "defaultValue": "Bin-Packing Algorithm",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Bin-Packing Algorithm",
                        "value": "Bin-Packing Algorithm",
                        "description": "Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the <Correlation Attribute> property is set)"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Defragment",
                        "value": "Defragment",
                        "description": "Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes <fragment.identifier>, <fragment.count>, and <fragment.index> or alternatively (for backward compatibility purposes) <segment.identifier>, <segment.count>, and <segment.index>. All FlowFiles with the same value for \"fragment.identifier\" will be grouped together. All FlowFiles in this group must have the same value for the \"fragment.count\" attribute. All FlowFiles in this group must have a unique value for the \"fragment.index\" attribute between 0 and the value of the \"fragment.count\" attribute."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Merge Format": {
                  "name": "Merge Format",
                  "displayName": "Merge Format",
                  "description": "Determines the format that will be used to merge the content.",
                  "defaultValue": "Binary Concatenation",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "TAR",
                        "value": "TAR",
                        "description": "A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' <path> attribute will be used to create a directory in the TAR file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named <tar.permissions> that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ZIP",
                        "value": "ZIP",
                        "description": "A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' <path> attribute will be used to create a directory in the ZIP file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The <Compression Level> property indicates the ZIP compression to use."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v3",
                        "value": "FlowFile Stream, v3",
                        "description": "A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v2",
                        "value": "FlowFile Stream, v2",
                        "description": "A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Tar, v1",
                        "value": "FlowFile Tar, v1",
                        "description": "A bin of FlowFiles will be combined into a single Version 1 FlowFile Package"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Binary Concatenation",
                        "value": "Binary Concatenation",
                        "description": "The contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Avro",
                        "value": "Avro",
                        "description": "The Avro contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Attribute Strategy": {
                  "name": "Attribute Strategy",
                  "displayName": "Attribute Strategy",
                  "description": "Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.",
                  "defaultValue": "Keep Only Common Attributes",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Keep Only Common Attributes",
                        "value": "Keep Only Common Attributes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Keep All Unique Attributes",
                        "value": "Keep All Unique Attributes"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Correlation Attribute Name": {
                  "name": "Correlation Attribute Name",
                  "displayName": "Correlation Attribute Name",
                  "description": "If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Minimum Number of Entries": {
                  "name": "Minimum Number of Entries",
                  "displayName": "Minimum Number of Entries",
                  "description": "The minimum number of files to include in a bundle",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Number of Entries": {
                  "name": "Maximum Number of Entries",
                  "displayName": "Maximum Number of Entries",
                  "description": "The maximum number of files to include in a bundle. If not specified, there is no maximum.",
                  "defaultValue": "1000",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum Group Size": {
                  "name": "Minimum Group Size",
                  "displayName": "Minimum Group Size",
                  "description": "The minimum size of for the bundle",
                  "defaultValue": "0 B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Group Size": {
                  "name": "Maximum Group Size",
                  "displayName": "Maximum Group Size",
                  "description": "The maximum size for the bundle. If not specified, there is no maximum.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Bin Age": {
                  "name": "Max Bin Age",
                  "displayName": "Max Bin Age",
                  "description": "The maximum age of a Bin that will trigger a Bin to be complete. Expected format is <duration> <time unit> where <duration> is a positive integer and time unit is one of seconds, minutes, hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum number of Bins": {
                  "name": "Maximum number of Bins",
                  "displayName": "Maximum number of Bins",
                  "description": "Specifies the maximum number of bins that can be held in memory at any one time",
                  "defaultValue": "5",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Delimiter Strategy": {
                  "name": "Delimiter Strategy",
                  "displayName": "Delimiter Strategy",
                  "description": "Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.",
                  "defaultValue": "Filename",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Filename",
                        "value": "Filename",
                        "description": "The values of Header, Footer, and Demarcator will be retrieved from the contents of a file"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text",
                        "description": "The values of Header, Footer, and Demarcator will be specified as property values"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Header File": {
                  "name": "Header File",
                  "displayName": "Header",
                  "description": "Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Footer File": {
                  "name": "Footer File",
                  "displayName": "Footer",
                  "description": "Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Demarcator File": {
                  "name": "Demarcator File",
                  "displayName": "Demarcator",
                  "description": "Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Compression Level": {
                  "name": "Compression Level",
                  "displayName": "Compression Level",
                  "description": "Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored",
                  "defaultValue": "1",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "0",
                        "value": "0"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "1",
                        "value": "1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "2",
                        "value": "2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "3",
                        "value": "3"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "4",
                        "value": "4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "5",
                        "value": "5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "6",
                        "value": "6"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "7",
                        "value": "7"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "8",
                        "value": "8"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "9",
                        "value": "9"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Keep Path": {
                  "name": "Keep Path",
                  "displayName": "Keep Path",
                  "description": "If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "a397371a-a1d2-170b-bf8c-0aaa11e157a6",
            "name": "MergeContent",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "a397371a-a1d2-170b-bf8c-0aaa11e157a6",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "type": "MergeContent",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 474,
              "tasksDurationNanos": 21522367,
              "tasks": "474",
              "tasksDuration": "00:00:00.021",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "aeff4253-2604-1e1f-60bd-8d385f539e16",
            "version": 29
          },
          "id": "41e23309-855c-1fa3-be0f-f49ebf9d42be",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/41e23309-855c-1fa3-be0f-f49ebf9d42be",
          "position": {
            "x": -432.4896350105771,
            "y": 1194.6809904296447
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "41e23309-855c-1fa3-be0f-f49ebf9d42be",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -432.4896350105771,
              "y": 1194.6809904296447
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/venona/prod_finished_messages/partition_date=${now():plus(21600000):format('yyyy-MM-dd')}/partition_hour=${now():plus(21600000):format('HH')}",
                "Conflict Resolution Strategy": "fail",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "41e23309-855c-1fa3-be0f-f49ebf9d42be",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "41e23309-855c-1fa3-be0f-f49ebf9d42be",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 480247823,
              "bytesWritten": 0,
              "read": "458 MB",
              "written": "0 bytes",
              "flowFilesIn": 3,
              "bytesIn": 480247823,
              "input": "3 (458 MB)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 3,
              "tasksDurationNanos": 1209457645,
              "tasks": "3",
              "tasksDuration": "00:00:01.209",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 16
          },
          "id": "27cc413f-e681-1ace-ffff-fffff063e363",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/27cc413f-e681-1ace-ffff-fffff063e363",
          "position": {
            "x": 2146.4242148560056,
            "y": 734.4627937358682
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "27cc413f-e681-1ace-ffff-fffff063e363",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 2146.4242148560056,
              "y": 734.4627937358682
            },
            "name": "ControlRate",
            "type": "org.apache.nifi.processors.standard.ControlRate",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "FlowFiles will be routed to this relationship if they are missing a necessary Rate Controlled Attribute or the attribute is not in the expected format",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles are transferred to this relationship under normal conditions",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": false,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Rate Control Criteria": "flowfile count",
                "Maximum Rate": "100",
                "Rate Controlled Attribute": null,
                "Time Duration": "1 sec",
                "Grouping Attribute": null
              },
              "descriptors": {
                "Rate Control Criteria": {
                  "name": "Rate Control Criteria",
                  "displayName": "Rate Control Criteria",
                  "description": "Indicates the criteria that is used to control the throughput rate. Changing this value resets the rate counters.",
                  "defaultValue": "data rate",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "data rate",
                        "value": "data rate",
                        "description": "Rate is controlled by counting bytes transferred per time duration."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "flowfile count",
                        "value": "flowfile count",
                        "description": "Rate is controlled by counting flowfiles transferred per time duration"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "attribute value",
                        "value": "attribute value",
                        "description": "Rate is controlled by accumulating the value of a specified attribute that is transferred per time duration"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Rate": {
                  "name": "Maximum Rate",
                  "displayName": "Maximum Rate",
                  "description": "The maximum rate at which data should pass through this processor. The format of this property is expected to be a positive integer, or a Data Size (such as '1 MB') if Rate Control Criteria is set to 'data rate'.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Rate Controlled Attribute": {
                  "name": "Rate Controlled Attribute",
                  "displayName": "Rate Controlled Attribute",
                  "description": "The name of an attribute whose values build toward the rate limit if Rate Control Criteria is set to 'attribute value'. The value of the attribute referenced by this property must be a positive long, or the FlowFile will be routed to failure. This value is ignored if Rate Control Criteria is not set to 'attribute value'. Changing this value resets the rate counters.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Time Duration": {
                  "name": "Time Duration",
                  "displayName": "Time Duration",
                  "description": "The amount of time to which the Maximum Rate pertains. Changing this value resets the rate counters.",
                  "defaultValue": "1 min",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Grouping Attribute": {
                  "name": "Grouping Attribute",
                  "displayName": "Grouping Attribute",
                  "description": "By default, a single \"throttle\" is used for all FlowFiles. If this value is specified, a separate throttle is used for each value specified by the attribute with this name. Changing this value resets the rate counters.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "27cc413f-e681-1ace-ffff-fffff063e363",
            "name": "ControlRate",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "27cc413f-e681-1ace-ffff-fffff063e363",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ControlRate",
              "type": "ControlRate",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "27cc31cf-e681-1ace-092a-58b47667f4ae",
            "version": 15
          },
          "id": "76da3475-2307-11d6-81ee-dce15cbc2a47",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/76da3475-2307-11d6-81ee-dce15cbc2a47",
          "position": {
            "x": 784.5931431866654,
            "y": 54.91226240396077
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "76da3475-2307-11d6-81ee-dce15cbc2a47",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 784.5931431866654,
              "y": 54.91226240396077
            },
            "name": "GetKafka - video_finished_messages_6C568C9AB05D06E0076391F4F771F9F9",
            "type": "org.apache.nifi.processors.kafka.GetKafka",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are created are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "ZooKeeper Connection String": "zk3-internal.dp.aws.charter.com:2181,zk2-internal.dp.aws.charter.com:2181,zk1-internal.dp.aws.charter.com:2181",
                "Topic Name": "video_finished_messages_6C568C9AB05D06E0076391F4F771F9F9",
                "Zookeeper Commit Frequency": "60 secs",
                "Batch Size": "1",
                "Message Demarcator": "\\n",
                "Client Name": "NiFi-f4b3e296-0158-1000-0000-00003aeefad8",
                "Group ID": "76da3475-2307-11d6-81ee-dce15cbc2a47",
                "Kafka Communications Timeout": "30 secs",
                "ZooKeeper Communications Timeout": "30 secs",
                "Auto Offset Reset": "smallest",
                "fetch.message.max.bytes": "20971520",
                "num.consumer.fetchers": "2",
                "queued.max.message.chunks": "5",
                "socket.receive.buffer.bytes": "1048576"
              },
              "descriptors": {
                "ZooKeeper Connection String": {
                  "name": "ZooKeeper Connection String",
                  "displayName": "ZooKeeper Connection String",
                  "description": "The Connection String to use in order to connect to ZooKeeper. This is often a comma-separated list of <host>:<port> combinations. For example, host1:2181,host2:2181,host3:2188",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Topic Name": {
                  "name": "Topic Name",
                  "displayName": "Topic Name",
                  "description": "The Kafka Topic to pull messages from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Zookeeper Commit Frequency": {
                  "name": "Zookeeper Commit Frequency",
                  "displayName": "Zookeeper Commit Frequency",
                  "description": "Specifies how often to communicate with ZooKeeper to indicate which messages have been pulled. A longer time period will result in better overall performance but can result in more data duplication if a NiFi node is lost",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "Specifies the maximum number of messages to combine into a single FlowFile. These messages will be concatenated together with the <Message Demarcator> string placed between the content of each message. If the messages from Kafka should not be concatenated together, leave this value at 1.",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Message Demarcator": {
                  "name": "Message Demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the characters to use in order to demarcate multiple messages from Kafka. If the <Batch Size> property is set to 1, this value is ignored. Otherwise, for each two subsequent messages in the batch, this value will be placed in between them.",
                  "defaultValue": "\\n",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Client Name": {
                  "name": "Client Name",
                  "displayName": "Client Name",
                  "description": "Client Name to use when communicating with Kafka",
                  "defaultValue": "NiFi-76da3475-2307-11d6-81ee-dce15cbc2a47",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Group ID": {
                  "name": "Group ID",
                  "displayName": "Group ID",
                  "description": "A Group ID is used to identify consumers that are within the same consumer group",
                  "defaultValue": "76da3475-2307-11d6-81ee-dce15cbc2a47",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kafka Communications Timeout": {
                  "name": "Kafka Communications Timeout",
                  "displayName": "Kafka Communications Timeout",
                  "description": "The amount of time to wait for a response from Kafka before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "ZooKeeper Communications Timeout": {
                  "name": "ZooKeeper Communications Timeout",
                  "displayName": "ZooKeeper Communications Timeout",
                  "description": "The amount of time to wait for a response from ZooKeeper before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Auto Offset Reset": {
                  "name": "Auto Offset Reset",
                  "displayName": "Auto Offset Reset",
                  "description": "Automatically reset the offset to the smallest or largest offset available on the broker",
                  "defaultValue": "largest",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "smallest",
                        "value": "smallest"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "largest",
                        "value": "largest"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "fetch.message.max.bytes": {
                  "name": "fetch.message.max.bytes",
                  "displayName": "fetch.message.max.bytes",
                  "description": "Specifies the value for 'fetch.message.max.bytes' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "num.consumer.fetchers": {
                  "name": "num.consumer.fetchers",
                  "displayName": "num.consumer.fetchers",
                  "description": "Specifies the value for 'num.consumer.fetchers' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "queued.max.message.chunks": {
                  "name": "queued.max.message.chunks",
                  "displayName": "queued.max.message.chunks",
                  "description": "Specifies the value for 'queued.max.message.chunks' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "socket.receive.buffer.bytes": {
                  "name": "socket.receive.buffer.bytes",
                  "displayName": "socket.receive.buffer.bytes",
                  "description": "Specifies the value for 'socket.receive.buffer.bytes' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 2000,
              "concurrentlySchedulableTaskCount": 32,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "76da3475-2307-11d6-81ee-dce15cbc2a47",
            "name": "GetKafka - video_finished_messages_6C568C9AB05D06E0076391F4F771F9F9",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "76da3475-2307-11d6-81ee-dce15cbc2a47",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka - video_finished_messages_6C568C9AB05D06E0076391F4F771F9F9",
              "type": "GetKafka",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 550669422,
              "read": "0 bytes",
              "written": "525.16 MB",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 23288,
              "bytesOut": 550669422,
              "output": "23,288 (525.16 MB)",
              "taskCount": 22495614,
              "tasksDurationNanos": 28796004858577,
              "tasks": "22,495,614",
              "tasksDuration": "07:59:56.004",
              "activeThreadCount": 96
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 20
          },
          "id": "73e53c97-f892-13f2-a707-a93a8a6f361a",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/73e53c97-f892-13f2-a707-a93a8a6f361a",
          "position": {
            "x": 8627.490887948321,
            "y": 1495.4748196325484
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "73e53c97-f892-13f2-a707-a93a8a6f361a",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8627.490887948321,
              "y": 1495.4748196325484
            },
            "name": "ExecuteStreamCommand",
            "type": "org.apache.nifi.processors.standard.ExecuteStreamCommand",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "original",
                "description": "FlowFiles that were successfully processed",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Command Arguments": "enable;python27;\"pip install pycrypto==2.6.1 python-gnupg --user\"",
                "Command Path": "scl",
                "Ignore STDIN": "false",
                "Working Directory": null,
                "Argument Delimiter": ";",
                "Output Destination Attribute": "output",
                "Max Attribute Length": "256"
              },
              "descriptors": {
                "Command Arguments": {
                  "name": "Command Arguments",
                  "displayName": "Command Arguments",
                  "description": "The arguments to supply to the executable delimited by the ';' character.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Command Path": {
                  "name": "Command Path",
                  "displayName": "Command Path",
                  "description": "Specifies the command to be executed; if just the name of an executable is provided, it must be in the user's environment PATH.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Ignore STDIN": {
                  "name": "Ignore STDIN",
                  "displayName": "Ignore STDIN",
                  "description": "If true, the contents of the incoming flowfile will not be passed to the executing command",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Working Directory": {
                  "name": "Working Directory",
                  "displayName": "Working Directory",
                  "description": "The directory to use as the current working directory when executing the command",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Argument Delimiter": {
                  "name": "Argument Delimiter",
                  "displayName": "Argument Delimiter",
                  "description": "Delimiter to use to separate arguments for a command [default: ;]. Must be a single character",
                  "defaultValue": ";",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Output Destination Attribute": {
                  "name": "Output Destination Attribute",
                  "displayName": "Output Destination Attribute",
                  "description": "If set, the output of the stream command will be put into an attribute of the original FlowFile instead of a separate FlowFile. There will no longer be a relationship for 'output stream'. The value of this property will be the key for the output attribute.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Attribute Length": {
                  "name": "Max Attribute Length",
                  "displayName": "Max Attribute Length",
                  "description": "If routing the output of the stream command to an attribute, the number of characters put to the attribute value will be at most this amount. This is important because attributes are held in memory and large attributes will quickly cause out of memory issues. If the output goes longer than this value, it will truncated to fit. Consider making this smaller if able.",
                  "defaultValue": "256",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "73e53c97-f892-13f2-a707-a93a8a6f361a",
            "name": "ExecuteStreamCommand",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "73e53c97-f892-13f2-a707-a93a8a6f361a",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExecuteStreamCommand",
              "type": "ExecuteStreamCommand",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e0664271-0159-1000-db71-4624a50c9d70",
            "version": 1
          },
          "id": "b7f1770f-0158-1000-0000-00007edf1c62",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/b7f1770f-0158-1000-0000-00007edf1c62",
          "position": {
            "x": -2377.7804260253906,
            "y": 313.5848083496094
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "b7f1770f-0158-1000-0000-00007edf1c62",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -2377.7804260253906,
              "y": 313.5848083496094
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/user/chefadmin/nifi/out/",
                "Conflict Resolution Strategy": "replace",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": null,
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "b7f1770f-0158-1000-0000-00007edf1c62",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "b7f1770f-0158-1000-0000-00007edf1c62",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 3
          },
          "id": "121d3091-2cd0-1ba2-b1e7-434aeaad8971",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/121d3091-2cd0-1ba2-b1e7-434aeaad8971",
          "position": {
            "x": 773.1865482316125,
            "y": 758.6538669648066
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "121d3091-2cd0-1ba2-b1e7-434aeaad8971",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 773.1865482316125,
              "y": 758.6538669648066
            },
            "name": "ExtractAvroMetadata",
            "type": "org.apache.nifi.processors.avro.ExtractAvroMetadata",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "A FlowFile is routed to this relationship if it cannot be parsed as Avro or metadata cannot be extracted for any reason",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "A FlowFile is routed to this relationship after metadata has been extracted.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Fingerprint Algorithm": "CRC-64-AVRO",
                "Metadata Keys": "avro.schema",
                "Count Items": "false"
              },
              "descriptors": {
                "Fingerprint Algorithm": {
                  "name": "Fingerprint Algorithm",
                  "displayName": "Fingerprint Algorithm",
                  "description": "The algorithm used to generate the schema fingerprint. Available choices are based on the Avro recommended practices for fingerprint generation.",
                  "defaultValue": "CRC-64-AVRO",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "CRC-64-AVRO",
                        "value": "CRC-64-AVRO"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "MD5",
                        "value": "MD5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SHA-256",
                        "value": "SHA-256"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Metadata Keys": {
                  "name": "Metadata Keys",
                  "displayName": "Metadata Keys",
                  "description": "A comma-separated list of keys indicating key/value pairs to extract from the Avro file header. The key 'avro.schema' can be used to extract the full schema in JSON format, and 'avro.codec' can be used to extract the codec name if one exists.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Count Items": {
                  "name": "Count Items",
                  "displayName": "Count Items",
                  "description": "If true the number of items in the datafile will be counted and stored in a FlowFile attribute 'item.count'. The counting is done by reading blocks and getting the number of items for each block, thus avoiding de-serializing. The items being counted will be the top-level items in the datafile. For example, with a schema of type record the items will be the records, and for a schema of type Array the items will be the arrays (not the number of entries in each array).",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "121d3091-2cd0-1ba2-b1e7-434aeaad8971",
            "name": "ExtractAvroMetadata",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "121d3091-2cd0-1ba2-b1e7-434aeaad8971",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "type": "ExtractAvroMetadata",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 13
          },
          "id": "553a3fba-9cb3-1cf6-a46a-50125786f790",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/553a3fba-9cb3-1cf6-a46a-50125786f790",
          "position": {
            "x": 9049.665642208478,
            "y": 1745.7248732961923
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "553a3fba-9cb3-1cf6-a46a-50125786f790",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 9049.665642208478,
              "y": 1745.7248732961923
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "${filename:replaceAll('.enc.dec', '')}"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "553a3fba-9cb3-1cf6-a46a-50125786f790",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "553a3fba-9cb3-1cf6-a46a-50125786f790",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "62b80e1e-015a-1000-c150-ab424ce44722",
            "version": 4
          },
          "id": "ffdcd346-0159-1000-9c1e-088ce0697c7e",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/ffdcd346-0159-1000-9c1e-088ce0697c7e",
          "position": {
            "x": 8226.037775195291,
            "y": 682.8751873464612
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "ffdcd346-0159-1000-9c1e-088ce0697c7e",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8226.037775195291,
              "y": 682.8751873464612
            },
            "name": "FetchS3Object",
            "type": "org.apache.nifi.processors.aws.s3.FetchS3Object",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "FlowFiles are routed to failure relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles are routed to success relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Bucket": "pigateway",
                "Object Key": "${filename}",
                "Region": "us-west-2",
                "Access Key": "********",
                "Secret Key": "********",
                "Credentials File": null,
                "AWS Credentials Provider service": null,
                "Communications Timeout": "30 secs",
                "Version": null,
                "SSL Context Service": null,
                "Endpoint Override URL": "https://s3.amazonaws.com/",
                "Signer Override": "Default Signature",
                "Proxy Host": null,
                "Proxy Host Port": null
              },
              "descriptors": {
                "Bucket": {
                  "name": "Bucket",
                  "displayName": "Bucket",
                  "description": "",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Object Key": {
                  "name": "Object Key",
                  "displayName": "Object Key",
                  "description": "",
                  "defaultValue": "${filename}",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Region": {
                  "name": "Region",
                  "displayName": "Region",
                  "description": "",
                  "defaultValue": "us-west-2",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "us-gov-west-1",
                        "value": "us-gov-west-1",
                        "description": "us-gov-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-east-1",
                        "value": "us-east-1",
                        "description": "us-east-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-west-1",
                        "value": "us-west-1",
                        "description": "us-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-west-2",
                        "value": "us-west-2",
                        "description": "us-west-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "eu-west-1",
                        "value": "eu-west-1",
                        "description": "eu-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "eu-central-1",
                        "value": "eu-central-1",
                        "description": "eu-central-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-southeast-1",
                        "value": "ap-southeast-1",
                        "description": "ap-southeast-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-southeast-2",
                        "value": "ap-southeast-2",
                        "description": "ap-southeast-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-northeast-1",
                        "value": "ap-northeast-1",
                        "description": "ap-northeast-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-northeast-2",
                        "value": "ap-northeast-2",
                        "description": "ap-northeast-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "sa-east-1",
                        "value": "sa-east-1",
                        "description": "sa-east-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "cn-north-1",
                        "value": "cn-north-1",
                        "description": "cn-north-1"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Access Key": {
                  "name": "Access Key",
                  "displayName": "Access Key",
                  "description": "",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Secret Key": {
                  "name": "Secret Key",
                  "displayName": "Secret Key",
                  "description": "",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Credentials File": {
                  "name": "Credentials File",
                  "displayName": "Credentials File",
                  "description": "Path to a file containing AWS access key and secret key in properties file format.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "AWS Credentials Provider service": {
                  "name": "AWS Credentials Provider service",
                  "displayName": "AWS Credentials Provider service",
                  "description": "The Controller Service that is used to obtain aws credentials provider",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService"
                },
                "Communications Timeout": {
                  "name": "Communications Timeout",
                  "displayName": "Communications Timeout",
                  "description": "",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Version": {
                  "name": "Version",
                  "displayName": "Version",
                  "description": "The Version of the Object to download",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "SSL Context Service": {
                  "name": "SSL Context Service",
                  "displayName": "SSL Context Service",
                  "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService"
                },
                "Endpoint Override URL": {
                  "name": "Endpoint Override URL",
                  "displayName": "Endpoint Override URL",
                  "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Signer Override": {
                  "name": "Signer Override",
                  "displayName": "Signer Override",
                  "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                  "defaultValue": "Default Signature",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Default Signature",
                        "value": "Default Signature"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Signature v4",
                        "value": "AWSS3V4SignerType"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Signature v2",
                        "value": "S3SignerType"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Proxy Host": {
                  "name": "Proxy Host",
                  "displayName": "Proxy Host",
                  "description": "Proxy host name or IP",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Proxy Host Port": {
                  "name": "Proxy Host Port",
                  "displayName": "Proxy Host Port",
                  "description": "Proxy host port",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "ffdcd346-0159-1000-9c1e-088ce0697c7e",
            "name": "FetchS3Object",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "ffdcd346-0159-1000-9c1e-088ce0697c7e",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchS3Object",
              "type": "FetchS3Object",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "384eecf8-015a-1000-d300-3c0f37d92719",
            "version": 13
          },
          "id": "0e813e03-326c-11a0-b9dc-6efac864289b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/0e813e03-326c-11a0-b9dc-6efac864289b",
          "position": {
            "x": 6043.351955159679,
            "y": 55.025498772003175
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "0e813e03-326c-11a0-b9dc-6efac864289b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 6043.351955159679,
              "y": 55.025498772003175
            },
            "name": "ListSFTP",
            "type": "org.apache.nifi.processors.standard.ListSFTP",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are received are routed to success",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": false,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": true,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "Hostname": "files.chartercom.com",
                "Port": "22",
                "Username": "cvoreport",
                "Password": "********",
                "Private Key Path": null,
                "Private Key Passphrase": null,
                "Remote Path": "/AVN_Raw/",
                "Distributed Cache Service": null,
                "Search Recursively": "false",
                "File Filter Regex": ".*\\.ready\\.1",
                "Path Filter Regex": null,
                "Ignore Dotted Files": "true",
                "Strict Host Key Checking": "false",
                "Host Key File": null,
                "Connection Timeout": "30 sec",
                "Data Timeout": "30 sec",
                "Send Keep Alive On Timeout": "true"
              },
              "descriptors": {
                "Hostname": {
                  "name": "Hostname",
                  "displayName": "Hostname",
                  "description": "The fully qualified hostname or IP address of the remote system",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Port": {
                  "name": "Port",
                  "displayName": "Port",
                  "description": "The port to connect to on the remote host to fetch the data from",
                  "defaultValue": "22",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Username": {
                  "name": "Username",
                  "displayName": "Username",
                  "description": "Username",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Password": {
                  "name": "Password",
                  "displayName": "Password",
                  "description": "Password for the user account",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Path": {
                  "name": "Private Key Path",
                  "displayName": "Private Key Path",
                  "description": "The fully qualified path to the Private Key file",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Passphrase": {
                  "name": "Private Key Passphrase",
                  "displayName": "Private Key Passphrase",
                  "description": "Password for the private key",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Path": {
                  "name": "Remote Path",
                  "displayName": "Remote Path",
                  "description": "The path on the remote system from which to pull or push files",
                  "defaultValue": ".",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Distributed Cache Service": {
                  "name": "Distributed Cache Service",
                  "displayName": "Distributed Cache Service",
                  "description": "Specifies the Controller Service that should be used to maintain state about what has been pulled from the remote server so that if a new node begins pulling data, it won't duplicate all of the work that has been done. If not specified, the information will not be shared across the cluster. This property does not need to be set for standalone instances of NiFi but should be configured if NiFi is run within a cluster.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.distributed.cache.client.DistributedMapCacheClient"
                },
                "Search Recursively": {
                  "name": "Search Recursively",
                  "displayName": "Search Recursively",
                  "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "File Filter Regex": {
                  "name": "File Filter Regex",
                  "displayName": "File Filter Regex",
                  "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Path Filter Regex": {
                  "name": "Path Filter Regex",
                  "displayName": "Path Filter Regex",
                  "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Ignore Dotted Files": {
                  "name": "Ignore Dotted Files",
                  "displayName": "Ignore Dotted Files",
                  "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Strict Host Key Checking": {
                  "name": "Strict Host Key Checking",
                  "displayName": "Strict Host Key Checking",
                  "description": "Indicates whether or not strict enforcement of hosts keys should be applied",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Host Key File": {
                  "name": "Host Key File",
                  "displayName": "Host Key File",
                  "description": "If supplied, the given file will be used as the Host Key; otherwise, no use host key file will be used",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Connection Timeout": {
                  "name": "Connection Timeout",
                  "displayName": "Connection Timeout",
                  "description": "Amount of time to wait before timing out while creating a connection",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Data Timeout": {
                  "name": "Data Timeout",
                  "displayName": "Data Timeout",
                  "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Send Keep Alive On Timeout": {
                  "name": "Send Keep Alive On Timeout",
                  "displayName": "Send Keep Alive On Timeout",
                  "description": "Indicates whether or not to send a single Keep Alive message when SSH socket times out",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "300 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "PRIMARY",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "0e813e03-326c-11a0-b9dc-6efac864289b",
            "name": "ListSFTP",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "0e813e03-326c-11a0-b9dc-6efac864289b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListSFTP",
              "type": "ListSFTP",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 53,
              "bytesOut": 0,
              "output": "53 (0 bytes)",
              "taskCount": 1,
              "tasksDurationNanos": 804769096,
              "tasks": "1",
              "tasksDuration": "00:00:00.804",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 10
          },
          "id": "134d324b-bf55-1e92-94e0-b8cea8ad972c",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/134d324b-bf55-1e92-94e0-b8cea8ad972c",
          "position": {
            "x": 773.0607405903238,
            "y": 980.6678142432286
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "134d324b-bf55-1e92-94e0-b8cea8ad972c",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 773.0607405903238,
              "y": 980.6678142432286
            },
            "name": "ConvertAvroSchema",
            "type": "org.apache.nifi.processors.kite.ConvertAvroSchema",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Avro content that failed to convert",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Avro content that converted successfully",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Input Schema": "${avro.schema}",
                "Output Schema": "${avro.schema}",
                "Locale": "default",
                "kite-compression-type": "DEFLATE"
              },
              "descriptors": {
                "Input Schema": {
                  "name": "Input Schema",
                  "displayName": "Input Schema",
                  "description": "Avro Schema of Input Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Output Schema": {
                  "name": "Output Schema",
                  "displayName": "Output Schema",
                  "description": "Avro Schema of Output Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Locale": {
                  "name": "Locale",
                  "displayName": "Locale",
                  "description": "Locale to use for scanning data (see https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html)or \" default\" for JVM default",
                  "defaultValue": "default",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "kite-compression-type": {
                  "name": "kite-compression-type",
                  "displayName": "Compression type",
                  "description": "Compression type to use when writting Avro files. Default is Snappy.",
                  "defaultValue": "SNAPPY",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "BZIP2",
                        "value": "BZIP2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFLATE",
                        "value": "DEFLATE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZO",
                        "value": "LZO"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "134d324b-bf55-1e92-94e0-b8cea8ad972c",
            "name": "ConvertAvroSchema",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "134d324b-bf55-1e92-94e0-b8cea8ad972c",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "type": "ConvertAvroSchema",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "version": 0
          },
          "id": "e69c3e65-0d73-120f-ffff-ffffdab18724",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/e69c3e65-0d73-120f-ffff-ffffdab18724",
          "position": {
            "x": 2737.8308840147797,
            "y": 38.87974654964603
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e69c3e65-0d73-120f-ffff-ffffdab18724",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 2737.8308840147797,
              "y": 38.87974654964603
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "s3filename": "${filename:substringAfterLast('/')}",
                "s3key": "${filename}",
                "s3path": "${filename:substringBeforeLast('/')}"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "s3filename": {
                  "name": "s3filename",
                  "displayName": "s3filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "s3key": {
                  "name": "s3key",
                  "displayName": "s3key",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "s3path": {
                  "name": "s3path",
                  "displayName": "s3path",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "e69c3e65-0d73-120f-ffff-ffffdab18724",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "e69c3e65-0d73-120f-ffff-ffffdab18724",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 10
          },
          "id": "50ad35e6-2a89-1f64-8f93-844c858e372d",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/50ad35e6-2a89-1f64-8f93-844c858e372d",
          "position": {
            "x": -437.52506537249405,
            "y": 540.5325636176198
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "50ad35e6-2a89-1f64-8f93-844c858e372d",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -437.52506537249405,
              "y": 540.5325636176198
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "venona_finished_${UUID()}.avro"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "50ad35e6-2a89-1f64-8f93-844c858e372d",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "50ad35e6-2a89-1f64-8f93-844c858e372d",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 2,
              "bytesIn": 1053579381,
              "input": "2 (1,004.77 MB)",
              "flowFilesOut": 2,
              "bytesOut": 1053579381,
              "output": "2 (1,004.77 MB)",
              "taskCount": 2,
              "tasksDurationNanos": 425027,
              "tasks": "2",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 3
          },
          "id": "86f23334-35c7-1a42-a094-d49c23f406b4",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/86f23334-35c7-1a42-a094-d49c23f406b4",
          "position": {
            "x": 2149.912496428611,
            "y": 508.13323336065764
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "86f23334-35c7-1a42-a094-d49c23f406b4",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 2149.912496428611,
              "y": 508.13323336065764
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "hdfsPath": "${s3path}"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "hdfsPath": {
                  "name": "hdfsPath",
                  "displayName": "hdfsPath",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "86f23334-35c7-1a42-a094-d49c23f406b4",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "86f23334-35c7-1a42-a094-d49c23f406b4",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 31
          },
          "id": "8eac2442-0159-1000-ffff-ffffe615df33",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/8eac2442-0159-1000-ffff-ffffe615df33",
          "position": {
            "x": 2708.904052662479,
            "y": 621.4662138289748
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "8eac2442-0159-1000-ffff-ffffe615df33",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 2708.904052662479,
              "y": 621.4662138289748
            },
            "name": "FetchS3Object-truconnect-download",
            "type": "org.apache.nifi.processors.aws.s3.FetchS3Object",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "FlowFiles are routed to failure relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles are routed to success relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Bucket": "pi-wireless",
                "Object Key": "${s3key}",
                "Region": "us-east-1",
                "Access Key": "********",
                "Secret Key": "********",
                "Credentials File": null,
                "AWS Credentials Provider service": null,
                "Communications Timeout": "30 secs",
                "Version": null,
                "SSL Context Service": null,
                "Endpoint Override URL": "https://s3.amazonaws.com/",
                "Signer Override": "Default Signature",
                "Proxy Host": null,
                "Proxy Host Port": null
              },
              "descriptors": {
                "Bucket": {
                  "name": "Bucket",
                  "displayName": "Bucket",
                  "description": "",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Object Key": {
                  "name": "Object Key",
                  "displayName": "Object Key",
                  "description": "",
                  "defaultValue": "${filename}",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Region": {
                  "name": "Region",
                  "displayName": "Region",
                  "description": "",
                  "defaultValue": "us-west-2",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "us-gov-west-1",
                        "value": "us-gov-west-1",
                        "description": "us-gov-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-east-1",
                        "value": "us-east-1",
                        "description": "us-east-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-west-1",
                        "value": "us-west-1",
                        "description": "us-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-west-2",
                        "value": "us-west-2",
                        "description": "us-west-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "eu-west-1",
                        "value": "eu-west-1",
                        "description": "eu-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "eu-central-1",
                        "value": "eu-central-1",
                        "description": "eu-central-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-southeast-1",
                        "value": "ap-southeast-1",
                        "description": "ap-southeast-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-southeast-2",
                        "value": "ap-southeast-2",
                        "description": "ap-southeast-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-northeast-1",
                        "value": "ap-northeast-1",
                        "description": "ap-northeast-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-northeast-2",
                        "value": "ap-northeast-2",
                        "description": "ap-northeast-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "sa-east-1",
                        "value": "sa-east-1",
                        "description": "sa-east-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "cn-north-1",
                        "value": "cn-north-1",
                        "description": "cn-north-1"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Access Key": {
                  "name": "Access Key",
                  "displayName": "Access Key",
                  "description": "",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Secret Key": {
                  "name": "Secret Key",
                  "displayName": "Secret Key",
                  "description": "",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Credentials File": {
                  "name": "Credentials File",
                  "displayName": "Credentials File",
                  "description": "Path to a file containing AWS access key and secret key in properties file format.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "AWS Credentials Provider service": {
                  "name": "AWS Credentials Provider service",
                  "displayName": "AWS Credentials Provider service",
                  "description": "The Controller Service that is used to obtain aws credentials provider",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService"
                },
                "Communications Timeout": {
                  "name": "Communications Timeout",
                  "displayName": "Communications Timeout",
                  "description": "",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Version": {
                  "name": "Version",
                  "displayName": "Version",
                  "description": "The Version of the Object to download",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "SSL Context Service": {
                  "name": "SSL Context Service",
                  "displayName": "SSL Context Service",
                  "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService"
                },
                "Endpoint Override URL": {
                  "name": "Endpoint Override URL",
                  "displayName": "Endpoint Override URL",
                  "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Signer Override": {
                  "name": "Signer Override",
                  "displayName": "Signer Override",
                  "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                  "defaultValue": "Default Signature",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Default Signature",
                        "value": "Default Signature"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Signature v4",
                        "value": "AWSS3V4SignerType"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Signature v2",
                        "value": "S3SignerType"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Proxy Host": {
                  "name": "Proxy Host",
                  "displayName": "Proxy Host",
                  "description": "Proxy host name or IP",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Proxy Host Port": {
                  "name": "Proxy Host Port",
                  "displayName": "Proxy Host Port",
                  "description": "Proxy host port",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 2000,
              "concurrentlySchedulableTaskCount": 10,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "8eac2442-0159-1000-ffff-ffffe615df33",
            "name": "FetchS3Object-truconnect-download",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "8eac2442-0159-1000-ffff-ffffe615df33",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchS3Object-truconnect-download",
              "type": "FetchS3Object",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "version": 0
          },
          "id": "29123dbf-856e-1c88-ffff-ffffd658d0e3",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/29123dbf-856e-1c88-ffff-ffffd658d0e3",
          "position": {
            "x": 3147.3930563195495,
            "y": 236.50682606589373
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "29123dbf-856e-1c88-ffff-ffffd658d0e3",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 3147.3930563195495,
              "y": 236.50682606589373
            },
            "name": "FetchSFTP",
            "type": "org.apache.nifi.processors.standard.FetchSFTP",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "comms.failure",
                "description": "Any FlowFile that could not be fetched from the remote server due to a communications failure will be transferred to this Relationship.",
                "autoTerminate": true
              },
              {
                "name": "not.found",
                "description": "Any FlowFile for which we receive a 'Not Found' message from the remote server will be transferred to this Relationship.",
                "autoTerminate": true
              },
              {
                "name": "permission.denied",
                "description": "Any FlowFile that could not be fetched from the remote server due to insufficient permissions will be transferred to this Relationship.",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "All FlowFiles that are received are routed to success",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hostname": "files.chartercom.com",
                "Port": "22",
                "Username": "truconnect_etl",
                "Password": "********",
                "Private Key Path": null,
                "Private Key Passphrase": null,
                "Remote File": "${filename}",
                "Completion Strategy": "None",
                "Move Destination Directory": null,
                "Connection Timeout": "30 sec",
                "Data Timeout": "30 sec",
                "Send Keep Alive On Timeout": "true",
                "Host Key File": null,
                "Strict Host Key Checking": "false",
                "Use Compression": "false"
              },
              "descriptors": {
                "Hostname": {
                  "name": "Hostname",
                  "displayName": "Hostname",
                  "description": "The fully-qualified hostname or IP address of the host to fetch the data from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Port": {
                  "name": "Port",
                  "displayName": "Port",
                  "description": "The port to connect to on the remote host to fetch the data from",
                  "defaultValue": "22",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Username": {
                  "name": "Username",
                  "displayName": "Username",
                  "description": "Username",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Password": {
                  "name": "Password",
                  "displayName": "Password",
                  "description": "Password for the user account",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Path": {
                  "name": "Private Key Path",
                  "displayName": "Private Key Path",
                  "description": "The fully qualified path to the Private Key file",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Passphrase": {
                  "name": "Private Key Passphrase",
                  "displayName": "Private Key Passphrase",
                  "description": "Password for the private key",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote File": {
                  "name": "Remote File",
                  "displayName": "Remote File",
                  "description": "The fully qualified filename on the remote system",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Completion Strategy": {
                  "name": "Completion Strategy",
                  "displayName": "Completion Strategy",
                  "description": "Specifies what to do with the original file on the server once it has been pulled into NiFi. If the Completion Strategy fails, a warning will be logged but the data will still be transferred.",
                  "defaultValue": "None",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "None",
                        "value": "None",
                        "description": "Leave the file as-is"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Move File",
                        "value": "Move File",
                        "description": "Move the file to the directory specified by the <Move Destination Directory> property"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Delete File",
                        "value": "Delete File",
                        "description": "Deletes the original file from the remote system"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Move Destination Directory": {
                  "name": "Move Destination Directory",
                  "displayName": "Move Destination Directory",
                  "description": "The directory on the remote server to the move the original file to once it has been ingested into NiFi. This property is ignored unless the Completion Strategy is set to \"Move File\". The specified directory must already exist onthe remote system, or the rename will fail.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Connection Timeout": {
                  "name": "Connection Timeout",
                  "displayName": "Connection Timeout",
                  "description": "Amount of time to wait before timing out while creating a connection",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Data Timeout": {
                  "name": "Data Timeout",
                  "displayName": "Data Timeout",
                  "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Send Keep Alive On Timeout": {
                  "name": "Send Keep Alive On Timeout",
                  "displayName": "Send Keep Alive On Timeout",
                  "description": "Indicates whether or not to send a single Keep Alive message when SSH socket times out",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Host Key File": {
                  "name": "Host Key File",
                  "displayName": "Host Key File",
                  "description": "If supplied, the given file will be used as the Host Key; otherwise, no use host key file will be used",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Strict Host Key Checking": {
                  "name": "Strict Host Key Checking",
                  "displayName": "Strict Host Key Checking",
                  "description": "Indicates whether or not strict enforcement of hosts keys should be applied",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Use Compression": {
                  "name": "Use Compression",
                  "displayName": "Use Compression",
                  "description": "Indicates whether or not ZLIB compression should be used when transferring files",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "29123dbf-856e-1c88-ffff-ffffd658d0e3",
            "name": "FetchSFTP",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "29123dbf-856e-1c88-ffff-ffffd658d0e3",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchSFTP",
              "type": "FetchSFTP",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "version": 0
          },
          "id": "1bed3f27-1a5c-10d5-a8d4-081efbc5b2e5",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/1bed3f27-1a5c-10d5-a8d4-081efbc5b2e5",
          "position": {
            "x": 3149.2434076911004,
            "y": 453.68038513051283
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "1bed3f27-1a5c-10d5-a8d4-081efbc5b2e5",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 3149.2434076911004,
              "y": 453.68038513051283
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/buckets/pi-wireless/tru-connect",
                "Conflict Resolution Strategy": "replace",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "1bed3f27-1a5c-10d5-a8d4-081efbc5b2e5",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "1bed3f27-1a5c-10d5-a8d4-081efbc5b2e5",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 35
          },
          "id": "09123a9e-742b-1d64-bc9e-1aadb06a066e",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/09123a9e-742b-1d64-bc9e-1aadb06a066e",
          "position": {
            "x": -30.05554625306013,
            "y": 283.03080918486023
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "09123a9e-742b-1d64-bc9e-1aadb06a066e",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -30.05554625306013,
              "y": 283.03080918486023
            },
            "name": "MergeContent",
            "type": "org.apache.nifi.processors.standard.MergeContent",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure",
                "autoTerminate": true
              },
              {
                "name": "merged",
                "description": "The FlowFile containing the merged content",
                "autoTerminate": false
              },
              {
                "name": "original",
                "description": "The FlowFiles that were used to create the bundle",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Merge Strategy": "Bin-Packing Algorithm",
                "Merge Format": "Avro",
                "Attribute Strategy": "Keep All Unique Attributes",
                "Correlation Attribute Name": null,
                "Minimum Number of Entries": "200000",
                "Maximum Number of Entries": "400000",
                "Minimum Group Size": "0 B",
                "Maximum Group Size": null,
                "Max Bin Age": "1 hour",
                "Maximum number of Bins": "5",
                "Delimiter Strategy": "Filename",
                "Header File": null,
                "Footer File": null,
                "Demarcator File": null,
                "Compression Level": "1",
                "Keep Path": "false"
              },
              "descriptors": {
                "Merge Strategy": {
                  "name": "Merge Strategy",
                  "displayName": "Merge Strategy",
                  "description": "Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles",
                  "defaultValue": "Bin-Packing Algorithm",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Bin-Packing Algorithm",
                        "value": "Bin-Packing Algorithm",
                        "description": "Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the <Correlation Attribute> property is set)"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Defragment",
                        "value": "Defragment",
                        "description": "Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes <fragment.identifier>, <fragment.count>, and <fragment.index> or alternatively (for backward compatibility purposes) <segment.identifier>, <segment.count>, and <segment.index>. All FlowFiles with the same value for \"fragment.identifier\" will be grouped together. All FlowFiles in this group must have the same value for the \"fragment.count\" attribute. All FlowFiles in this group must have a unique value for the \"fragment.index\" attribute between 0 and the value of the \"fragment.count\" attribute."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Merge Format": {
                  "name": "Merge Format",
                  "displayName": "Merge Format",
                  "description": "Determines the format that will be used to merge the content.",
                  "defaultValue": "Binary Concatenation",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "TAR",
                        "value": "TAR",
                        "description": "A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' <path> attribute will be used to create a directory in the TAR file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named <tar.permissions> that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ZIP",
                        "value": "ZIP",
                        "description": "A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' <path> attribute will be used to create a directory in the ZIP file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The <Compression Level> property indicates the ZIP compression to use."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v3",
                        "value": "FlowFile Stream, v3",
                        "description": "A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v2",
                        "value": "FlowFile Stream, v2",
                        "description": "A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Tar, v1",
                        "value": "FlowFile Tar, v1",
                        "description": "A bin of FlowFiles will be combined into a single Version 1 FlowFile Package"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Binary Concatenation",
                        "value": "Binary Concatenation",
                        "description": "The contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Avro",
                        "value": "Avro",
                        "description": "The Avro contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Attribute Strategy": {
                  "name": "Attribute Strategy",
                  "displayName": "Attribute Strategy",
                  "description": "Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.",
                  "defaultValue": "Keep Only Common Attributes",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Keep Only Common Attributes",
                        "value": "Keep Only Common Attributes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Keep All Unique Attributes",
                        "value": "Keep All Unique Attributes"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Correlation Attribute Name": {
                  "name": "Correlation Attribute Name",
                  "displayName": "Correlation Attribute Name",
                  "description": "If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Minimum Number of Entries": {
                  "name": "Minimum Number of Entries",
                  "displayName": "Minimum Number of Entries",
                  "description": "The minimum number of files to include in a bundle",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Number of Entries": {
                  "name": "Maximum Number of Entries",
                  "displayName": "Maximum Number of Entries",
                  "description": "The maximum number of files to include in a bundle. If not specified, there is no maximum.",
                  "defaultValue": "1000",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum Group Size": {
                  "name": "Minimum Group Size",
                  "displayName": "Minimum Group Size",
                  "description": "The minimum size of for the bundle",
                  "defaultValue": "0 B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Group Size": {
                  "name": "Maximum Group Size",
                  "displayName": "Maximum Group Size",
                  "description": "The maximum size for the bundle. If not specified, there is no maximum.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Bin Age": {
                  "name": "Max Bin Age",
                  "displayName": "Max Bin Age",
                  "description": "The maximum age of a Bin that will trigger a Bin to be complete. Expected format is <duration> <time unit> where <duration> is a positive integer and time unit is one of seconds, minutes, hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum number of Bins": {
                  "name": "Maximum number of Bins",
                  "displayName": "Maximum number of Bins",
                  "description": "Specifies the maximum number of bins that can be held in memory at any one time",
                  "defaultValue": "5",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Delimiter Strategy": {
                  "name": "Delimiter Strategy",
                  "displayName": "Delimiter Strategy",
                  "description": "Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.",
                  "defaultValue": "Filename",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Filename",
                        "value": "Filename",
                        "description": "The values of Header, Footer, and Demarcator will be retrieved from the contents of a file"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text",
                        "description": "The values of Header, Footer, and Demarcator will be specified as property values"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Header File": {
                  "name": "Header File",
                  "displayName": "Header",
                  "description": "Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Footer File": {
                  "name": "Footer File",
                  "displayName": "Footer",
                  "description": "Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Demarcator File": {
                  "name": "Demarcator File",
                  "displayName": "Demarcator",
                  "description": "Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Compression Level": {
                  "name": "Compression Level",
                  "displayName": "Compression Level",
                  "description": "Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored",
                  "defaultValue": "1",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "0",
                        "value": "0"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "1",
                        "value": "1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "2",
                        "value": "2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "3",
                        "value": "3"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "4",
                        "value": "4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "5",
                        "value": "5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "6",
                        "value": "6"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "7",
                        "value": "7"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "8",
                        "value": "8"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "9",
                        "value": "9"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Keep Path": {
                  "name": "Keep Path",
                  "displayName": "Keep Path",
                  "description": "If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 5,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "09123a9e-742b-1d64-bc9e-1aadb06a066e",
            "name": "MergeContent",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "09123a9e-742b-1d64-bc9e-1aadb06a066e",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "type": "MergeContent",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 1186,
              "tasksDurationNanos": 55258738,
              "tasks": "1,186",
              "tasksDuration": "00:00:00.055",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 3
          },
          "id": "e8033678-3da3-1493-a428-663f94cb3dd9",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/e8033678-3da3-1493-a428-663f94cb3dd9",
          "position": {
            "x": 778.1367196925546,
            "y": 535.4677038719688
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e8033678-3da3-1493-a428-663f94cb3dd9",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 778.1367196925546,
              "y": 535.4677038719688
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "video_finished_${UUID()}.avro"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "e8033678-3da3-1493-a428-663f94cb3dd9",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "e8033678-3da3-1493-a428-663f94cb3dd9",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 4
          },
          "id": "35495de6-015a-1000-a990-785fb9b044d5",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/35495de6-015a-1000-a990-785fb9b044d5",
          "position": {
            "x": 9568.52682132814,
            "y": 659.3990690599808
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "35495de6-015a-1000-a990-785fb9b044d5",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 9568.52682132814,
              "y": 659.3990690599808
            },
            "name": "FetchSFTP",
            "type": "org.apache.nifi.processors.standard.FetchSFTP",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "comms.failure",
                "description": "Any FlowFile that could not be fetched from the remote server due to a communications failure will be transferred to this Relationship.",
                "autoTerminate": true
              },
              {
                "name": "not.found",
                "description": "Any FlowFile for which we receive a 'Not Found' message from the remote server will be transferred to this Relationship.",
                "autoTerminate": true
              },
              {
                "name": "permission.denied",
                "description": "Any FlowFile that could not be fetched from the remote server due to insufficient permissions will be transferred to this Relationship.",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "All FlowFiles that are received are routed to success",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hostname": "saxam.com.np",
                "Port": "22",
                "Username": "saxamcom",
                "Password": null,
                "Private Key Path": null,
                "Private Key Passphrase": null,
                "Remote File": "temp/*.txt",
                "Completion Strategy": "None",
                "Move Destination Directory": null,
                "Connection Timeout": "30 sec",
                "Data Timeout": "30 sec",
                "Send Keep Alive On Timeout": "true",
                "Host Key File": null,
                "Strict Host Key Checking": "false",
                "Use Compression": "false"
              },
              "descriptors": {
                "Hostname": {
                  "name": "Hostname",
                  "displayName": "Hostname",
                  "description": "The fully-qualified hostname or IP address of the host to fetch the data from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Port": {
                  "name": "Port",
                  "displayName": "Port",
                  "description": "The port to connect to on the remote host to fetch the data from",
                  "defaultValue": "22",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Username": {
                  "name": "Username",
                  "displayName": "Username",
                  "description": "Username",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Password": {
                  "name": "Password",
                  "displayName": "Password",
                  "description": "Password for the user account",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Path": {
                  "name": "Private Key Path",
                  "displayName": "Private Key Path",
                  "description": "The fully qualified path to the Private Key file",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Passphrase": {
                  "name": "Private Key Passphrase",
                  "displayName": "Private Key Passphrase",
                  "description": "Password for the private key",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote File": {
                  "name": "Remote File",
                  "displayName": "Remote File",
                  "description": "The fully qualified filename on the remote system",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Completion Strategy": {
                  "name": "Completion Strategy",
                  "displayName": "Completion Strategy",
                  "description": "Specifies what to do with the original file on the server once it has been pulled into NiFi. If the Completion Strategy fails, a warning will be logged but the data will still be transferred.",
                  "defaultValue": "None",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "None",
                        "value": "None",
                        "description": "Leave the file as-is"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Move File",
                        "value": "Move File",
                        "description": "Move the file to the directory specified by the <Move Destination Directory> property"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Delete File",
                        "value": "Delete File",
                        "description": "Deletes the original file from the remote system"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Move Destination Directory": {
                  "name": "Move Destination Directory",
                  "displayName": "Move Destination Directory",
                  "description": "The directory on the remote server to the move the original file to once it has been ingested into NiFi. This property is ignored unless the Completion Strategy is set to \"Move File\". The specified directory must already exist onthe remote system, or the rename will fail.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Connection Timeout": {
                  "name": "Connection Timeout",
                  "displayName": "Connection Timeout",
                  "description": "Amount of time to wait before timing out while creating a connection",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Data Timeout": {
                  "name": "Data Timeout",
                  "displayName": "Data Timeout",
                  "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Send Keep Alive On Timeout": {
                  "name": "Send Keep Alive On Timeout",
                  "displayName": "Send Keep Alive On Timeout",
                  "description": "Indicates whether or not to send a single Keep Alive message when SSH socket times out",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Host Key File": {
                  "name": "Host Key File",
                  "displayName": "Host Key File",
                  "description": "If supplied, the given file will be used as the Host Key; otherwise, no use host key file will be used",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Strict Host Key Checking": {
                  "name": "Strict Host Key Checking",
                  "displayName": "Strict Host Key Checking",
                  "description": "Indicates whether or not strict enforcement of hosts keys should be applied",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Use Compression": {
                  "name": "Use Compression",
                  "displayName": "Use Compression",
                  "description": "Indicates whether or not ZLIB compression should be used when transferring files",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "35495de6-015a-1000-a990-785fb9b044d5",
            "name": "FetchSFTP",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "35495de6-015a-1000-a990-785fb9b044d5",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchSFTP",
              "type": "FetchSFTP",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 4
          },
          "id": "73b73b91-5663-11bf-b936-89cec00c70d6",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/73b73b91-5663-11bf-b936-89cec00c70d6",
          "position": {
            "x": 5443.411509633293,
            "y": 968.9023723486973
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "73b73b91-5663-11bf-b936-89cec00c70d6",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 5443.411509633293,
              "y": 968.9023723486973
            },
            "name": "ConvertAvroSchema",
            "type": "org.apache.nifi.processors.kite.ConvertAvroSchema",
            "state": "RUNNING",
            "style": {
              "background-color": "#ffffff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Avro content that failed to convert",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Avro content that converted successfully",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Input Schema": "${avro.schema}",
                "Output Schema": "${avro.schema}",
                "Locale": "default",
                "kite-compression-type": "DEFLATE"
              },
              "descriptors": {
                "Input Schema": {
                  "name": "Input Schema",
                  "displayName": "Input Schema",
                  "description": "Avro Schema of Input Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Output Schema": {
                  "name": "Output Schema",
                  "displayName": "Output Schema",
                  "description": "Avro Schema of Output Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Locale": {
                  "name": "Locale",
                  "displayName": "Locale",
                  "description": "Locale to use for scanning data (see https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html)or \" default\" for JVM default",
                  "defaultValue": "default",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "kite-compression-type": {
                  "name": "kite-compression-type",
                  "displayName": "Compression type",
                  "description": "Compression type to use when writting Avro files. Default is Snappy.",
                  "defaultValue": "SNAPPY",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "BZIP2",
                        "value": "BZIP2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFLATE",
                        "value": "DEFLATE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZO",
                        "value": "LZO"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "73b73b91-5663-11bf-b936-89cec00c70d6",
            "name": "ConvertAvroSchema",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "73b73b91-5663-11bf-b936-89cec00c70d6",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "type": "ConvertAvroSchema",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 4
          },
          "id": "ae17374f-ba3a-1ca2-92c8-0a3463e3e590",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/ae17374f-ba3a-1ca2-92c8-0a3463e3e590",
          "position": {
            "x": 5047.553111195793,
            "y": 968.7770671729161
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "ae17374f-ba3a-1ca2-92c8-0a3463e3e590",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 5047.553111195793,
              "y": 968.7770671729161
            },
            "name": "ConvertAvroSchema",
            "type": "org.apache.nifi.processors.kite.ConvertAvroSchema",
            "state": "RUNNING",
            "style": {
              "background-color": "#ffffff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Avro content that failed to convert",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Avro content that converted successfully",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Input Schema": "${avro.schema}",
                "Output Schema": "${avro.schema}",
                "Locale": "default",
                "kite-compression-type": "DEFLATE"
              },
              "descriptors": {
                "Input Schema": {
                  "name": "Input Schema",
                  "displayName": "Input Schema",
                  "description": "Avro Schema of Input Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Output Schema": {
                  "name": "Output Schema",
                  "displayName": "Output Schema",
                  "description": "Avro Schema of Output Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Locale": {
                  "name": "Locale",
                  "displayName": "Locale",
                  "description": "Locale to use for scanning data (see https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html)or \" default\" for JVM default",
                  "defaultValue": "default",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "kite-compression-type": {
                  "name": "kite-compression-type",
                  "displayName": "Compression type",
                  "description": "Compression type to use when writting Avro files. Default is Snappy.",
                  "defaultValue": "SNAPPY",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "BZIP2",
                        "value": "BZIP2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFLATE",
                        "value": "DEFLATE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZO",
                        "value": "LZO"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "ae17374f-ba3a-1ca2-92c8-0a3463e3e590",
            "name": "ConvertAvroSchema",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "ae17374f-ba3a-1ca2-92c8-0a3463e3e590",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "type": "ConvertAvroSchema",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 5
          },
          "id": "cf133663-1892-11b0-8c1b-1cf3b59603b5",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/cf133663-1892-11b0-8c1b-1cf3b59603b5",
          "position": {
            "x": 364.49163246012813,
            "y": 750.7604343476191
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "cf133663-1892-11b0-8c1b-1cf3b59603b5",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 364.49163246012813,
              "y": 750.7604343476191
            },
            "name": "ExtractAvroMetadata",
            "type": "org.apache.nifi.processors.avro.ExtractAvroMetadata",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "A FlowFile is routed to this relationship if it cannot be parsed as Avro or metadata cannot be extracted for any reason",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "A FlowFile is routed to this relationship after metadata has been extracted.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Fingerprint Algorithm": "CRC-64-AVRO",
                "Metadata Keys": "avro.schema",
                "Count Items": "false"
              },
              "descriptors": {
                "Fingerprint Algorithm": {
                  "name": "Fingerprint Algorithm",
                  "displayName": "Fingerprint Algorithm",
                  "description": "The algorithm used to generate the schema fingerprint. Available choices are based on the Avro recommended practices for fingerprint generation.",
                  "defaultValue": "CRC-64-AVRO",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "CRC-64-AVRO",
                        "value": "CRC-64-AVRO"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "MD5",
                        "value": "MD5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SHA-256",
                        "value": "SHA-256"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Metadata Keys": {
                  "name": "Metadata Keys",
                  "displayName": "Metadata Keys",
                  "description": "A comma-separated list of keys indicating key/value pairs to extract from the Avro file header. The key 'avro.schema' can be used to extract the full schema in JSON format, and 'avro.codec' can be used to extract the codec name if one exists.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Count Items": {
                  "name": "Count Items",
                  "displayName": "Count Items",
                  "description": "If true the number of items in the datafile will be counted and stored in a FlowFile attribute 'item.count'. The counting is done by reading blocks and getting the number of items for each block, thus avoiding de-serializing. The items being counted will be the top-level items in the datafile. For example, with a schema of type record the items will be the records, and for a schema of type Array the items will be the arrays (not the number of entries in each array).",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "cf133663-1892-11b0-8c1b-1cf3b59603b5",
            "name": "ExtractAvroMetadata",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "cf133663-1892-11b0-8c1b-1cf3b59603b5",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "type": "ExtractAvroMetadata",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 3
          },
          "id": "94d81031-100a-115a-8609-027bb26dfb87",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/94d81031-100a-115a-8609-027bb26dfb87",
          "position": {
            "x": 10177.793136508872,
            "y": 867.9881646259903
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "94d81031-100a-115a-8609-027bb26dfb87",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 10177.793136508872,
              "y": 867.9881646259903
            },
            "name": "RouteOnAttribute",
            "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "datafile",
                "description": "",
                "autoTerminate": false
              },
              {
                "name": "unmatched",
                "description": "FlowFiles that do not match any user-define expression will be routed here",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Routing Strategy": "Route to Property name",
                "datafile": "${filename:endsWith('gpg')}"
              },
              "descriptors": {
                "Routing Strategy": {
                  "name": "Routing Strategy",
                  "displayName": "Routing Strategy",
                  "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                  "defaultValue": "Route to Property name",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Route to Property name",
                        "value": "Route to Property name",
                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Route to 'matched' if all match",
                        "value": "Route to 'match' if all match",
                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Route to 'matched' if any matches",
                        "value": "Route to 'match' if any matches",
                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "datafile": {
                  "name": "datafile",
                  "displayName": "datafile",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "94d81031-100a-115a-8609-027bb26dfb87",
            "name": "RouteOnAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "94d81031-100a-115a-8609-027bb26dfb87",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "type": "RouteOnAttribute",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 19
          },
          "id": "2a2319b1-015a-1000-ffff-ffff9dc86a55",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/2a2319b1-015a-1000-ffff-ffff9dc86a55",
          "position": {
            "x": 6023.000298245632,
            "y": 213.32158838204236
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "2a2319b1-015a-1000-ffff-ffff9dc86a55",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 6023.000298245632,
              "y": 213.32158838204236
            },
            "name": "ControlRate",
            "type": "org.apache.nifi.processors.standard.ControlRate",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "FlowFiles will be routed to this relationship if they are missing a necessary Rate Controlled Attribute or the attribute is not in the expected format",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles are transferred to this relationship under normal conditions",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": false,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Rate Control Criteria": "flowfile count",
                "Maximum Rate": "10",
                "Rate Controlled Attribute": null,
                "Time Duration": "1 sec",
                "Grouping Attribute": null
              },
              "descriptors": {
                "Rate Control Criteria": {
                  "name": "Rate Control Criteria",
                  "displayName": "Rate Control Criteria",
                  "description": "Indicates the criteria that is used to control the throughput rate. Changing this value resets the rate counters.",
                  "defaultValue": "data rate",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "data rate",
                        "value": "data rate",
                        "description": "Rate is controlled by counting bytes transferred per time duration."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "flowfile count",
                        "value": "flowfile count",
                        "description": "Rate is controlled by counting flowfiles transferred per time duration"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "attribute value",
                        "value": "attribute value",
                        "description": "Rate is controlled by accumulating the value of a specified attribute that is transferred per time duration"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Rate": {
                  "name": "Maximum Rate",
                  "displayName": "Maximum Rate",
                  "description": "The maximum rate at which data should pass through this processor. The format of this property is expected to be a positive integer, or a Data Size (such as '1 MB') if Rate Control Criteria is set to 'data rate'.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Rate Controlled Attribute": {
                  "name": "Rate Controlled Attribute",
                  "displayName": "Rate Controlled Attribute",
                  "description": "The name of an attribute whose values build toward the rate limit if Rate Control Criteria is set to 'attribute value'. The value of the attribute referenced by this property must be a positive long, or the FlowFile will be routed to failure. This value is ignored if Rate Control Criteria is not set to 'attribute value'. Changing this value resets the rate counters.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Time Duration": {
                  "name": "Time Duration",
                  "displayName": "Time Duration",
                  "description": "The amount of time to which the Maximum Rate pertains. Changing this value resets the rate counters.",
                  "defaultValue": "1 min",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Grouping Attribute": {
                  "name": "Grouping Attribute",
                  "displayName": "Grouping Attribute",
                  "description": "By default, a single \"throttle\" is used for all FlowFiles. If this value is specified, a separate throttle is used for each value specified by the attribute with this name. Changing this value resets the rate counters.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "2a2319b1-015a-1000-ffff-ffff9dc86a55",
            "name": "ControlRate",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "2a2319b1-015a-1000-ffff-ffff9dc86a55",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ControlRate",
              "type": "ControlRate",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 53,
              "bytesIn": 0,
              "input": "53 (0 bytes)",
              "flowFilesOut": 53,
              "bytesOut": 0,
              "output": "53 (0 bytes)",
              "taskCount": 53,
              "tasksDurationNanos": 7807381,
              "tasks": "53",
              "tasksDuration": "00:00:00.007",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bf036e7-015a-1000-f5ad-b0a3e635bfe1",
            "version": 24
          },
          "id": "28de9970-015a-1000-926b-8789fa1bd340",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/28de9970-015a-1000-926b-8789fa1bd340",
          "position": {
            "x": 9564.073713511796,
            "y": 468.5729336196421
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "28de9970-015a-1000-926b-8789fa1bd340",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 9564.073713511796,
              "y": 468.5729336196421
            },
            "name": "ListSFTP",
            "type": "org.apache.nifi.processors.standard.ListSFTP",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are received are routed to success",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": false,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": true,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "Hostname": "sftp.cloud.twc.net",
                "Port": "80",
                "Username": "arch-service-acct",
                "Password": "********",
                "Private Key Path": null,
                "Private Key Passphrase": null,
                "Remote Path": "./ExternalShare/XTR_CHTR_PRODUCT",
                "Distributed Cache Service": null,
                "Search Recursively": "false",
                "File Filter Regex": ".*.gpg",
                "Path Filter Regex": null,
                "Ignore Dotted Files": "true",
                "Strict Host Key Checking": "false",
                "Host Key File": null,
                "Connection Timeout": "30 sec",
                "Data Timeout": "30 sec",
                "Send Keep Alive On Timeout": "true"
              },
              "descriptors": {
                "Hostname": {
                  "name": "Hostname",
                  "displayName": "Hostname",
                  "description": "The fully qualified hostname or IP address of the remote system",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Port": {
                  "name": "Port",
                  "displayName": "Port",
                  "description": "The port to connect to on the remote host to fetch the data from",
                  "defaultValue": "22",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Username": {
                  "name": "Username",
                  "displayName": "Username",
                  "description": "Username",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Password": {
                  "name": "Password",
                  "displayName": "Password",
                  "description": "Password for the user account",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Path": {
                  "name": "Private Key Path",
                  "displayName": "Private Key Path",
                  "description": "The fully qualified path to the Private Key file",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Passphrase": {
                  "name": "Private Key Passphrase",
                  "displayName": "Private Key Passphrase",
                  "description": "Password for the private key",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Path": {
                  "name": "Remote Path",
                  "displayName": "Remote Path",
                  "description": "The path on the remote system from which to pull or push files",
                  "defaultValue": ".",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Distributed Cache Service": {
                  "name": "Distributed Cache Service",
                  "displayName": "Distributed Cache Service",
                  "description": "Specifies the Controller Service that should be used to maintain state about what has been pulled from the remote server so that if a new node begins pulling data, it won't duplicate all of the work that has been done. If not specified, the information will not be shared across the cluster. This property does not need to be set for standalone instances of NiFi but should be configured if NiFi is run within a cluster.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.distributed.cache.client.DistributedMapCacheClient"
                },
                "Search Recursively": {
                  "name": "Search Recursively",
                  "displayName": "Search Recursively",
                  "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "File Filter Regex": {
                  "name": "File Filter Regex",
                  "displayName": "File Filter Regex",
                  "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Path Filter Regex": {
                  "name": "Path Filter Regex",
                  "displayName": "Path Filter Regex",
                  "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Ignore Dotted Files": {
                  "name": "Ignore Dotted Files",
                  "displayName": "Ignore Dotted Files",
                  "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Strict Host Key Checking": {
                  "name": "Strict Host Key Checking",
                  "displayName": "Strict Host Key Checking",
                  "description": "Indicates whether or not strict enforcement of hosts keys should be applied",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Host Key File": {
                  "name": "Host Key File",
                  "displayName": "Host Key File",
                  "description": "If supplied, the given file will be used as the Host Key; otherwise, no use host key file will be used",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Connection Timeout": {
                  "name": "Connection Timeout",
                  "displayName": "Connection Timeout",
                  "description": "Amount of time to wait before timing out while creating a connection",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Data Timeout": {
                  "name": "Data Timeout",
                  "displayName": "Data Timeout",
                  "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Send Keep Alive On Timeout": {
                  "name": "Send Keep Alive On Timeout",
                  "displayName": "Send Keep Alive On Timeout",
                  "description": "Indicates whether or not to send a single Keep Alive message when SSH socket times out",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "PRIMARY",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "28de9970-015a-1000-926b-8789fa1bd340",
            "name": "ListSFTP",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "28de9970-015a-1000-926b-8789fa1bd340",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListSFTP",
              "type": "ListSFTP",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 4
          },
          "id": "015a1000-94d8-1029-8826-93a7cc98cac1",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/015a1000-94d8-1029-8826-93a7cc98cac1",
          "position": {
            "x": 9568.537802939203,
            "y": 875.5105361036706
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "015a1000-94d8-1029-8826-93a7cc98cac1",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 9568.537802939203,
              "y": 875.5105361036706
            },
            "name": "PutFile",
            "type": "org.apache.nifi.processors.standard.PutFile",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to the output directory for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to the output directory are transferred to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Directory": "${sftp-downloads-dir}",
                "Conflict Resolution Strategy": "replace",
                "Create Missing Directories": "true",
                "Maximum File Count": null,
                "Last Modified Time": null,
                "Permissions": null,
                "Owner": null,
                "Group": null
              },
              "descriptors": {
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The directory to which files should be written. You may use expression language such as /aa/bb/${path}",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Create Missing Directories": {
                  "name": "Create Missing Directories",
                  "displayName": "Create Missing Directories",
                  "description": "If true, then missing destination directories will be created. If false, flowfiles are penalized and sent to failure.",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum File Count": {
                  "name": "Maximum File Count",
                  "displayName": "Maximum File Count",
                  "description": "Specifies the maximum number of files that can exist in the output directory",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Last Modified Time": {
                  "name": "Last Modified Time",
                  "displayName": "Last Modified Time",
                  "description": "Sets the lastModifiedTime on the output file to the value of this attribute.  Format must be yyyy-MM-dd'T'HH:mm:ssZ.  You may also use expression language such as ${file.lastModifiedTime}.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Permissions": {
                  "name": "Permissions",
                  "displayName": "Permissions",
                  "description": "Sets the permissions on the output file to the value of this attribute.  Format must be either UNIX rwxrwxrwx with a - in place of denied permissions (e.g. rw-r--r--) or an octal number (e.g. 644).  You may also use expression language such as ${file.permissions}.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Owner": {
                  "name": "Owner",
                  "displayName": "Owner",
                  "description": "Sets the owner on the output file to the value of this attribute.  You may also use expression language such as ${file.owner}.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Group": {
                  "name": "Group",
                  "displayName": "Group",
                  "description": "Sets the group on the output file to the value of this attribute.  You may also use expression language such as ${file.group}.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "015a1000-94d8-1029-8826-93a7cc98cac1",
            "name": "PutFile",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "015a1000-94d8-1029-8826-93a7cc98cac1",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutFile",
              "type": "PutFile",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "27cc31d1-e681-1ace-a55b-dd4b5ebd1485",
            "version": 16
          },
          "id": "f6f94f44-0159-1000-ab29-62833efb2221",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/f6f94f44-0159-1000-ab29-62833efb2221",
          "position": {
            "x": 8217.194882699298,
            "y": 1495.6833615026655
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "f6f94f44-0159-1000-ab29-62833efb2221",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8217.194882699298,
              "y": 1495.6833615026655
            },
            "name": "MergeContent",
            "type": "org.apache.nifi.processors.standard.MergeContent",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure",
                "autoTerminate": true
              },
              {
                "name": "merged",
                "description": "The FlowFile containing the merged content",
                "autoTerminate": false
              },
              {
                "name": "original",
                "description": "The FlowFiles that were used to create the bundle",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Merge Strategy": "Bin-Packing Algorithm",
                "Merge Format": "FlowFile Stream, v3",
                "Attribute Strategy": "Keep All Unique Attributes",
                "Correlation Attribute Name": "file_pair",
                "Minimum Number of Entries": "2",
                "Maximum Number of Entries": "2",
                "Minimum Group Size": "0 B",
                "Maximum Group Size": null,
                "Max Bin Age": null,
                "Maximum number of Bins": "5",
                "Delimiter Strategy": "Filename",
                "Header File": null,
                "Footer File": null,
                "Demarcator File": null,
                "Compression Level": "1",
                "Keep Path": "false"
              },
              "descriptors": {
                "Merge Strategy": {
                  "name": "Merge Strategy",
                  "displayName": "Merge Strategy",
                  "description": "Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles",
                  "defaultValue": "Bin-Packing Algorithm",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Bin-Packing Algorithm",
                        "value": "Bin-Packing Algorithm",
                        "description": "Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the <Correlation Attribute> property is set)"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Defragment",
                        "value": "Defragment",
                        "description": "Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes <fragment.identifier>, <fragment.count>, and <fragment.index> or alternatively (for backward compatibility purposes) <segment.identifier>, <segment.count>, and <segment.index>. All FlowFiles with the same value for \"fragment.identifier\" will be grouped together. All FlowFiles in this group must have the same value for the \"fragment.count\" attribute. All FlowFiles in this group must have a unique value for the \"fragment.index\" attribute between 0 and the value of the \"fragment.count\" attribute."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Merge Format": {
                  "name": "Merge Format",
                  "displayName": "Merge Format",
                  "description": "Determines the format that will be used to merge the content.",
                  "defaultValue": "Binary Concatenation",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "TAR",
                        "value": "TAR",
                        "description": "A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' <path> attribute will be used to create a directory in the TAR file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named <tar.permissions> that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ZIP",
                        "value": "ZIP",
                        "description": "A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' <path> attribute will be used to create a directory in the ZIP file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The <Compression Level> property indicates the ZIP compression to use."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v3",
                        "value": "FlowFile Stream, v3",
                        "description": "A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v2",
                        "value": "FlowFile Stream, v2",
                        "description": "A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Tar, v1",
                        "value": "FlowFile Tar, v1",
                        "description": "A bin of FlowFiles will be combined into a single Version 1 FlowFile Package"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Binary Concatenation",
                        "value": "Binary Concatenation",
                        "description": "The contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Avro",
                        "value": "Avro",
                        "description": "The Avro contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Attribute Strategy": {
                  "name": "Attribute Strategy",
                  "displayName": "Attribute Strategy",
                  "description": "Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.",
                  "defaultValue": "Keep Only Common Attributes",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Keep Only Common Attributes",
                        "value": "Keep Only Common Attributes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Keep All Unique Attributes",
                        "value": "Keep All Unique Attributes"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Correlation Attribute Name": {
                  "name": "Correlation Attribute Name",
                  "displayName": "Correlation Attribute Name",
                  "description": "If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Minimum Number of Entries": {
                  "name": "Minimum Number of Entries",
                  "displayName": "Minimum Number of Entries",
                  "description": "The minimum number of files to include in a bundle",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Number of Entries": {
                  "name": "Maximum Number of Entries",
                  "displayName": "Maximum Number of Entries",
                  "description": "The maximum number of files to include in a bundle. If not specified, there is no maximum.",
                  "defaultValue": "1000",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum Group Size": {
                  "name": "Minimum Group Size",
                  "displayName": "Minimum Group Size",
                  "description": "The minimum size of for the bundle",
                  "defaultValue": "0 B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Group Size": {
                  "name": "Maximum Group Size",
                  "displayName": "Maximum Group Size",
                  "description": "The maximum size for the bundle. If not specified, there is no maximum.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Bin Age": {
                  "name": "Max Bin Age",
                  "displayName": "Max Bin Age",
                  "description": "The maximum age of a Bin that will trigger a Bin to be complete. Expected format is <duration> <time unit> where <duration> is a positive integer and time unit is one of seconds, minutes, hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum number of Bins": {
                  "name": "Maximum number of Bins",
                  "displayName": "Maximum number of Bins",
                  "description": "Specifies the maximum number of bins that can be held in memory at any one time",
                  "defaultValue": "5",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Delimiter Strategy": {
                  "name": "Delimiter Strategy",
                  "displayName": "Delimiter Strategy",
                  "description": "Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.",
                  "defaultValue": "Filename",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Filename",
                        "value": "Filename",
                        "description": "The values of Header, Footer, and Demarcator will be retrieved from the contents of a file"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text",
                        "description": "The values of Header, Footer, and Demarcator will be specified as property values"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Header File": {
                  "name": "Header File",
                  "displayName": "Header",
                  "description": "Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Footer File": {
                  "name": "Footer File",
                  "displayName": "Footer",
                  "description": "Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Demarcator File": {
                  "name": "Demarcator File",
                  "displayName": "Demarcator",
                  "description": "Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Compression Level": {
                  "name": "Compression Level",
                  "displayName": "Compression Level",
                  "description": "Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored",
                  "defaultValue": "1",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "0",
                        "value": "0"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "1",
                        "value": "1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "2",
                        "value": "2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "3",
                        "value": "3"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "4",
                        "value": "4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "5",
                        "value": "5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "6",
                        "value": "6"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "7",
                        "value": "7"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "8",
                        "value": "8"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "9",
                        "value": "9"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Keep Path": {
                  "name": "Keep Path",
                  "displayName": "Keep Path",
                  "description": "If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "f6f94f44-0159-1000-ab29-62833efb2221",
            "name": "MergeContent",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "f6f94f44-0159-1000-ab29-62833efb2221",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "type": "MergeContent",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 898,
              "tasksDurationNanos": 28135400,
              "tasks": "898",
              "tasksDuration": "00:00:00.028",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 3
          },
          "id": "172c3826-90b0-1810-aa0a-91b33478f354",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/172c3826-90b0-1810-aa0a-91b33478f354",
          "position": {
            "x": 1579.202099387849,
            "y": 529.2036497226492
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "172c3826-90b0-1810-aa0a-91b33478f354",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 1579.202099387849,
              "y": 529.2036497226492
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "video_errors_${UUID()}.avro"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "172c3826-90b0-1810-aa0a-91b33478f354",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "172c3826-90b0-1810-aa0a-91b33478f354",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 12
          },
          "id": "f75fd162-0159-1000-9ec1-767dd0cf31c2",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/f75fd162-0159-1000-9ec1-767dd0cf31c2",
          "position": {
            "x": 8852.06936099248,
            "y": 1299.3115400786326
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "f75fd162-0159-1000-9ec1-767dd0cf31c2",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8852.06936099248,
              "y": 1299.3115400786326
            },
            "name": "Extract Encrypted Date Filename",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "annotationData": "<criteria>\n    <flowFilePolicy>USE_CLONE</flowFilePolicy>\n    <rules>\n        <actions>\n            <attribute>datafile</attribute>\n            <id>ba85b91f-cb6a-484b-9a93-b49770eeb62e</id>\n            <value>${s3-downloads-dir}/${filename}</value>\n        </actions>\n        <conditions>\n            <expression>${filename:endsWith('enc')}</expression>\n            <id>27af86aa-7223-4d06-a24f-c165f102dc5b</id>\n        </conditions>\n        <id>702a46a6-d6eb-4e69-9f1c-05e94e805241</id>\n        <name>If encrypted data file is found</name>\n    </rules>\n</criteria>",
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "f75fd162-0159-1000-9ec1-767dd0cf31c2",
            "name": "Extract Encrypted Date Filename",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "f75fd162-0159-1000-9ec1-767dd0cf31c2",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "Extract Encrypted Date Filename",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 4
          },
          "id": "94d81042-100a-115a-8dd7-db1c14323572",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/94d81042-100a-115a-8dd7-db1c14323572",
          "position": {
            "x": 9575.49125662606,
            "y": 1276.3271748646378
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "94d81042-100a-115a-8dd7-db1c14323572",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 9575.49125662606,
              "y": 1276.3271748646378
            },
            "name": "LogAttribute",
            "type": "org.apache.nifi.processors.standard.LogAttribute",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Log Level": "info",
                "Log Payload": "true",
                "Attributes to Log": null,
                "Attributes to Ignore": null,
                "Log prefix": null
              },
              "descriptors": {
                "Log Level": {
                  "name": "Log Level",
                  "displayName": "Log Level",
                  "description": "The Log Level to use when logging the Attributes",
                  "defaultValue": "info",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "trace",
                        "value": "trace"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "debug",
                        "value": "debug"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "info",
                        "value": "info"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "warn",
                        "value": "warn"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "error",
                        "value": "error"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Log Payload": {
                  "name": "Log Payload",
                  "displayName": "Log Payload",
                  "description": "If true, the FlowFile's payload will be logged, in addition to its attributes; otherwise, just the Attributes will be logged.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Attributes to Log": {
                  "name": "Attributes to Log",
                  "displayName": "Attributes to Log",
                  "description": "A comma-separated list of Attributes to Log. If not specified, all attributes will be logged.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Attributes to Ignore": {
                  "name": "Attributes to Ignore",
                  "displayName": "Attributes to Ignore",
                  "description": "A comma-separated list of Attributes to ignore. If not specified, no attributes will be ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Log prefix": {
                  "name": "Log prefix",
                  "displayName": "Log prefix",
                  "description": "Log prefix appended to the log lines. It helps to distinguish the output of multiple LogAttribute processors.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "94d81042-100a-115a-8dd7-db1c14323572",
            "name": "LogAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "94d81042-100a-115a-8dd7-db1c14323572",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "LogAttribute",
              "type": "LogAttribute",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 8
          },
          "id": "8ee6ddbc-0159-1000-ffff-ffff9e5cbd99",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/8ee6ddbc-0159-1000-ffff-ffff9e5cbd99",
          "position": {
            "x": 2148.227257417181,
            "y": 257.6236017645747
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "8ee6ddbc-0159-1000-ffff-ffff9e5cbd99",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 2148.227257417181,
              "y": 257.6236017645747
            },
            "name": "RouteOnAttribute - filename",
            "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "tru-connect",
                "description": "",
                "autoTerminate": false
              },
              {
                "name": "unmatched",
                "description": "FlowFiles that do not match any user-define expression will be routed here",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Routing Strategy": "Route to Property name",
                "tru-connect": "${s3key:startsWith('tru-connect'):and( \n  ${s3key:contains('bz2'):or(\n    ${s3key:contains('gz')}\n  )} \n):and(\n  ${s3filename:isEmpty():not()}\n)}"
              },
              "descriptors": {
                "Routing Strategy": {
                  "name": "Routing Strategy",
                  "displayName": "Routing Strategy",
                  "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                  "defaultValue": "Route to Property name",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Route to Property name",
                        "value": "Route to Property name",
                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Route to 'matched' if all match",
                        "value": "Route to 'match' if all match",
                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Route to 'matched' if any matches",
                        "value": "Route to 'match' if any matches",
                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "tru-connect": {
                  "name": "tru-connect",
                  "displayName": "tru-connect",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "8ee6ddbc-0159-1000-ffff-ffff9e5cbd99",
            "name": "RouteOnAttribute - filename",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "8ee6ddbc-0159-1000-ffff-ffff9e5cbd99",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute - filename",
              "type": "RouteOnAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 27
          },
          "id": "82c53c3a-977b-1733-94ce-f980761be987",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/82c53c3a-977b-1733-94ce-f980761be987",
          "position": {
            "x": 8657.760212581776,
            "y": 2315.689430871581
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "82c53c3a-977b-1733-94ce-f980761be987",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8657.760212581776,
              "y": 2315.689430871581
            },
            "name": "PutFile",
            "type": "org.apache.nifi.processors.standard.PutFile",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to the output directory for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to the output directory are transferred to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Directory": "/data/nifi/s3_decryption_downloads/s3_decrypted_output",
                "Conflict Resolution Strategy": "replace",
                "Create Missing Directories": "true",
                "Maximum File Count": null,
                "Last Modified Time": null,
                "Permissions": null,
                "Owner": null,
                "Group": null
              },
              "descriptors": {
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The directory to which files should be written. You may use expression language such as /aa/bb/${path}",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Create Missing Directories": {
                  "name": "Create Missing Directories",
                  "displayName": "Create Missing Directories",
                  "description": "If true, then missing destination directories will be created. If false, flowfiles are penalized and sent to failure.",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum File Count": {
                  "name": "Maximum File Count",
                  "displayName": "Maximum File Count",
                  "description": "Specifies the maximum number of files that can exist in the output directory",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Last Modified Time": {
                  "name": "Last Modified Time",
                  "displayName": "Last Modified Time",
                  "description": "Sets the lastModifiedTime on the output file to the value of this attribute.  Format must be yyyy-MM-dd'T'HH:mm:ssZ.  You may also use expression language such as ${file.lastModifiedTime}.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Permissions": {
                  "name": "Permissions",
                  "displayName": "Permissions",
                  "description": "Sets the permissions on the output file to the value of this attribute.  Format must be either UNIX rwxrwxrwx with a - in place of denied permissions (e.g. rw-r--r--) or an octal number (e.g. 644).  You may also use expression language such as ${file.permissions}.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Owner": {
                  "name": "Owner",
                  "displayName": "Owner",
                  "description": "Sets the owner on the output file to the value of this attribute.  You may also use expression language such as ${file.owner}.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Group": {
                  "name": "Group",
                  "displayName": "Group",
                  "description": "Sets the group on the output file to the value of this attribute.  You may also use expression language such as ${file.group}.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "82c53c3a-977b-1733-94ce-f980761be987",
            "name": "PutFile",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "82c53c3a-977b-1733-94ce-f980761be987",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutFile",
              "type": "PutFile",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 7
          },
          "id": "04d9325b-9931-1a0b-b8bd-79c8d0ded775",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/04d9325b-9931-1a0b-b8bd-79c8d0ded775",
          "position": {
            "x": 4649.0975589738,
            "y": 745.2993137421504
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "04d9325b-9931-1a0b-b8bd-79c8d0ded775",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 4649.0975589738,
              "y": 745.2993137421504
            },
            "name": "ExtractAvroMetadata",
            "type": "org.apache.nifi.processors.avro.ExtractAvroMetadata",
            "state": "RUNNING",
            "style": {
              "background-color": "#ffffff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "A FlowFile is routed to this relationship if it cannot be parsed as Avro or metadata cannot be extracted for any reason",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "A FlowFile is routed to this relationship after metadata has been extracted.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Fingerprint Algorithm": "CRC-64-AVRO",
                "Metadata Keys": "avro.schema",
                "Count Items": "false"
              },
              "descriptors": {
                "Fingerprint Algorithm": {
                  "name": "Fingerprint Algorithm",
                  "displayName": "Fingerprint Algorithm",
                  "description": "The algorithm used to generate the schema fingerprint. Available choices are based on the Avro recommended practices for fingerprint generation.",
                  "defaultValue": "CRC-64-AVRO",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "CRC-64-AVRO",
                        "value": "CRC-64-AVRO"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "MD5",
                        "value": "MD5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SHA-256",
                        "value": "SHA-256"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Metadata Keys": {
                  "name": "Metadata Keys",
                  "displayName": "Metadata Keys",
                  "description": "A comma-separated list of keys indicating key/value pairs to extract from the Avro file header. The key 'avro.schema' can be used to extract the full schema in JSON format, and 'avro.codec' can be used to extract the codec name if one exists.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Count Items": {
                  "name": "Count Items",
                  "displayName": "Count Items",
                  "description": "If true the number of items in the datafile will be counted and stored in a FlowFile attribute 'item.count'. The counting is done by reading blocks and getting the number of items for each block, thus avoiding de-serializing. The items being counted will be the top-level items in the datafile. For example, with a schema of type record the items will be the records, and for a schema of type Array the items will be the arrays (not the number of entries in each array).",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "04d9325b-9931-1a0b-b8bd-79c8d0ded775",
            "name": "ExtractAvroMetadata",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "04d9325b-9931-1a0b-b8bd-79c8d0ded775",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "type": "ExtractAvroMetadata",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "version": 0
          },
          "id": "e69c3edd-0d73-120f-ffff-ffffb72c2ad0",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/e69c3edd-0d73-120f-ffff-ffffb72c2ad0",
          "position": {
            "x": 2739.946348803499,
            "y": 250.17745735036442
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e69c3edd-0d73-120f-ffff-ffffb72c2ad0",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 2739.946348803499,
              "y": 250.17745735036442
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "${s3filename}"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "e69c3edd-0d73-120f-ffff-ffffb72c2ad0",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "e69c3edd-0d73-120f-ffff-ffffb72c2ad0",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "fb005d0f-0159-1000-b23c-79cbf7aca332",
            "version": 13
          },
          "id": "fe8f3017-92c9-10a2-a4d5-ed1412841c72",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/fe8f3017-92c9-10a2-a4d5-ed1412841c72",
          "position": {
            "x": 1182.3768456358662,
            "y": 53.048133486574784
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "fe8f3017-92c9-10a2-a4d5-ed1412841c72",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 1182.3768456358662,
              "y": 53.048133486574784
            },
            "name": "GetKafka - video_messages_D3DA2AF2671B84F37F9E0F83A73EB1DC",
            "type": "org.apache.nifi.processors.kafka.GetKafka",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are created are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "ZooKeeper Connection String": "zk2-internal.dp.aws.charter.com:2181,zk3-internal.dp.aws.charter.com:2181,zk3-internal.dp.aws.charter.com:2181",
                "Topic Name": "video_messages_D3DA2AF2671B84F37F9E0F83A73EB1DC",
                "Zookeeper Commit Frequency": "60 secs",
                "Batch Size": "1",
                "Message Demarcator": "\\n",
                "Client Name": "NiFi-f4b3e296-0158-1000-0000-00003aeefad8",
                "Group ID": "fe8f3017-92c9-10a2-a4d5-ed1412841c72",
                "Kafka Communications Timeout": "30 secs",
                "ZooKeeper Communications Timeout": "30 secs",
                "Auto Offset Reset": "smallest",
                "fetch.message.max.bytes": "20971520",
                "num.consumer.fetchers": "2",
                "queued.max.message.chunks": "5",
                "socket.receive.buffer.bytes": "1048576"
              },
              "descriptors": {
                "ZooKeeper Connection String": {
                  "name": "ZooKeeper Connection String",
                  "displayName": "ZooKeeper Connection String",
                  "description": "The Connection String to use in order to connect to ZooKeeper. This is often a comma-separated list of <host>:<port> combinations. For example, host1:2181,host2:2181,host3:2188",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Topic Name": {
                  "name": "Topic Name",
                  "displayName": "Topic Name",
                  "description": "The Kafka Topic to pull messages from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Zookeeper Commit Frequency": {
                  "name": "Zookeeper Commit Frequency",
                  "displayName": "Zookeeper Commit Frequency",
                  "description": "Specifies how often to communicate with ZooKeeper to indicate which messages have been pulled. A longer time period will result in better overall performance but can result in more data duplication if a NiFi node is lost",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "Specifies the maximum number of messages to combine into a single FlowFile. These messages will be concatenated together with the <Message Demarcator> string placed between the content of each message. If the messages from Kafka should not be concatenated together, leave this value at 1.",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Message Demarcator": {
                  "name": "Message Demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the characters to use in order to demarcate multiple messages from Kafka. If the <Batch Size> property is set to 1, this value is ignored. Otherwise, for each two subsequent messages in the batch, this value will be placed in between them.",
                  "defaultValue": "\\n",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Client Name": {
                  "name": "Client Name",
                  "displayName": "Client Name",
                  "description": "Client Name to use when communicating with Kafka",
                  "defaultValue": "NiFi-fe8f3017-92c9-10a2-a4d5-ed1412841c72",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Group ID": {
                  "name": "Group ID",
                  "displayName": "Group ID",
                  "description": "A Group ID is used to identify consumers that are within the same consumer group",
                  "defaultValue": "fe8f3017-92c9-10a2-a4d5-ed1412841c72",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kafka Communications Timeout": {
                  "name": "Kafka Communications Timeout",
                  "displayName": "Kafka Communications Timeout",
                  "description": "The amount of time to wait for a response from Kafka before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "ZooKeeper Communications Timeout": {
                  "name": "ZooKeeper Communications Timeout",
                  "displayName": "ZooKeeper Communications Timeout",
                  "description": "The amount of time to wait for a response from ZooKeeper before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Auto Offset Reset": {
                  "name": "Auto Offset Reset",
                  "displayName": "Auto Offset Reset",
                  "description": "Automatically reset the offset to the smallest or largest offset available on the broker",
                  "defaultValue": "largest",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "smallest",
                        "value": "smallest"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "largest",
                        "value": "largest"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "fetch.message.max.bytes": {
                  "name": "fetch.message.max.bytes",
                  "displayName": "fetch.message.max.bytes",
                  "description": "Specifies the value for 'fetch.message.max.bytes' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "num.consumer.fetchers": {
                  "name": "num.consumer.fetchers",
                  "displayName": "num.consumer.fetchers",
                  "description": "Specifies the value for 'num.consumer.fetchers' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "queued.max.message.chunks": {
                  "name": "queued.max.message.chunks",
                  "displayName": "queued.max.message.chunks",
                  "description": "Specifies the value for 'queued.max.message.chunks' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "socket.receive.buffer.bytes": {
                  "name": "socket.receive.buffer.bytes",
                  "displayName": "socket.receive.buffer.bytes",
                  "description": "Specifies the value for 'socket.receive.buffer.bytes' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 2000,
              "concurrentlySchedulableTaskCount": 32,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "fe8f3017-92c9-10a2-a4d5-ed1412841c72",
            "name": "GetKafka - video_messages_D3DA2AF2671B84F37F9E0F83A73EB1DC",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "fe8f3017-92c9-10a2-a4d5-ed1412841c72",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka - video_messages_D3DA2AF2671B84F37F9E0F83A73EB1DC",
              "type": "GetKafka",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 438100219,
              "read": "0 bytes",
              "written": "417.8 MB",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 23188,
              "bytesOut": 438100219,
              "output": "23,188 (417.8 MB)",
              "taskCount": 22512103,
              "tasksDurationNanos": 28836033409346,
              "tasks": "22,512,103",
              "tasksDuration": "08:00:36.033",
              "activeThreadCount": 96
            }
          }
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 14
          },
          "id": "e69c3e2b-0d73-120f-90a7-8a70c9875079",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/e69c3e2b-0d73-120f-90a7-8a70c9875079",
          "position": {
            "x": 2712.7092280036004,
            "y": 840.2000994859816
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e69c3e2b-0d73-120f-90a7-8a70c9875079",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 2712.7092280036004,
              "y": 840.2000994859816
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/buckets/pi-wireless/${hdfsPath}/",
                "Conflict Resolution Strategy": "replace",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 5,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "e69c3e2b-0d73-120f-90a7-8a70c9875079",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "e69c3e2b-0d73-120f-90a7-8a70c9875079",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "63c4f751-015a-1000-82e1-7e29b0536e15",
            "version": 5
          },
          "id": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
          "position": {
            "x": 8222.070427364728,
            "y": 1297.3242385305673
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8222.070427364728,
              "y": 1297.3242385305673
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "file_pair": "${filename:substringBeforeLast('.')}",
                "filename": "${filename:substringAfterLast('/')}"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "file_pair": {
                  "name": "file_pair",
                  "displayName": "file_pair",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 8
          },
          "id": "a5833290-003e-154e-943f-103238eb7948",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/a5833290-003e-154e-943f-103238eb7948",
          "position": {
            "x": -33.23097693897307,
            "y": 973.0099773291661
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a5833290-003e-154e-943f-103238eb7948",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -33.23097693897307,
              "y": 973.0099773291661
            },
            "name": "ConvertAvroSchema",
            "type": "org.apache.nifi.processors.kite.ConvertAvroSchema",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Avro content that failed to convert",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Avro content that converted successfully",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Input Schema": "${avro.schema}",
                "Output Schema": "${avro.schema}",
                "Locale": "default",
                "kite-compression-type": "DEFLATE"
              },
              "descriptors": {
                "Input Schema": {
                  "name": "Input Schema",
                  "displayName": "Input Schema",
                  "description": "Avro Schema of Input Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Output Schema": {
                  "name": "Output Schema",
                  "displayName": "Output Schema",
                  "description": "Avro Schema of Output Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Locale": {
                  "name": "Locale",
                  "displayName": "Locale",
                  "description": "Locale to use for scanning data (see https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html)or \" default\" for JVM default",
                  "defaultValue": "default",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "kite-compression-type": {
                  "name": "kite-compression-type",
                  "displayName": "Compression type",
                  "description": "Compression type to use when writting Avro files. Default is Snappy.",
                  "defaultValue": "SNAPPY",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "BZIP2",
                        "value": "BZIP2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFLATE",
                        "value": "DEFLATE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZO",
                        "value": "LZO"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "a5833290-003e-154e-943f-103238eb7948",
            "name": "ConvertAvroSchema",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "a5833290-003e-154e-943f-103238eb7948",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "type": "ConvertAvroSchema",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "e8033678-3da3-1493-b59f-613002f2c513",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/e8033678-3da3-1493-b59f-613002f2c513",
          "position": {
            "x": 4641.623851871985,
            "y": 522.9138530486027
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e8033678-3da3-1493-b59f-613002f2c513",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 4641.623851871985,
              "y": 522.9138530486027
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "venona_finished_${UUID()}.avro"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "e8033678-3da3-1493-b59f-613002f2c513",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "e8033678-3da3-1493-b59f-613002f2c513",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "version": 0
          },
          "id": "bd8235ca-912e-11f2-8ec9-efdca084e6ea",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/bd8235ca-912e-11f2-8ec9-efdca084e6ea",
          "position": {
            "x": 4118.313499142935,
            "y": 33.53053213208989
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "bd8235ca-912e-11f2-8ec9-efdca084e6ea",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 4118.313499142935,
              "y": 33.53053213208989
            },
            "name": "ListSFTP charcomw@tms:/On2/char",
            "type": "org.apache.nifi.processors.standard.ListSFTP",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are received are routed to success",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": false,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": true,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "Hostname": "on.tmstv.com",
                "Port": "22",
                "Username": "twinvid",
                "Password": "********",
                "Private Key Path": null,
                "Private Key Passphrase": null,
                "Remote Path": "/On2/twrd/",
                "Distributed Cache Service": null,
                "Search Recursively": "false",
                "File Filter Regex": ".*on_chtw_tv_(programs|schedules|sources)_v22_.*\\.xml\\.gz",
                "Path Filter Regex": null,
                "Ignore Dotted Files": "true",
                "Strict Host Key Checking": "false",
                "Host Key File": null,
                "Connection Timeout": "30 sec",
                "Data Timeout": "30 sec",
                "Send Keep Alive On Timeout": "true"
              },
              "descriptors": {
                "Hostname": {
                  "name": "Hostname",
                  "displayName": "Hostname",
                  "description": "The fully qualified hostname or IP address of the remote system",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Port": {
                  "name": "Port",
                  "displayName": "Port",
                  "description": "The port to connect to on the remote host to fetch the data from",
                  "defaultValue": "22",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Username": {
                  "name": "Username",
                  "displayName": "Username",
                  "description": "Username",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Password": {
                  "name": "Password",
                  "displayName": "Password",
                  "description": "Password for the user account",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Path": {
                  "name": "Private Key Path",
                  "displayName": "Private Key Path",
                  "description": "The fully qualified path to the Private Key file",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Passphrase": {
                  "name": "Private Key Passphrase",
                  "displayName": "Private Key Passphrase",
                  "description": "Password for the private key",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Path": {
                  "name": "Remote Path",
                  "displayName": "Remote Path",
                  "description": "The path on the remote system from which to pull or push files",
                  "defaultValue": ".",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Distributed Cache Service": {
                  "name": "Distributed Cache Service",
                  "displayName": "Distributed Cache Service",
                  "description": "Specifies the Controller Service that should be used to maintain state about what has been pulled from the remote server so that if a new node begins pulling data, it won't duplicate all of the work that has been done. If not specified, the information will not be shared across the cluster. This property does not need to be set for standalone instances of NiFi but should be configured if NiFi is run within a cluster.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.distributed.cache.client.DistributedMapCacheClient"
                },
                "Search Recursively": {
                  "name": "Search Recursively",
                  "displayName": "Search Recursively",
                  "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "File Filter Regex": {
                  "name": "File Filter Regex",
                  "displayName": "File Filter Regex",
                  "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Path Filter Regex": {
                  "name": "Path Filter Regex",
                  "displayName": "Path Filter Regex",
                  "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Ignore Dotted Files": {
                  "name": "Ignore Dotted Files",
                  "displayName": "Ignore Dotted Files",
                  "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Strict Host Key Checking": {
                  "name": "Strict Host Key Checking",
                  "displayName": "Strict Host Key Checking",
                  "description": "Indicates whether or not strict enforcement of hosts keys should be applied",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Host Key File": {
                  "name": "Host Key File",
                  "displayName": "Host Key File",
                  "description": "If supplied, the given file will be used as the Host Key; otherwise, no use host key file will be used",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Connection Timeout": {
                  "name": "Connection Timeout",
                  "displayName": "Connection Timeout",
                  "description": "Amount of time to wait before timing out while creating a connection",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Data Timeout": {
                  "name": "Data Timeout",
                  "displayName": "Data Timeout",
                  "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Send Keep Alive On Timeout": {
                  "name": "Send Keep Alive On Timeout",
                  "displayName": "Send Keep Alive On Timeout",
                  "description": "Indicates whether or not to send a single Keep Alive message when SSH socket times out",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "3600 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "PRIMARY",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "bd8235ca-912e-11f2-8ec9-efdca084e6ea",
            "name": "ListSFTP charcomw@tms:/On2/char",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "bd8235ca-912e-11f2-8ec9-efdca084e6ea",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListSFTP charcomw@tms:/On2/char",
              "type": "ListSFTP",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 9
          },
          "id": "b2aa3bb3-aa52-1406-bc7e-8e1ac87c4dae",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/b2aa3bb3-aa52-1406-bc7e-8e1ac87c4dae",
          "position": {
            "x": 365.0247503579567,
            "y": 534.2685094683002
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "b2aa3bb3-aa52-1406-bc7e-8e1ac87c4dae",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 365.0247503579567,
              "y": 534.2685094683002
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "venona_errors_${UUID()}.avro"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "b2aa3bb3-aa52-1406-bc7e-8e1ac87c4dae",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "b2aa3bb3-aa52-1406-bc7e-8e1ac87c4dae",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 6
          },
          "id": "f6f7ec9a-0159-1000-a372-eed2cfd4cebb",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/f6f7ec9a-0159-1000-a372-eed2cfd4cebb",
          "position": {
            "x": 8853.869550057696,
            "y": 683.1689209661663
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "f6f7ec9a-0159-1000-a372-eed2cfd4cebb",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8853.869550057696,
              "y": 683.1689209661663
            },
            "name": "RouteOnAttribute",
            "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "datafile",
                "description": "",
                "autoTerminate": false
              },
              {
                "name": "keyfile",
                "description": "",
                "autoTerminate": false
              },
              {
                "name": "unmatched",
                "description": "FlowFiles that do not match any user-define expression will be routed here",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Routing Strategy": "Route to Property name",
                "datafile": "${filename:endsWith('enc')}",
                "keyfile": "${filename:endsWith('.key')}"
              },
              "descriptors": {
                "Routing Strategy": {
                  "name": "Routing Strategy",
                  "displayName": "Routing Strategy",
                  "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                  "defaultValue": "Route to Property name",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Route to Property name",
                        "value": "Route to Property name",
                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Route to 'matched' if all match",
                        "value": "Route to 'match' if all match",
                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Route to 'matched' if any matches",
                        "value": "Route to 'match' if any matches",
                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "datafile": {
                  "name": "datafile",
                  "displayName": "datafile",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "keyfile": {
                  "name": "keyfile",
                  "displayName": "keyfile",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "f6f7ec9a-0159-1000-a372-eed2cfd4cebb",
            "name": "RouteOnAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "f6f7ec9a-0159-1000-a372-eed2cfd4cebb",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "type": "RouteOnAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e0664271-0159-1000-db71-4624a50c9d70",
            "version": 1
          },
          "id": "b5b232a3-f229-1384-ffff-ffff8114013d",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/b5b232a3-f229-1384-ffff-ffff8114013d",
          "position": {
            "x": -1944.354400960302,
            "y": 660.9473417136822
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "b5b232a3-f229-1384-ffff-ffff8114013d",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -1944.354400960302,
              "y": 660.9473417136822
            },
            "name": "ConvertAvroSchema",
            "type": "org.apache.nifi.processors.kite.ConvertAvroSchema",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Avro content that failed to convert",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Avro content that converted successfully",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Input Schema": "${avro.schema}",
                "Output Schema": "${avro.schema:replaceFirst('\\{\"name\":\"received_timestamp\"',${replaceString})}",
                "Locale": "default",
                "kite-compression-type": "SNAPPY"
              },
              "descriptors": {
                "Input Schema": {
                  "name": "Input Schema",
                  "displayName": "Input Schema",
                  "description": "Avro Schema of Input Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Output Schema": {
                  "name": "Output Schema",
                  "displayName": "Output Schema",
                  "description": "Avro Schema of Output Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Locale": {
                  "name": "Locale",
                  "displayName": "Locale",
                  "description": "Locale to use for scanning data (see https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html)or \" default\" for JVM default",
                  "defaultValue": "default",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "kite-compression-type": {
                  "name": "kite-compression-type",
                  "displayName": "Compression type",
                  "description": "Compression type to use when writting Avro files. Default is Snappy.",
                  "defaultValue": "SNAPPY",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "BZIP2",
                        "value": "BZIP2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFLATE",
                        "value": "DEFLATE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZO",
                        "value": "LZO"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "b5b232a3-f229-1384-ffff-ffff8114013d",
            "name": "ConvertAvroSchema",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "b5b232a3-f229-1384-ffff-ffff8114013d",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "type": "ConvertAvroSchema",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 5
          },
          "id": "525f35ba-66c3-1afb-be4d-7d29347c12c3",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/525f35ba-66c3-1afb-be4d-7d29347c12c3",
          "position": {
            "x": -437.38411522053593,
            "y": 759.5573703827754
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "525f35ba-66c3-1afb-be4d-7d29347c12c3",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -437.38411522053593,
              "y": 759.5573703827754
            },
            "name": "ExtractAvroMetadata",
            "type": "org.apache.nifi.processors.avro.ExtractAvroMetadata",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "A FlowFile is routed to this relationship if it cannot be parsed as Avro or metadata cannot be extracted for any reason",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "A FlowFile is routed to this relationship after metadata has been extracted.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Fingerprint Algorithm": "CRC-64-AVRO",
                "Metadata Keys": "avro.schema",
                "Count Items": "false"
              },
              "descriptors": {
                "Fingerprint Algorithm": {
                  "name": "Fingerprint Algorithm",
                  "displayName": "Fingerprint Algorithm",
                  "description": "The algorithm used to generate the schema fingerprint. Available choices are based on the Avro recommended practices for fingerprint generation.",
                  "defaultValue": "CRC-64-AVRO",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "CRC-64-AVRO",
                        "value": "CRC-64-AVRO"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "MD5",
                        "value": "MD5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SHA-256",
                        "value": "SHA-256"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Metadata Keys": {
                  "name": "Metadata Keys",
                  "displayName": "Metadata Keys",
                  "description": "A comma-separated list of keys indicating key/value pairs to extract from the Avro file header. The key 'avro.schema' can be used to extract the full schema in JSON format, and 'avro.codec' can be used to extract the codec name if one exists.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Count Items": {
                  "name": "Count Items",
                  "displayName": "Count Items",
                  "description": "If true the number of items in the datafile will be counted and stored in a FlowFile attribute 'item.count'. The counting is done by reading blocks and getting the number of items for each block, thus avoiding de-serializing. The items being counted will be the top-level items in the datafile. For example, with a schema of type record the items will be the records, and for a schema of type Array the items will be the arrays (not the number of entries in each array).",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "525f35ba-66c3-1afb-be4d-7d29347c12c3",
            "name": "ExtractAvroMetadata",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "525f35ba-66c3-1afb-be4d-7d29347c12c3",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "type": "ExtractAvroMetadata",
              "runStatus": "Running",
              "bytesRead": 68984,
              "bytesWritten": 0,
              "read": "67.37 KB",
              "written": "0 bytes",
              "flowFilesIn": 2,
              "bytesIn": 1053579381,
              "input": "2 (1,004.77 MB)",
              "flowFilesOut": 2,
              "bytesOut": 1053579381,
              "output": "2 (1,004.77 MB)",
              "taskCount": 2,
              "tasksDurationNanos": 3140774,
              "tasks": "2",
              "tasksDuration": "00:00:00.003",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 13
          },
          "id": "8f24ade9-0159-1000-ffff-ffff974ef97c",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/8f24ade9-0159-1000-ffff-ffff974ef97c",
          "position": {
            "x": 2710.6539764437766,
            "y": 1054.3353123934535
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "8f24ade9-0159-1000-ffff-ffff974ef97c",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 2710.6539764437766,
              "y": 1054.3353123934535
            },
            "name": "DeleteS3Object",
            "type": "org.apache.nifi.processors.aws.s3.DeleteS3Object",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "FlowFiles are routed to failure relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "FlowFiles are routed to success relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Object Key": "${s3key}",
                "Bucket": "pi-wireless",
                "Access Key": "********",
                "Secret Key": "********",
                "Credentials File": null,
                "AWS Credentials Provider service": null,
                "Region": "us-east-1",
                "Communications Timeout": "30 secs",
                "Version": null,
                "FullControl User List": "${s3.permissions.full.users}",
                "Read Permission User List": "${s3.permissions.read.users}",
                "Write Permission User List": "${s3.permissions.write.users}",
                "Read ACL User List": "${s3.permissions.readacl.users}",
                "Write ACL User List": "${s3.permissions.writeacl.users}",
                "Owner": "${s3.owner}",
                "SSL Context Service": null,
                "Endpoint Override URL": "https://s3.amazonaws.com/",
                "Signer Override": "Default Signature",
                "Proxy Host": null,
                "Proxy Host Port": null
              },
              "descriptors": {
                "Object Key": {
                  "name": "Object Key",
                  "displayName": "Object Key",
                  "description": "",
                  "defaultValue": "${filename}",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Bucket": {
                  "name": "Bucket",
                  "displayName": "Bucket",
                  "description": "",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Access Key": {
                  "name": "Access Key",
                  "displayName": "Access Key",
                  "description": "",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Secret Key": {
                  "name": "Secret Key",
                  "displayName": "Secret Key",
                  "description": "",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Credentials File": {
                  "name": "Credentials File",
                  "displayName": "Credentials File",
                  "description": "Path to a file containing AWS access key and secret key in properties file format.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "AWS Credentials Provider service": {
                  "name": "AWS Credentials Provider service",
                  "displayName": "AWS Credentials Provider service",
                  "description": "The Controller Service that is used to obtain aws credentials provider",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService"
                },
                "Region": {
                  "name": "Region",
                  "displayName": "Region",
                  "description": "",
                  "defaultValue": "us-west-2",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "us-gov-west-1",
                        "value": "us-gov-west-1",
                        "description": "us-gov-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-east-1",
                        "value": "us-east-1",
                        "description": "us-east-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-west-1",
                        "value": "us-west-1",
                        "description": "us-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-west-2",
                        "value": "us-west-2",
                        "description": "us-west-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "eu-west-1",
                        "value": "eu-west-1",
                        "description": "eu-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "eu-central-1",
                        "value": "eu-central-1",
                        "description": "eu-central-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-southeast-1",
                        "value": "ap-southeast-1",
                        "description": "ap-southeast-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-southeast-2",
                        "value": "ap-southeast-2",
                        "description": "ap-southeast-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-northeast-1",
                        "value": "ap-northeast-1",
                        "description": "ap-northeast-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-northeast-2",
                        "value": "ap-northeast-2",
                        "description": "ap-northeast-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "sa-east-1",
                        "value": "sa-east-1",
                        "description": "sa-east-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "cn-north-1",
                        "value": "cn-north-1",
                        "description": "cn-north-1"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Communications Timeout": {
                  "name": "Communications Timeout",
                  "displayName": "Communications Timeout",
                  "description": "",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Version": {
                  "name": "Version",
                  "displayName": "Version",
                  "description": "The Version of the Object to delete",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "FullControl User List": {
                  "name": "FullControl User List",
                  "displayName": "FullControl User List",
                  "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Full Control for an object",
                  "defaultValue": "${s3.permissions.full.users}",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Read Permission User List": {
                  "name": "Read Permission User List",
                  "displayName": "Read Permission User List",
                  "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Read Access for an object",
                  "defaultValue": "${s3.permissions.read.users}",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Write Permission User List": {
                  "name": "Write Permission User List",
                  "displayName": "Write Permission User List",
                  "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have Write Access for an object",
                  "defaultValue": "${s3.permissions.write.users}",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Read ACL User List": {
                  "name": "Read ACL User List",
                  "displayName": "Read ACL User List",
                  "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to read the Access Control List for an object",
                  "defaultValue": "${s3.permissions.readacl.users}",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Write ACL User List": {
                  "name": "Write ACL User List",
                  "displayName": "Write ACL User List",
                  "description": "A comma-separated list of Amazon User ID's or E-mail addresses that specifies who should have permissions to change the Access Control List for an object",
                  "defaultValue": "${s3.permissions.writeacl.users}",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Owner": {
                  "name": "Owner",
                  "displayName": "Owner",
                  "description": "The Amazon ID to use for the object's owner",
                  "defaultValue": "${s3.owner}",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "SSL Context Service": {
                  "name": "SSL Context Service",
                  "displayName": "SSL Context Service",
                  "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService"
                },
                "Endpoint Override URL": {
                  "name": "Endpoint Override URL",
                  "displayName": "Endpoint Override URL",
                  "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Signer Override": {
                  "name": "Signer Override",
                  "displayName": "Signer Override",
                  "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                  "defaultValue": "Default Signature",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Default Signature",
                        "value": "Default Signature"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Signature v4",
                        "value": "AWSS3V4SignerType"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Signature v2",
                        "value": "S3SignerType"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Proxy Host": {
                  "name": "Proxy Host",
                  "displayName": "Proxy Host",
                  "description": "Proxy host name or IP",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Proxy Host Port": {
                  "name": "Proxy Host Port",
                  "displayName": "Proxy Host Port",
                  "description": "Proxy host port",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 2000,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "8f24ade9-0159-1000-ffff-ffff974ef97c",
            "name": "DeleteS3Object",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "8f24ade9-0159-1000-ffff-ffff974ef97c",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "DeleteS3Object",
              "type": "DeleteS3Object",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 9
          },
          "id": "785d3112-8934-16b0-b14f-25518f2c0a4c",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/785d3112-8934-16b0-b14f-25518f2c0a4c",
          "position": {
            "x": 1589.82398521923,
            "y": 983.8700847510411
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "785d3112-8934-16b0-b14f-25518f2c0a4c",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 1589.82398521923,
              "y": 983.8700847510411
            },
            "name": "ConvertAvroSchema",
            "type": "org.apache.nifi.processors.kite.ConvertAvroSchema",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Avro content that failed to convert",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Avro content that converted successfully",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Input Schema": "${avro.schema}",
                "Output Schema": "${avro.schema}",
                "Locale": "default",
                "kite-compression-type": "DEFLATE"
              },
              "descriptors": {
                "Input Schema": {
                  "name": "Input Schema",
                  "displayName": "Input Schema",
                  "description": "Avro Schema of Input Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Output Schema": {
                  "name": "Output Schema",
                  "displayName": "Output Schema",
                  "description": "Avro Schema of Output Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Locale": {
                  "name": "Locale",
                  "displayName": "Locale",
                  "description": "Locale to use for scanning data (see https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html)or \" default\" for JVM default",
                  "defaultValue": "default",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "kite-compression-type": {
                  "name": "kite-compression-type",
                  "displayName": "Compression type",
                  "description": "Compression type to use when writting Avro files. Default is Snappy.",
                  "defaultValue": "SNAPPY",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "BZIP2",
                        "value": "BZIP2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFLATE",
                        "value": "DEFLATE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZO",
                        "value": "LZO"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "785d3112-8934-16b0-b14f-25518f2c0a4c",
            "name": "ConvertAvroSchema",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "785d3112-8934-16b0-b14f-25518f2c0a4c",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "type": "ConvertAvroSchema",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 10
          },
          "id": "f430348f-ae64-1fe6-870d-0fae85ec578b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/f430348f-ae64-1fe6-870d-0fae85ec578b",
          "position": {
            "x": 8635.929944344805,
            "y": 1938.759832831401
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "f430348f-ae64-1fe6-870d-0fae85ec578b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8635.929944344805,
              "y": 1938.759832831401
            },
            "name": "RouteOnAttribute",
            "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "ngxgw_access",
                "description": "",
                "autoTerminate": false
              },
              {
                "name": "oauth_token_information",
                "description": "",
                "autoTerminate": false
              },
              {
                "name": "PiGwOauthTokens",
                "description": "",
                "autoTerminate": false
              },
              {
                "name": "unmatched",
                "description": "FlowFiles that do not match any user-define expression will be routed here",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Routing Strategy": "Route to Property name",
                "ngxgw_access": "${filename:contains('ngxgw_access')}",
                "oauth_token_information": "${filename:contains('oauth_token_information')}",
                "PiGwOauthTokens": "${filename:contains('PiGwOauthTokens')}"
              },
              "descriptors": {
                "Routing Strategy": {
                  "name": "Routing Strategy",
                  "displayName": "Routing Strategy",
                  "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                  "defaultValue": "Route to Property name",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Route to Property name",
                        "value": "Route to Property name",
                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Route to 'matched' if all match",
                        "value": "Route to 'match' if all match",
                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Route to 'matched' if any matches",
                        "value": "Route to 'match' if any matches",
                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "ngxgw_access": {
                  "name": "ngxgw_access",
                  "displayName": "ngxgw_access",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "oauth_token_information": {
                  "name": "oauth_token_information",
                  "displayName": "oauth_token_information",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "PiGwOauthTokens": {
                  "name": "PiGwOauthTokens",
                  "displayName": "PiGwOauthTokens",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "f430348f-ae64-1fe6-870d-0fae85ec578b",
            "name": "RouteOnAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "f430348f-ae64-1fe6-870d-0fae85ec578b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "type": "RouteOnAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "df973b69-5b00-14ab-81cb-89bb6a4b6d0c",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/df973b69-5b00-14ab-81cb-89bb6a4b6d0c",
          "position": {
            "x": 5040.598949528235,
            "y": 522.7964061491887
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "df973b69-5b00-14ab-81cb-89bb6a4b6d0c",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 5040.598949528235,
              "y": 522.7964061491887
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "venona_unfinished_${UUID()}.avro"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "df973b69-5b00-14ab-81cb-89bb6a4b6d0c",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "df973b69-5b00-14ab-81cb-89bb6a4b6d0c",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "aeff4253-2604-1e1f-60bd-8d385f539e16",
            "version": 11
          },
          "id": "d9e43cde-35a2-1ab1-b579-ebaebbf6b78e",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/d9e43cde-35a2-1ab1-b579-ebaebbf6b78e",
          "position": {
            "x": 4648.152537849136,
            "y": 1181.3769771262528
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "d9e43cde-35a2-1ab1-b579-ebaebbf6b78e",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 4648.152537849136,
              "y": 1181.3769771262528
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/venona/staging_finished_messages/partition_date=${now():plus(21600000):format('yyyy-MM-dd')}/partition_hour=${now():plus(21600000):format('HH')}",
                "Conflict Resolution Strategy": "fail",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "d9e43cde-35a2-1ab1-b579-ebaebbf6b78e",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "d9e43cde-35a2-1ab1-b579-ebaebbf6b78e",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 11
          },
          "id": "39ad37f1-4155-17af-82d8-d647e831dbfb",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/39ad37f1-4155-17af-82d8-d647e831dbfb",
          "position": {
            "x": -433.3373612163168,
            "y": 981.5713176611973
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "39ad37f1-4155-17af-82d8-d647e831dbfb",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -433.3373612163168,
              "y": 981.5713176611973
            },
            "name": "ConvertAvroSchema",
            "type": "org.apache.nifi.processors.kite.ConvertAvroSchema",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Avro content that failed to convert",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Avro content that converted successfully",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Input Schema": "${avro.schema}",
                "Output Schema": "${avro.schema}",
                "Locale": "default",
                "kite-compression-type": "DEFLATE"
              },
              "descriptors": {
                "Input Schema": {
                  "name": "Input Schema",
                  "displayName": "Input Schema",
                  "description": "Avro Schema of Input Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Output Schema": {
                  "name": "Output Schema",
                  "displayName": "Output Schema",
                  "description": "Avro Schema of Output Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Locale": {
                  "name": "Locale",
                  "displayName": "Locale",
                  "description": "Locale to use for scanning data (see https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html)or \" default\" for JVM default",
                  "defaultValue": "default",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "kite-compression-type": {
                  "name": "kite-compression-type",
                  "displayName": "Compression type",
                  "description": "Compression type to use when writting Avro files. Default is Snappy.",
                  "defaultValue": "SNAPPY",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "BZIP2",
                        "value": "BZIP2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFLATE",
                        "value": "DEFLATE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZO",
                        "value": "LZO"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "39ad37f1-4155-17af-82d8-d647e831dbfb",
            "name": "ConvertAvroSchema",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "39ad37f1-4155-17af-82d8-d647e831dbfb",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "type": "ConvertAvroSchema",
              "runStatus": "Running",
              "bytesRead": 1608355425,
              "bytesWritten": 480326831,
              "read": "1.5 GB",
              "written": "458.08 MB",
              "flowFilesIn": 3,
              "bytesIn": 1608355425,
              "input": "3 (1.5 GB)",
              "flowFilesOut": 3,
              "bytesOut": 480247823,
              "output": "3 (458 MB)",
              "taskCount": 3,
              "tasksDurationNanos": 93613848860,
              "tasks": "3",
              "tasksDuration": "00:01:33.613",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e0664271-0159-1000-db71-4624a50c9d70",
            "version": 1
          },
          "id": "b5b23225-f229-1384-ffff-fffffbc0c8ff",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/b5b23225-f229-1384-ffff-fffffbc0c8ff",
          "position": {
            "x": -1952.2489515982268,
            "y": 244.70183252219977
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "b5b23225-f229-1384-ffff-fffffbc0c8ff",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -1952.2489515982268,
              "y": 244.70183252219977
            },
            "name": "ExtractAvroMetadata",
            "type": "org.apache.nifi.processors.avro.ExtractAvroMetadata",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "A FlowFile is routed to this relationship if it cannot be parsed as Avro or metadata cannot be extracted for any reason",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "A FlowFile is routed to this relationship after metadata has been extracted.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Fingerprint Algorithm": "CRC-64-AVRO",
                "Metadata Keys": "avro.schema",
                "Count Items": "false"
              },
              "descriptors": {
                "Fingerprint Algorithm": {
                  "name": "Fingerprint Algorithm",
                  "displayName": "Fingerprint Algorithm",
                  "description": "The algorithm used to generate the schema fingerprint. Available choices are based on the Avro recommended practices for fingerprint generation.",
                  "defaultValue": "CRC-64-AVRO",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "CRC-64-AVRO",
                        "value": "CRC-64-AVRO"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "MD5",
                        "value": "MD5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SHA-256",
                        "value": "SHA-256"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Metadata Keys": {
                  "name": "Metadata Keys",
                  "displayName": "Metadata Keys",
                  "description": "A comma-separated list of keys indicating key/value pairs to extract from the Avro file header. The key 'avro.schema' can be used to extract the full schema in JSON format, and 'avro.codec' can be used to extract the codec name if one exists.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Count Items": {
                  "name": "Count Items",
                  "displayName": "Count Items",
                  "description": "If true the number of items in the datafile will be counted and stored in a FlowFile attribute 'item.count'. The counting is done by reading blocks and getting the number of items for each block, thus avoiding de-serializing. The items being counted will be the top-level items in the datafile. For example, with a schema of type record the items will be the records, and for a schema of type Array the items will be the arrays (not the number of entries in each array).",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": [
              "'Upstream Connections' is invalid because Processor requires an upstream connection but currently has none"
            ]
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "b5b23225-f229-1384-ffff-fffffbc0c8ff",
            "name": "ExtractAvroMetadata",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "b5b23225-f229-1384-ffff-fffffbc0c8ff",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "type": "ExtractAvroMetadata",
              "runStatus": "Invalid",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e0664271-0159-1000-db71-4624a50c9d70",
            "version": 1
          },
          "id": "d7f63a80-1dec-1a61-b22a-69a8db3dbecf",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/d7f63a80-1dec-1a61-b22a-69a8db3dbecf",
          "position": {
            "x": -1945.4506221623253,
            "y": 876.2983206254
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "d7f63a80-1dec-1a61-b22a-69a8db3dbecf",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -1945.4506221623253,
              "y": 876.2983206254
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/nifi/",
                "Conflict Resolution Strategy": "replace",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": null,
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "d7f63a80-1dec-1a61-b22a-69a8db3dbecf",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "d7f63a80-1dec-1a61-b22a-69a8db3dbecf",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 20
          },
          "id": "07103a48-f202-1063-b1f0-8d12c23e166b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/07103a48-f202-1063-b1f0-8d12c23e166b",
          "position": {
            "x": 5042.711745092658,
            "y": 42.24096468118063
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "07103a48-f202-1063-b1f0-8d12c23e166b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 5042.711745092658,
              "y": 42.24096468118063
            },
            "name": "GetXGAnalyticsKafka - staging venona_unfinished_messages",
            "type": "org.apache.nifi.processors.kafka.GetKafka",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are created are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "ZooKeeper Connection String": "zookeeper.xganalytics.io:2181",
                "Topic Name": "venona_unfinished_messages_avro_516904A9518C654DB9BF3FF7E35E1E6A",
                "Zookeeper Commit Frequency": "60 secs",
                "Batch Size": "1",
                "Message Demarcator": "\\n",
                "Client Name": "NiFi-f4b3e296-0158-1000-0000-00003aeefad8",
                "Group ID": "07103a48-f202-1063-b1f0-8d12c23e166b",
                "Kafka Communications Timeout": "30 secs",
                "ZooKeeper Communications Timeout": "30 secs",
                "Auto Offset Reset": "smallest",
                "zookeeper.connection.timeout.ms": "15000",
                "zookeeper.session.timeout.ms": "15000"
              },
              "descriptors": {
                "ZooKeeper Connection String": {
                  "name": "ZooKeeper Connection String",
                  "displayName": "ZooKeeper Connection String",
                  "description": "The Connection String to use in order to connect to ZooKeeper. This is often a comma-separated list of <host>:<port> combinations. For example, host1:2181,host2:2181,host3:2188",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Topic Name": {
                  "name": "Topic Name",
                  "displayName": "Topic Name",
                  "description": "The Kafka Topic to pull messages from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Zookeeper Commit Frequency": {
                  "name": "Zookeeper Commit Frequency",
                  "displayName": "Zookeeper Commit Frequency",
                  "description": "Specifies how often to communicate with ZooKeeper to indicate which messages have been pulled. A longer time period will result in better overall performance but can result in more data duplication if a NiFi node is lost",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "Specifies the maximum number of messages to combine into a single FlowFile. These messages will be concatenated together with the <Message Demarcator> string placed between the content of each message. If the messages from Kafka should not be concatenated together, leave this value at 1.",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Message Demarcator": {
                  "name": "Message Demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the characters to use in order to demarcate multiple messages from Kafka. If the <Batch Size> property is set to 1, this value is ignored. Otherwise, for each two subsequent messages in the batch, this value will be placed in between them.",
                  "defaultValue": "\\n",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Client Name": {
                  "name": "Client Name",
                  "displayName": "Client Name",
                  "description": "Client Name to use when communicating with Kafka",
                  "defaultValue": "NiFi-07103a48-f202-1063-b1f0-8d12c23e166b",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Group ID": {
                  "name": "Group ID",
                  "displayName": "Group ID",
                  "description": "A Group ID is used to identify consumers that are within the same consumer group",
                  "defaultValue": "07103a48-f202-1063-b1f0-8d12c23e166b",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kafka Communications Timeout": {
                  "name": "Kafka Communications Timeout",
                  "displayName": "Kafka Communications Timeout",
                  "description": "The amount of time to wait for a response from Kafka before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "ZooKeeper Communications Timeout": {
                  "name": "ZooKeeper Communications Timeout",
                  "displayName": "ZooKeeper Communications Timeout",
                  "description": "The amount of time to wait for a response from ZooKeeper before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Auto Offset Reset": {
                  "name": "Auto Offset Reset",
                  "displayName": "Auto Offset Reset",
                  "description": "Automatically reset the offset to the smallest or largest offset available on the broker",
                  "defaultValue": "largest",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "smallest",
                        "value": "smallest"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "largest",
                        "value": "largest"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "zookeeper.connection.timeout.ms": {
                  "name": "zookeeper.connection.timeout.ms",
                  "displayName": "zookeeper.connection.timeout.ms",
                  "description": "Specifies the value for 'zookeeper.connection.timeout.ms' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "zookeeper.session.timeout.ms": {
                  "name": "zookeeper.session.timeout.ms",
                  "displayName": "zookeeper.session.timeout.ms",
                  "description": "Specifies the value for 'zookeeper.session.timeout.ms' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "300 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 2000,
              "concurrentlySchedulableTaskCount": 32,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "07103a48-f202-1063-b1f0-8d12c23e166b",
            "name": "GetXGAnalyticsKafka - staging venona_unfinished_messages",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "07103a48-f202-1063-b1f0-8d12c23e166b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetXGAnalyticsKafka - staging venona_unfinished_messages",
              "type": "GetKafka",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 7616531,
              "read": "0 bytes",
              "written": "7.26 MB",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 361,
              "bytesOut": 7616531,
              "output": "361 (7.26 MB)",
              "taskCount": 111042,
              "tasksDurationNanos": 192432230255,
              "tasks": "111,042",
              "tasksDuration": "00:03:12.432",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "f4f3fb55-0159-1000-583d-a8fdae1b9e75",
            "version": 3
          },
          "id": "eedd3b84-eecd-1633-addc-181c7337ae0b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/eedd3b84-eecd-1633-addc-181c7337ae0b",
          "position": {
            "x": 3917.2665914757995,
            "y": 506.6740318764406
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "eedd3b84-eecd-1633-addc-181c7337ae0b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 3917.2665914757995,
              "y": 506.6740318764406
            },
            "name": "FetchSFTP-tms-download",
            "type": "org.apache.nifi.processors.standard.FetchSFTP",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "comms.failure",
                "description": "Any FlowFile that could not be fetched from the remote server due to a communications failure will be transferred to this Relationship.",
                "autoTerminate": true
              },
              {
                "name": "not.found",
                "description": "Any FlowFile for which we receive a 'Not Found' message from the remote server will be transferred to this Relationship.",
                "autoTerminate": true
              },
              {
                "name": "permission.denied",
                "description": "Any FlowFile that could not be fetched from the remote server due to insufficient permissions will be transferred to this Relationship.",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "All FlowFiles that are received are routed to success",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hostname": "on.tmstv.com",
                "Port": "22",
                "Username": "twinvid",
                "Password": "********",
                "Private Key Path": null,
                "Private Key Passphrase": null,
                "Remote File": "${ftp_path}",
                "Completion Strategy": "None",
                "Move Destination Directory": null,
                "Connection Timeout": "30 sec",
                "Data Timeout": "30 sec",
                "Send Keep Alive On Timeout": "true",
                "Host Key File": null,
                "Strict Host Key Checking": "false",
                "Use Compression": "false"
              },
              "descriptors": {
                "Hostname": {
                  "name": "Hostname",
                  "displayName": "Hostname",
                  "description": "The fully-qualified hostname or IP address of the host to fetch the data from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Port": {
                  "name": "Port",
                  "displayName": "Port",
                  "description": "The port to connect to on the remote host to fetch the data from",
                  "defaultValue": "22",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Username": {
                  "name": "Username",
                  "displayName": "Username",
                  "description": "Username",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Password": {
                  "name": "Password",
                  "displayName": "Password",
                  "description": "Password for the user account",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Path": {
                  "name": "Private Key Path",
                  "displayName": "Private Key Path",
                  "description": "The fully qualified path to the Private Key file",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Passphrase": {
                  "name": "Private Key Passphrase",
                  "displayName": "Private Key Passphrase",
                  "description": "Password for the private key",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote File": {
                  "name": "Remote File",
                  "displayName": "Remote File",
                  "description": "The fully qualified filename on the remote system",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Completion Strategy": {
                  "name": "Completion Strategy",
                  "displayName": "Completion Strategy",
                  "description": "Specifies what to do with the original file on the server once it has been pulled into NiFi. If the Completion Strategy fails, a warning will be logged but the data will still be transferred.",
                  "defaultValue": "None",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "None",
                        "value": "None",
                        "description": "Leave the file as-is"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Move File",
                        "value": "Move File",
                        "description": "Move the file to the directory specified by the <Move Destination Directory> property"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Delete File",
                        "value": "Delete File",
                        "description": "Deletes the original file from the remote system"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Move Destination Directory": {
                  "name": "Move Destination Directory",
                  "displayName": "Move Destination Directory",
                  "description": "The directory on the remote server to the move the original file to once it has been ingested into NiFi. This property is ignored unless the Completion Strategy is set to \"Move File\". The specified directory must already exist onthe remote system, or the rename will fail.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Connection Timeout": {
                  "name": "Connection Timeout",
                  "displayName": "Connection Timeout",
                  "description": "Amount of time to wait before timing out while creating a connection",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Data Timeout": {
                  "name": "Data Timeout",
                  "displayName": "Data Timeout",
                  "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Send Keep Alive On Timeout": {
                  "name": "Send Keep Alive On Timeout",
                  "displayName": "Send Keep Alive On Timeout",
                  "description": "Indicates whether or not to send a single Keep Alive message when SSH socket times out",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Host Key File": {
                  "name": "Host Key File",
                  "displayName": "Host Key File",
                  "description": "If supplied, the given file will be used as the Host Key; otherwise, no use host key file will be used",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Strict Host Key Checking": {
                  "name": "Strict Host Key Checking",
                  "displayName": "Strict Host Key Checking",
                  "description": "Indicates whether or not strict enforcement of hosts keys should be applied",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Use Compression": {
                  "name": "Use Compression",
                  "displayName": "Use Compression",
                  "description": "Indicates whether or not ZLIB compression should be used when transferring files",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "eedd3b84-eecd-1633-addc-181c7337ae0b",
            "name": "FetchSFTP-tms-download",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "eedd3b84-eecd-1633-addc-181c7337ae0b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchSFTP-tms-download",
              "type": "FetchSFTP",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "aeff4253-2604-1e1f-60bd-8d385f539e16",
            "version": 6
          },
          "id": "22093965-75a9-1320-943a-147cd4c13f6e",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/22093965-75a9-1320-943a-147cd4c13f6e",
          "position": {
            "x": 3914.4587397223504,
            "y": 944.198237913716
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "22093965-75a9-1320-943a-147cd4c13f6e",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 3914.4587397223504,
              "y": 944.198237913716
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/tms/",
                "Conflict Resolution Strategy": "ignore",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "22093965-75a9-1320-943a-147cd4c13f6e",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "22093965-75a9-1320-943a-147cd4c13f6e",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 6
          },
          "id": "18713a1d-0435-1f14-91ad-5e5f69c8124c",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/18713a1d-0435-1f14-91ad-5e5f69c8124c",
          "position": {
            "x": 5039.093420983624,
            "y": 267.15878063381496
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "18713a1d-0435-1f14-91ad-5e5f69c8124c",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 5039.093420983624,
              "y": 267.15878063381496
            },
            "name": "MergeContent",
            "type": "org.apache.nifi.processors.standard.MergeContent",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure",
                "autoTerminate": true
              },
              {
                "name": "merged",
                "description": "The FlowFile containing the merged content",
                "autoTerminate": false
              },
              {
                "name": "original",
                "description": "The FlowFiles that were used to create the bundle",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Merge Strategy": "Bin-Packing Algorithm",
                "Merge Format": "Avro",
                "Attribute Strategy": "Keep All Unique Attributes",
                "Correlation Attribute Name": null,
                "Minimum Number of Entries": "200000",
                "Maximum Number of Entries": "400000",
                "Minimum Group Size": "100 MB",
                "Maximum Group Size": null,
                "Max Bin Age": "1 hour",
                "Maximum number of Bins": "5",
                "Delimiter Strategy": "Filename",
                "Header File": null,
                "Footer File": null,
                "Demarcator File": null,
                "Compression Level": "1",
                "Keep Path": "false"
              },
              "descriptors": {
                "Merge Strategy": {
                  "name": "Merge Strategy",
                  "displayName": "Merge Strategy",
                  "description": "Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles",
                  "defaultValue": "Bin-Packing Algorithm",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Bin-Packing Algorithm",
                        "value": "Bin-Packing Algorithm",
                        "description": "Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the <Correlation Attribute> property is set)"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Defragment",
                        "value": "Defragment",
                        "description": "Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes <fragment.identifier>, <fragment.count>, and <fragment.index> or alternatively (for backward compatibility purposes) <segment.identifier>, <segment.count>, and <segment.index>. All FlowFiles with the same value for \"fragment.identifier\" will be grouped together. All FlowFiles in this group must have the same value for the \"fragment.count\" attribute. All FlowFiles in this group must have a unique value for the \"fragment.index\" attribute between 0 and the value of the \"fragment.count\" attribute."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Merge Format": {
                  "name": "Merge Format",
                  "displayName": "Merge Format",
                  "description": "Determines the format that will be used to merge the content.",
                  "defaultValue": "Binary Concatenation",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "TAR",
                        "value": "TAR",
                        "description": "A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' <path> attribute will be used to create a directory in the TAR file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named <tar.permissions> that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ZIP",
                        "value": "ZIP",
                        "description": "A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' <path> attribute will be used to create a directory in the ZIP file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The <Compression Level> property indicates the ZIP compression to use."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v3",
                        "value": "FlowFile Stream, v3",
                        "description": "A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v2",
                        "value": "FlowFile Stream, v2",
                        "description": "A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Tar, v1",
                        "value": "FlowFile Tar, v1",
                        "description": "A bin of FlowFiles will be combined into a single Version 1 FlowFile Package"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Binary Concatenation",
                        "value": "Binary Concatenation",
                        "description": "The contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Avro",
                        "value": "Avro",
                        "description": "The Avro contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Attribute Strategy": {
                  "name": "Attribute Strategy",
                  "displayName": "Attribute Strategy",
                  "description": "Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.",
                  "defaultValue": "Keep Only Common Attributes",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Keep Only Common Attributes",
                        "value": "Keep Only Common Attributes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Keep All Unique Attributes",
                        "value": "Keep All Unique Attributes"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Correlation Attribute Name": {
                  "name": "Correlation Attribute Name",
                  "displayName": "Correlation Attribute Name",
                  "description": "If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Minimum Number of Entries": {
                  "name": "Minimum Number of Entries",
                  "displayName": "Minimum Number of Entries",
                  "description": "The minimum number of files to include in a bundle",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Number of Entries": {
                  "name": "Maximum Number of Entries",
                  "displayName": "Maximum Number of Entries",
                  "description": "The maximum number of files to include in a bundle. If not specified, there is no maximum.",
                  "defaultValue": "1000",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum Group Size": {
                  "name": "Minimum Group Size",
                  "displayName": "Minimum Group Size",
                  "description": "The minimum size of for the bundle",
                  "defaultValue": "0 B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Group Size": {
                  "name": "Maximum Group Size",
                  "displayName": "Maximum Group Size",
                  "description": "The maximum size for the bundle. If not specified, there is no maximum.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Bin Age": {
                  "name": "Max Bin Age",
                  "displayName": "Max Bin Age",
                  "description": "The maximum age of a Bin that will trigger a Bin to be complete. Expected format is <duration> <time unit> where <duration> is a positive integer and time unit is one of seconds, minutes, hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum number of Bins": {
                  "name": "Maximum number of Bins",
                  "displayName": "Maximum number of Bins",
                  "description": "Specifies the maximum number of bins that can be held in memory at any one time",
                  "defaultValue": "5",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Delimiter Strategy": {
                  "name": "Delimiter Strategy",
                  "displayName": "Delimiter Strategy",
                  "description": "Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.",
                  "defaultValue": "Filename",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Filename",
                        "value": "Filename",
                        "description": "The values of Header, Footer, and Demarcator will be retrieved from the contents of a file"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text",
                        "description": "The values of Header, Footer, and Demarcator will be specified as property values"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Header File": {
                  "name": "Header File",
                  "displayName": "Header",
                  "description": "Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Footer File": {
                  "name": "Footer File",
                  "displayName": "Footer",
                  "description": "Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Demarcator File": {
                  "name": "Demarcator File",
                  "displayName": "Demarcator",
                  "description": "Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Compression Level": {
                  "name": "Compression Level",
                  "displayName": "Compression Level",
                  "description": "Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored",
                  "defaultValue": "1",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "0",
                        "value": "0"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "1",
                        "value": "1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "2",
                        "value": "2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "3",
                        "value": "3"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "4",
                        "value": "4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "5",
                        "value": "5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "6",
                        "value": "6"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "7",
                        "value": "7"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "8",
                        "value": "8"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "9",
                        "value": "9"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Keep Path": {
                  "name": "Keep Path",
                  "displayName": "Keep Path",
                  "description": "If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "18713a1d-0435-1f14-91ad-5e5f69c8124c",
            "name": "MergeContent",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "18713a1d-0435-1f14-91ad-5e5f69c8124c",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "type": "MergeContent",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 471,
              "tasksDurationNanos": 21650408,
              "tasks": "471",
              "tasksDuration": "00:00:00.021",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 3
          },
          "id": "e6553106-6271-1f6e-b90a-dca0e3098b10",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/e6553106-6271-1f6e-b90a-dca0e3098b10",
          "position": {
            "x": 1186.967920301925,
            "y": 762.0549289765254
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e6553106-6271-1f6e-b90a-dca0e3098b10",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 1186.967920301925,
              "y": 762.0549289765254
            },
            "name": "ExtractAvroMetadata",
            "type": "org.apache.nifi.processors.avro.ExtractAvroMetadata",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "A FlowFile is routed to this relationship if it cannot be parsed as Avro or metadata cannot be extracted for any reason",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "A FlowFile is routed to this relationship after metadata has been extracted.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Fingerprint Algorithm": "CRC-64-AVRO",
                "Metadata Keys": "avro.schema",
                "Count Items": "false"
              },
              "descriptors": {
                "Fingerprint Algorithm": {
                  "name": "Fingerprint Algorithm",
                  "displayName": "Fingerprint Algorithm",
                  "description": "The algorithm used to generate the schema fingerprint. Available choices are based on the Avro recommended practices for fingerprint generation.",
                  "defaultValue": "CRC-64-AVRO",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "CRC-64-AVRO",
                        "value": "CRC-64-AVRO"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "MD5",
                        "value": "MD5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SHA-256",
                        "value": "SHA-256"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Metadata Keys": {
                  "name": "Metadata Keys",
                  "displayName": "Metadata Keys",
                  "description": "A comma-separated list of keys indicating key/value pairs to extract from the Avro file header. The key 'avro.schema' can be used to extract the full schema in JSON format, and 'avro.codec' can be used to extract the codec name if one exists.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Count Items": {
                  "name": "Count Items",
                  "displayName": "Count Items",
                  "description": "If true the number of items in the datafile will be counted and stored in a FlowFile attribute 'item.count'. The counting is done by reading blocks and getting the number of items for each block, thus avoiding de-serializing. The items being counted will be the top-level items in the datafile. For example, with a schema of type record the items will be the records, and for a schema of type Array the items will be the arrays (not the number of entries in each array).",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "e6553106-6271-1f6e-b90a-dca0e3098b10",
            "name": "ExtractAvroMetadata",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "e6553106-6271-1f6e-b90a-dca0e3098b10",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "type": "ExtractAvroMetadata",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "5209329a-015a-1000-bb6e-f81a9b5f1fc4",
            "version": 3
          },
          "id": "a4e84493-89bc-15f9-0000-00004f18d645",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/a4e84493-89bc-15f9-0000-00004f18d645",
          "position": {
            "x": 3740.5919936758255,
            "y": 260.51048196949705
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a4e84493-89bc-15f9-0000-00004f18d645",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 3740.5919936758255,
              "y": 260.51048196949705
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "ftp_path": "/On2/${filename}"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "ftp_path": {
                  "name": "ftp_path",
                  "displayName": "ftp_path",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "a4e84493-89bc-15f9-0000-00004f18d645",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "a4e84493-89bc-15f9-0000-00004f18d645",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 4
          },
          "id": "a397371a-a1d2-170b-b21c-4bea6300b2ec",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/a397371a-a1d2-170b-b21c-4bea6300b2ec",
          "position": {
            "x": 776.631191147944,
            "y": 279.8300783565951
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a397371a-a1d2-170b-b21c-4bea6300b2ec",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 776.631191147944,
              "y": 279.8300783565951
            },
            "name": "MergeContent",
            "type": "org.apache.nifi.processors.standard.MergeContent",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure",
                "autoTerminate": true
              },
              {
                "name": "merged",
                "description": "The FlowFile containing the merged content",
                "autoTerminate": false
              },
              {
                "name": "original",
                "description": "The FlowFiles that were used to create the bundle",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Merge Strategy": "Bin-Packing Algorithm",
                "Merge Format": "Avro",
                "Attribute Strategy": "Keep All Unique Attributes",
                "Correlation Attribute Name": null,
                "Minimum Number of Entries": "200000",
                "Maximum Number of Entries": "400000",
                "Minimum Group Size": "0 B",
                "Maximum Group Size": null,
                "Max Bin Age": "1 hour",
                "Maximum number of Bins": "5",
                "Delimiter Strategy": "Filename",
                "Header File": null,
                "Footer File": null,
                "Demarcator File": null,
                "Compression Level": "1",
                "Keep Path": "false"
              },
              "descriptors": {
                "Merge Strategy": {
                  "name": "Merge Strategy",
                  "displayName": "Merge Strategy",
                  "description": "Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles",
                  "defaultValue": "Bin-Packing Algorithm",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Bin-Packing Algorithm",
                        "value": "Bin-Packing Algorithm",
                        "description": "Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the <Correlation Attribute> property is set)"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Defragment",
                        "value": "Defragment",
                        "description": "Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes <fragment.identifier>, <fragment.count>, and <fragment.index> or alternatively (for backward compatibility purposes) <segment.identifier>, <segment.count>, and <segment.index>. All FlowFiles with the same value for \"fragment.identifier\" will be grouped together. All FlowFiles in this group must have the same value for the \"fragment.count\" attribute. All FlowFiles in this group must have a unique value for the \"fragment.index\" attribute between 0 and the value of the \"fragment.count\" attribute."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Merge Format": {
                  "name": "Merge Format",
                  "displayName": "Merge Format",
                  "description": "Determines the format that will be used to merge the content.",
                  "defaultValue": "Binary Concatenation",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "TAR",
                        "value": "TAR",
                        "description": "A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' <path> attribute will be used to create a directory in the TAR file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named <tar.permissions> that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ZIP",
                        "value": "ZIP",
                        "description": "A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' <path> attribute will be used to create a directory in the ZIP file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The <Compression Level> property indicates the ZIP compression to use."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v3",
                        "value": "FlowFile Stream, v3",
                        "description": "A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v2",
                        "value": "FlowFile Stream, v2",
                        "description": "A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Tar, v1",
                        "value": "FlowFile Tar, v1",
                        "description": "A bin of FlowFiles will be combined into a single Version 1 FlowFile Package"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Binary Concatenation",
                        "value": "Binary Concatenation",
                        "description": "The contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Avro",
                        "value": "Avro",
                        "description": "The Avro contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Attribute Strategy": {
                  "name": "Attribute Strategy",
                  "displayName": "Attribute Strategy",
                  "description": "Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.",
                  "defaultValue": "Keep Only Common Attributes",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Keep Only Common Attributes",
                        "value": "Keep Only Common Attributes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Keep All Unique Attributes",
                        "value": "Keep All Unique Attributes"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Correlation Attribute Name": {
                  "name": "Correlation Attribute Name",
                  "displayName": "Correlation Attribute Name",
                  "description": "If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Minimum Number of Entries": {
                  "name": "Minimum Number of Entries",
                  "displayName": "Minimum Number of Entries",
                  "description": "The minimum number of files to include in a bundle",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Number of Entries": {
                  "name": "Maximum Number of Entries",
                  "displayName": "Maximum Number of Entries",
                  "description": "The maximum number of files to include in a bundle. If not specified, there is no maximum.",
                  "defaultValue": "1000",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum Group Size": {
                  "name": "Minimum Group Size",
                  "displayName": "Minimum Group Size",
                  "description": "The minimum size of for the bundle",
                  "defaultValue": "0 B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Group Size": {
                  "name": "Maximum Group Size",
                  "displayName": "Maximum Group Size",
                  "description": "The maximum size for the bundle. If not specified, there is no maximum.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Bin Age": {
                  "name": "Max Bin Age",
                  "displayName": "Max Bin Age",
                  "description": "The maximum age of a Bin that will trigger a Bin to be complete. Expected format is <duration> <time unit> where <duration> is a positive integer and time unit is one of seconds, minutes, hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum number of Bins": {
                  "name": "Maximum number of Bins",
                  "displayName": "Maximum number of Bins",
                  "description": "Specifies the maximum number of bins that can be held in memory at any one time",
                  "defaultValue": "5",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Delimiter Strategy": {
                  "name": "Delimiter Strategy",
                  "displayName": "Delimiter Strategy",
                  "description": "Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.",
                  "defaultValue": "Filename",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Filename",
                        "value": "Filename",
                        "description": "The values of Header, Footer, and Demarcator will be retrieved from the contents of a file"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text",
                        "description": "The values of Header, Footer, and Demarcator will be specified as property values"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Header File": {
                  "name": "Header File",
                  "displayName": "Header",
                  "description": "Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Footer File": {
                  "name": "Footer File",
                  "displayName": "Footer",
                  "description": "Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Demarcator File": {
                  "name": "Demarcator File",
                  "displayName": "Demarcator",
                  "description": "Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Compression Level": {
                  "name": "Compression Level",
                  "displayName": "Compression Level",
                  "description": "Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored",
                  "defaultValue": "1",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "0",
                        "value": "0"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "1",
                        "value": "1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "2",
                        "value": "2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "3",
                        "value": "3"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "4",
                        "value": "4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "5",
                        "value": "5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "6",
                        "value": "6"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "7",
                        "value": "7"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "8",
                        "value": "8"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "9",
                        "value": "9"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Keep Path": {
                  "name": "Keep Path",
                  "displayName": "Keep Path",
                  "description": "If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "a397371a-a1d2-170b-b21c-4bea6300b2ec",
            "name": "MergeContent",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "a397371a-a1d2-170b-b21c-4bea6300b2ec",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "type": "MergeContent",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 947,
              "tasksDurationNanos": 163962931,
              "tasks": "947",
              "tasksDuration": "00:00:00.163",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 10
          },
          "id": "7d9c3fa7-679c-1305-8da8-721549b32592",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/7d9c3fa7-679c-1305-8da8-721549b32592",
          "position": {
            "x": 8647.108513302228,
            "y": 2128.676655522755
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "7d9c3fa7-679c-1305-8da8-721549b32592",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8647.108513302228,
              "y": 2128.676655522755
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "${filename:substringAfterLast('/')}",
                "hdfs-table-name": "oauth_token_information"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "hdfs-table-name": {
                  "name": "hdfs-table-name",
                  "displayName": "hdfs-table-name",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "7d9c3fa7-679c-1305-8da8-721549b32592",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "7d9c3fa7-679c-1305-8da8-721549b32592",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "e0664271-0159-1000-db71-4624a50c9d70",
            "version": 1
          },
          "id": "b5b23009-f229-1384-ffff-fffffb426281",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/b5b23009-f229-1384-ffff-fffffb426281",
          "position": {
            "x": -1962.5257666495986,
            "y": 12.093725445229637
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "b5b23009-f229-1384-ffff-fffffb426281",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -1962.5257666495986,
              "y": 12.093725445229637
            },
            "name": "GetKafka",
            "type": "org.apache.nifi.processors.kafka.GetKafka",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are created are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "ZooKeeper Connection String": "zk1-internal.dp.aws.charter.com:2181,zk2-internal.dp.aws.charter.com:2181,zk3-internal.dp.aws.charter.com:2181",
                "Topic Name": "video_finished_messages_6C568C9AB05D06E0076391F4F771F9F9",
                "Zookeeper Commit Frequency": "60 secs",
                "Batch Size": "1",
                "Message Demarcator": "\\n",
                "Client Name": "NiFi-b5b23009-f229-1384-ffff-fffffb426281",
                "Group ID": "b5b23009-f229-1384-ffff-fffffb426281",
                "Kafka Communications Timeout": "30 secs",
                "ZooKeeper Communications Timeout": "30 secs",
                "Auto Offset Reset": "smallest"
              },
              "descriptors": {
                "ZooKeeper Connection String": {
                  "name": "ZooKeeper Connection String",
                  "displayName": "ZooKeeper Connection String",
                  "description": "The Connection String to use in order to connect to ZooKeeper. This is often a comma-separated list of <host>:<port> combinations. For example, host1:2181,host2:2181,host3:2188",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Topic Name": {
                  "name": "Topic Name",
                  "displayName": "Topic Name",
                  "description": "The Kafka Topic to pull messages from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Zookeeper Commit Frequency": {
                  "name": "Zookeeper Commit Frequency",
                  "displayName": "Zookeeper Commit Frequency",
                  "description": "Specifies how often to communicate with ZooKeeper to indicate which messages have been pulled. A longer time period will result in better overall performance but can result in more data duplication if a NiFi node is lost",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "Specifies the maximum number of messages to combine into a single FlowFile. These messages will be concatenated together with the <Message Demarcator> string placed between the content of each message. If the messages from Kafka should not be concatenated together, leave this value at 1.",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Message Demarcator": {
                  "name": "Message Demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the characters to use in order to demarcate multiple messages from Kafka. If the <Batch Size> property is set to 1, this value is ignored. Otherwise, for each two subsequent messages in the batch, this value will be placed in between them.",
                  "defaultValue": "\\n",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Client Name": {
                  "name": "Client Name",
                  "displayName": "Client Name",
                  "description": "Client Name to use when communicating with Kafka",
                  "defaultValue": "NiFi-b5b23009-f229-1384-ffff-fffffb426281",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Group ID": {
                  "name": "Group ID",
                  "displayName": "Group ID",
                  "description": "A Group ID is used to identify consumers that are within the same consumer group",
                  "defaultValue": "b5b23009-f229-1384-ffff-fffffb426281",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kafka Communications Timeout": {
                  "name": "Kafka Communications Timeout",
                  "displayName": "Kafka Communications Timeout",
                  "description": "The amount of time to wait for a response from Kafka before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "ZooKeeper Communications Timeout": {
                  "name": "ZooKeeper Communications Timeout",
                  "displayName": "ZooKeeper Communications Timeout",
                  "description": "The amount of time to wait for a response from ZooKeeper before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Auto Offset Reset": {
                  "name": "Auto Offset Reset",
                  "displayName": "Auto Offset Reset",
                  "description": "Automatically reset the offset to the smallest or largest offset available on the broker",
                  "defaultValue": "largest",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "smallest",
                        "value": "smallest"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "largest",
                        "value": "largest"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 2000,
              "concurrentlySchedulableTaskCount": 32,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "b5b23009-f229-1384-ffff-fffffb426281",
            "name": "GetKafka",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "b5b23009-f229-1384-ffff-fffffb426281",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka",
              "type": "GetKafka",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 38
          },
          "id": "012d3536-8eda-12a0-8e70-77f7dd3b6d14",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/012d3536-8eda-12a0-8e70-77f7dd3b6d14",
          "position": {
            "x": -439.0305939171046,
            "y": 284.8949381022461
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "012d3536-8eda-12a0-8e70-77f7dd3b6d14",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -439.0305939171046,
              "y": 284.8949381022461
            },
            "name": "MergeContent",
            "type": "org.apache.nifi.processors.standard.MergeContent",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure",
                "autoTerminate": true
              },
              {
                "name": "merged",
                "description": "The FlowFile containing the merged content",
                "autoTerminate": false
              },
              {
                "name": "original",
                "description": "The FlowFiles that were used to create the bundle",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Merge Strategy": "Bin-Packing Algorithm",
                "Merge Format": "Avro",
                "Attribute Strategy": "Keep All Unique Attributes",
                "Correlation Attribute Name": null,
                "Minimum Number of Entries": "200000",
                "Maximum Number of Entries": "400000",
                "Minimum Group Size": "0 B",
                "Maximum Group Size": null,
                "Max Bin Age": "1 hour",
                "Maximum number of Bins": "5",
                "Delimiter Strategy": "Filename",
                "Header File": null,
                "Footer File": null,
                "Demarcator File": null,
                "Compression Level": "1",
                "Keep Path": "false"
              },
              "descriptors": {
                "Merge Strategy": {
                  "name": "Merge Strategy",
                  "displayName": "Merge Strategy",
                  "description": "Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles",
                  "defaultValue": "Bin-Packing Algorithm",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Bin-Packing Algorithm",
                        "value": "Bin-Packing Algorithm",
                        "description": "Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the <Correlation Attribute> property is set)"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Defragment",
                        "value": "Defragment",
                        "description": "Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes <fragment.identifier>, <fragment.count>, and <fragment.index> or alternatively (for backward compatibility purposes) <segment.identifier>, <segment.count>, and <segment.index>. All FlowFiles with the same value for \"fragment.identifier\" will be grouped together. All FlowFiles in this group must have the same value for the \"fragment.count\" attribute. All FlowFiles in this group must have a unique value for the \"fragment.index\" attribute between 0 and the value of the \"fragment.count\" attribute."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Merge Format": {
                  "name": "Merge Format",
                  "displayName": "Merge Format",
                  "description": "Determines the format that will be used to merge the content.",
                  "defaultValue": "Binary Concatenation",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "TAR",
                        "value": "TAR",
                        "description": "A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' <path> attribute will be used to create a directory in the TAR file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named <tar.permissions> that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ZIP",
                        "value": "ZIP",
                        "description": "A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' <path> attribute will be used to create a directory in the ZIP file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The <Compression Level> property indicates the ZIP compression to use."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v3",
                        "value": "FlowFile Stream, v3",
                        "description": "A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v2",
                        "value": "FlowFile Stream, v2",
                        "description": "A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Tar, v1",
                        "value": "FlowFile Tar, v1",
                        "description": "A bin of FlowFiles will be combined into a single Version 1 FlowFile Package"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Binary Concatenation",
                        "value": "Binary Concatenation",
                        "description": "The contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Avro",
                        "value": "Avro",
                        "description": "The Avro contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Attribute Strategy": {
                  "name": "Attribute Strategy",
                  "displayName": "Attribute Strategy",
                  "description": "Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.",
                  "defaultValue": "Keep Only Common Attributes",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Keep Only Common Attributes",
                        "value": "Keep Only Common Attributes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Keep All Unique Attributes",
                        "value": "Keep All Unique Attributes"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Correlation Attribute Name": {
                  "name": "Correlation Attribute Name",
                  "displayName": "Correlation Attribute Name",
                  "description": "If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Minimum Number of Entries": {
                  "name": "Minimum Number of Entries",
                  "displayName": "Minimum Number of Entries",
                  "description": "The minimum number of files to include in a bundle",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Number of Entries": {
                  "name": "Maximum Number of Entries",
                  "displayName": "Maximum Number of Entries",
                  "description": "The maximum number of files to include in a bundle. If not specified, there is no maximum.",
                  "defaultValue": "1000",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum Group Size": {
                  "name": "Minimum Group Size",
                  "displayName": "Minimum Group Size",
                  "description": "The minimum size of for the bundle",
                  "defaultValue": "0 B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Group Size": {
                  "name": "Maximum Group Size",
                  "displayName": "Maximum Group Size",
                  "description": "The maximum size for the bundle. If not specified, there is no maximum.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Bin Age": {
                  "name": "Max Bin Age",
                  "displayName": "Max Bin Age",
                  "description": "The maximum age of a Bin that will trigger a Bin to be complete. Expected format is <duration> <time unit> where <duration> is a positive integer and time unit is one of seconds, minutes, hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum number of Bins": {
                  "name": "Maximum number of Bins",
                  "displayName": "Maximum number of Bins",
                  "description": "Specifies the maximum number of bins that can be held in memory at any one time",
                  "defaultValue": "5",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Delimiter Strategy": {
                  "name": "Delimiter Strategy",
                  "displayName": "Delimiter Strategy",
                  "description": "Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.",
                  "defaultValue": "Filename",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Filename",
                        "value": "Filename",
                        "description": "The values of Header, Footer, and Demarcator will be retrieved from the contents of a file"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text",
                        "description": "The values of Header, Footer, and Demarcator will be specified as property values"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Header File": {
                  "name": "Header File",
                  "displayName": "Header",
                  "description": "Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Footer File": {
                  "name": "Footer File",
                  "displayName": "Footer",
                  "description": "Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Demarcator File": {
                  "name": "Demarcator File",
                  "displayName": "Demarcator",
                  "description": "Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Compression Level": {
                  "name": "Compression Level",
                  "displayName": "Compression Level",
                  "description": "Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored",
                  "defaultValue": "1",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "0",
                        "value": "0"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "1",
                        "value": "1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "2",
                        "value": "2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "3",
                        "value": "3"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "4",
                        "value": "4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "5",
                        "value": "5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "6",
                        "value": "6"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "7",
                        "value": "7"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "8",
                        "value": "8"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "9",
                        "value": "9"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Keep Path": {
                  "name": "Keep Path",
                  "displayName": "Keep Path",
                  "description": "If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 10,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "012d3536-8eda-12a0-8e70-77f7dd3b6d14",
            "name": "MergeContent",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "012d3536-8eda-12a0-8e70-77f7dd3b6d14",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "type": "MergeContent",
              "runStatus": "Running",
              "bytesRead": 11828969731,
              "bytesWritten": 1053579381,
              "read": "11.02 GB",
              "written": "1,004.77 MB",
              "flowFilesIn": 409448,
              "bytesIn": 11828969731,
              "input": "409,448 (11.02 GB)",
              "flowFilesOut": 2,
              "bytesOut": 1053579381,
              "output": "2 (1,004.77 MB)",
              "taskCount": 1631,
              "tasksDurationNanos": 344155658444,
              "tasks": "1,631",
              "tasksDuration": "00:05:44.155",
              "activeThreadCount": 2
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 14
          },
          "id": "27cc31ce-e681-1ace-8599-00b05241995b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/27cc31ce-e681-1ace-8599-00b05241995b",
          "position": {
            "x": 8239.120232052228,
            "y": 2127.25404810088
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "27cc31ce-e681-1ace-8599-00b05241995b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8239.120232052228,
              "y": 2127.25404810088
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "${filename:substringAfterLast('/')}",
                "hdfs-table-name": "ngxgw_access"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "hdfs-table-name": {
                  "name": "hdfs-table-name",
                  "displayName": "hdfs-table-name",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "27cc31ce-e681-1ace-8599-00b05241995b",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "27cc31ce-e681-1ace-8599-00b05241995b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "f095c049-0159-1000-5856-17d60e5b4a0f",
            "version": 10
          },
          "id": "a7843bb4-7051-13d0-8de7-539209949fe9",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/a7843bb4-7051-13d0-8de7-539209949fe9",
          "position": {
            "x": 359.795016625505,
            "y": 57.49963568828048
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a7843bb4-7051-13d0-8de7-539209949fe9",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 359.795016625505,
              "y": 57.49963568828048
            },
            "name": "GetKafka - venona_error_977FC20E5971627026E12B03BDF7914E",
            "type": "org.apache.nifi.processors.kafka.GetKafka",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are created are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "ZooKeeper Connection String": "zk2-internal.dp.aws.charter.com:2181,zk3-internal.dp.aws.charter.com:2181,zk3-internal.dp.aws.charter.com:2181",
                "Topic Name": "venona_error_977FC20E5971627026E12B03BDF7914E",
                "Zookeeper Commit Frequency": "60 secs",
                "Batch Size": "1",
                "Message Demarcator": "\\n",
                "Client Name": "NiFi-f4b3e296-0158-1000-0000-00003aeefad8",
                "Group ID": "a7843bb4-7051-13d0-8de7-539209949fe9",
                "Kafka Communications Timeout": "30 secs",
                "ZooKeeper Communications Timeout": "30 secs",
                "Auto Offset Reset": "largest"
              },
              "descriptors": {
                "ZooKeeper Connection String": {
                  "name": "ZooKeeper Connection String",
                  "displayName": "ZooKeeper Connection String",
                  "description": "The Connection String to use in order to connect to ZooKeeper. This is often a comma-separated list of <host>:<port> combinations. For example, host1:2181,host2:2181,host3:2188",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Topic Name": {
                  "name": "Topic Name",
                  "displayName": "Topic Name",
                  "description": "The Kafka Topic to pull messages from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Zookeeper Commit Frequency": {
                  "name": "Zookeeper Commit Frequency",
                  "displayName": "Zookeeper Commit Frequency",
                  "description": "Specifies how often to communicate with ZooKeeper to indicate which messages have been pulled. A longer time period will result in better overall performance but can result in more data duplication if a NiFi node is lost",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "Specifies the maximum number of messages to combine into a single FlowFile. These messages will be concatenated together with the <Message Demarcator> string placed between the content of each message. If the messages from Kafka should not be concatenated together, leave this value at 1.",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Message Demarcator": {
                  "name": "Message Demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the characters to use in order to demarcate multiple messages from Kafka. If the <Batch Size> property is set to 1, this value is ignored. Otherwise, for each two subsequent messages in the batch, this value will be placed in between them.",
                  "defaultValue": "\\n",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Client Name": {
                  "name": "Client Name",
                  "displayName": "Client Name",
                  "description": "Client Name to use when communicating with Kafka",
                  "defaultValue": "NiFi-a7843bb4-7051-13d0-8de7-539209949fe9",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Group ID": {
                  "name": "Group ID",
                  "displayName": "Group ID",
                  "description": "A Group ID is used to identify consumers that are within the same consumer group",
                  "defaultValue": "a7843bb4-7051-13d0-8de7-539209949fe9",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kafka Communications Timeout": {
                  "name": "Kafka Communications Timeout",
                  "displayName": "Kafka Communications Timeout",
                  "description": "The amount of time to wait for a response from Kafka before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "ZooKeeper Communications Timeout": {
                  "name": "ZooKeeper Communications Timeout",
                  "displayName": "ZooKeeper Communications Timeout",
                  "description": "The amount of time to wait for a response from ZooKeeper before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Auto Offset Reset": {
                  "name": "Auto Offset Reset",
                  "displayName": "Auto Offset Reset",
                  "description": "Automatically reset the offset to the smallest or largest offset available on the broker",
                  "defaultValue": "largest",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "smallest",
                        "value": "smallest"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "largest",
                        "value": "largest"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "60 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 2000,
              "concurrentlySchedulableTaskCount": 32,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "a7843bb4-7051-13d0-8de7-539209949fe9",
            "name": "GetKafka - venona_error_977FC20E5971627026E12B03BDF7914E",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "a7843bb4-7051-13d0-8de7-539209949fe9",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka - venona_error_977FC20E5971627026E12B03BDF7914E",
              "type": "GetKafka",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 454966,
              "read": "0 bytes",
              "written": "444.3 KB",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 477,
              "bytesOut": 454966,
              "output": "477 (444.3 KB)",
              "taskCount": 705800,
              "tasksDurationNanos": 965812463319,
              "tasks": "705,800",
              "tasksDuration": "00:16:05.812",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "62628aee-015a-1000-6c92-c6eda223530d",
            "version": 22
          },
          "id": "91e53671-478c-1f55-bd9d-1b1e75a5509f",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/91e53671-478c-1f55-bd9d-1b1e75a5509f",
          "position": {
            "x": -443.70201895357854,
            "y": 59.97711833491451
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "91e53671-478c-1f55-bd9d-1b1e75a5509f",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -443.70201895357854,
              "y": 59.97711833491451
            },
            "name": "GetKafka - venona_finished_messages_avro_9B71F1F26C65EC48006D80ED957A9511",
            "type": "org.apache.nifi.processors.kafka.GetKafka",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are created are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "ZooKeeper Connection String": "zk3-internal.dp.aws.charter.com:2181,zk2-internal.dp.aws.charter.com:2181,zk1-internal.dp.aws.charter.com:2181",
                "Topic Name": "venona_finished_messages_avro_9B71F1F26C65EC48006D80ED957A9511",
                "Zookeeper Commit Frequency": "60 secs",
                "Batch Size": "1",
                "Message Demarcator": "\\n",
                "Client Name": "NiFi-f4b3e296-0158-1000-0000-00003aeefad8",
                "Group ID": "91e53671-478c-1f55-bd9d-1b1e75a5509f",
                "Kafka Communications Timeout": "30 secs",
                "ZooKeeper Communications Timeout": "30 secs",
                "Auto Offset Reset": "smallest",
                "fetch.message.max.bytes": "20971520",
                "fetch.min.bytes": "10485760",
                "num.consumer.fetchers": "2",
                "queued.max.message.chunks": "5",
                "socket.receive.buffer.bytes": "1048576"
              },
              "descriptors": {
                "ZooKeeper Connection String": {
                  "name": "ZooKeeper Connection String",
                  "displayName": "ZooKeeper Connection String",
                  "description": "The Connection String to use in order to connect to ZooKeeper. This is often a comma-separated list of <host>:<port> combinations. For example, host1:2181,host2:2181,host3:2188",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Topic Name": {
                  "name": "Topic Name",
                  "displayName": "Topic Name",
                  "description": "The Kafka Topic to pull messages from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Zookeeper Commit Frequency": {
                  "name": "Zookeeper Commit Frequency",
                  "displayName": "Zookeeper Commit Frequency",
                  "description": "Specifies how often to communicate with ZooKeeper to indicate which messages have been pulled. A longer time period will result in better overall performance but can result in more data duplication if a NiFi node is lost",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "Specifies the maximum number of messages to combine into a single FlowFile. These messages will be concatenated together with the <Message Demarcator> string placed between the content of each message. If the messages from Kafka should not be concatenated together, leave this value at 1.",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Message Demarcator": {
                  "name": "Message Demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the characters to use in order to demarcate multiple messages from Kafka. If the <Batch Size> property is set to 1, this value is ignored. Otherwise, for each two subsequent messages in the batch, this value will be placed in between them.",
                  "defaultValue": "\\n",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Client Name": {
                  "name": "Client Name",
                  "displayName": "Client Name",
                  "description": "Client Name to use when communicating with Kafka",
                  "defaultValue": "NiFi-91e53671-478c-1f55-bd9d-1b1e75a5509f",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Group ID": {
                  "name": "Group ID",
                  "displayName": "Group ID",
                  "description": "A Group ID is used to identify consumers that are within the same consumer group",
                  "defaultValue": "91e53671-478c-1f55-bd9d-1b1e75a5509f",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kafka Communications Timeout": {
                  "name": "Kafka Communications Timeout",
                  "displayName": "Kafka Communications Timeout",
                  "description": "The amount of time to wait for a response from Kafka before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "ZooKeeper Communications Timeout": {
                  "name": "ZooKeeper Communications Timeout",
                  "displayName": "ZooKeeper Communications Timeout",
                  "description": "The amount of time to wait for a response from ZooKeeper before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Auto Offset Reset": {
                  "name": "Auto Offset Reset",
                  "displayName": "Auto Offset Reset",
                  "description": "Automatically reset the offset to the smallest or largest offset available on the broker",
                  "defaultValue": "largest",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "smallest",
                        "value": "smallest"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "largest",
                        "value": "largest"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "fetch.message.max.bytes": {
                  "name": "fetch.message.max.bytes",
                  "displayName": "fetch.message.max.bytes",
                  "description": "Specifies the value for 'fetch.message.max.bytes' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "fetch.min.bytes": {
                  "name": "fetch.min.bytes",
                  "displayName": "fetch.min.bytes",
                  "description": "Specifies the value for 'fetch.min.bytes' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "num.consumer.fetchers": {
                  "name": "num.consumer.fetchers",
                  "displayName": "num.consumer.fetchers",
                  "description": "Specifies the value for 'num.consumer.fetchers' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "queued.max.message.chunks": {
                  "name": "queued.max.message.chunks",
                  "displayName": "queued.max.message.chunks",
                  "description": "Specifies the value for 'queued.max.message.chunks' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "socket.receive.buffer.bytes": {
                  "name": "socket.receive.buffer.bytes",
                  "displayName": "socket.receive.buffer.bytes",
                  "description": "Specifies the value for 'socket.receive.buffer.bytes' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "30 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 2000,
              "concurrentlySchedulableTaskCount": 32,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "91e53671-478c-1f55-bd9d-1b1e75a5509f",
            "name": "GetKafka - venona_finished_messages_avro_9B71F1F26C65EC48006D80ED957A9511",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "91e53671-478c-1f55-bd9d-1b1e75a5509f",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka - venona_finished_messages_avro_9B71F1F26C65EC48006D80ED957A9511",
              "type": "GetKafka",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 14155189886,
              "read": "0 bytes",
              "written": "13.18 GB",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 490174,
              "bytesOut": 14155189886,
              "output": "490,174 (13.18 GB)",
              "taskCount": 1573608,
              "tasksDurationNanos": 1744624882844,
              "tasks": "1,573,608",
              "tasksDuration": "00:29:04.624",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 11
          },
          "id": "ac8238e1-414f-1ff8-ba0c-e1cee2f337ed",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/ac8238e1-414f-1ff8-ba0c-e1cee2f337ed",
          "position": {
            "x": 360.50011780943987,
            "y": 278.63088395292664
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "ac8238e1-414f-1ff8-ba0c-e1cee2f337ed",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 360.50011780943987,
              "y": 278.63088395292664
            },
            "name": "MergeContent",
            "type": "org.apache.nifi.processors.standard.MergeContent",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "If the bundle cannot be created, all FlowFiles that would have been used to created the bundle will be transferred to failure",
                "autoTerminate": true
              },
              {
                "name": "merged",
                "description": "The FlowFile containing the merged content",
                "autoTerminate": false
              },
              {
                "name": "original",
                "description": "The FlowFiles that were used to create the bundle",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Merge Strategy": "Bin-Packing Algorithm",
                "Merge Format": "Avro",
                "Attribute Strategy": "Keep All Unique Attributes",
                "Correlation Attribute Name": null,
                "Minimum Number of Entries": "200000",
                "Maximum Number of Entries": "400000",
                "Minimum Group Size": "0 B",
                "Maximum Group Size": null,
                "Max Bin Age": "1 hour",
                "Maximum number of Bins": "5",
                "Delimiter Strategy": "Filename",
                "Header File": null,
                "Footer File": null,
                "Demarcator File": null,
                "Compression Level": "1",
                "Keep Path": "false"
              },
              "descriptors": {
                "Merge Strategy": {
                  "name": "Merge Strategy",
                  "displayName": "Merge Strategy",
                  "description": "Specifies the algorithm used to merge content. The 'Defragment' algorithm combines fragments that are associated by attributes back into a single cohesive FlowFile. The 'Bin-Packing Algorithm' generates a FlowFile populated by arbitrarily chosen FlowFiles",
                  "defaultValue": "Bin-Packing Algorithm",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Bin-Packing Algorithm",
                        "value": "Bin-Packing Algorithm",
                        "description": "Generates 'bins' of FlowFiles and fills each bin as full as possible. FlowFiles are placed into a bin based on their size and optionally their attributes (if the <Correlation Attribute> property is set)"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Defragment",
                        "value": "Defragment",
                        "description": "Combines fragments that are associated by attributes back into a single cohesive FlowFile. If using this strategy, all FlowFiles must have the attributes <fragment.identifier>, <fragment.count>, and <fragment.index> or alternatively (for backward compatibility purposes) <segment.identifier>, <segment.count>, and <segment.index>. All FlowFiles with the same value for \"fragment.identifier\" will be grouped together. All FlowFiles in this group must have the same value for the \"fragment.count\" attribute. All FlowFiles in this group must have a unique value for the \"fragment.index\" attribute between 0 and the value of the \"fragment.count\" attribute."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Merge Format": {
                  "name": "Merge Format",
                  "displayName": "Merge Format",
                  "description": "Determines the format that will be used to merge the content.",
                  "defaultValue": "Binary Concatenation",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "TAR",
                        "value": "TAR",
                        "description": "A bin of FlowFiles will be combined into a single TAR file. The FlowFiles' <path> attribute will be used to create a directory in the TAR file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the TAR file. If a FlowFile has an attribute named <tar.permissions> that is 3 characters, each between 0-7, that attribute will be used as the TAR entry's 'mode'."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ZIP",
                        "value": "ZIP",
                        "description": "A bin of FlowFiles will be combined into a single ZIP file. The FlowFiles' <path> attribute will be used to create a directory in the ZIP file if the <Keep Paths> property is set to true; otherwise, all FlowFiles will be added at the root of the ZIP file. The <Compression Level> property indicates the ZIP compression to use."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v3",
                        "value": "FlowFile Stream, v3",
                        "description": "A bin of FlowFiles will be combined into a single Version 3 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Stream, v2",
                        "value": "FlowFile Stream, v2",
                        "description": "A bin of FlowFiles will be combined into a single Version 2 FlowFile Stream"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "FlowFile Tar, v1",
                        "value": "FlowFile Tar, v1",
                        "description": "A bin of FlowFiles will be combined into a single Version 1 FlowFile Package"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Binary Concatenation",
                        "value": "Binary Concatenation",
                        "description": "The contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Avro",
                        "value": "Avro",
                        "description": "The Avro contents of all FlowFiles will be concatenated together into a single FlowFile"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Attribute Strategy": {
                  "name": "Attribute Strategy",
                  "displayName": "Attribute Strategy",
                  "description": "Determines which FlowFile attributes should be added to the bundle. If 'Keep All Unique Attributes' is selected, any attribute on any FlowFile that gets bundled will be kept unless its value conflicts with the value from another FlowFile. If 'Keep Only Common Attributes' is selected, only the attributes that exist on all FlowFiles in the bundle, with the same value, will be preserved.",
                  "defaultValue": "Keep Only Common Attributes",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Keep Only Common Attributes",
                        "value": "Keep Only Common Attributes"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Keep All Unique Attributes",
                        "value": "Keep All Unique Attributes"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Correlation Attribute Name": {
                  "name": "Correlation Attribute Name",
                  "displayName": "Correlation Attribute Name",
                  "description": "If specified, like FlowFiles will be binned together, where 'like FlowFiles' means FlowFiles that have the same value for this Attribute. If not specified, FlowFiles are bundled by the order in which they are pulled from the queue.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Minimum Number of Entries": {
                  "name": "Minimum Number of Entries",
                  "displayName": "Minimum Number of Entries",
                  "description": "The minimum number of files to include in a bundle",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Number of Entries": {
                  "name": "Maximum Number of Entries",
                  "displayName": "Maximum Number of Entries",
                  "description": "The maximum number of files to include in a bundle. If not specified, there is no maximum.",
                  "defaultValue": "1000",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Minimum Group Size": {
                  "name": "Minimum Group Size",
                  "displayName": "Minimum Group Size",
                  "description": "The minimum size of for the bundle",
                  "defaultValue": "0 B",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum Group Size": {
                  "name": "Maximum Group Size",
                  "displayName": "Maximum Group Size",
                  "description": "The maximum size for the bundle. If not specified, there is no maximum.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Bin Age": {
                  "name": "Max Bin Age",
                  "displayName": "Max Bin Age",
                  "description": "The maximum age of a Bin that will trigger a Bin to be complete. Expected format is <duration> <time unit> where <duration> is a positive integer and time unit is one of seconds, minutes, hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum number of Bins": {
                  "name": "Maximum number of Bins",
                  "displayName": "Maximum number of Bins",
                  "description": "Specifies the maximum number of bins that can be held in memory at any one time",
                  "defaultValue": "5",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Delimiter Strategy": {
                  "name": "Delimiter Strategy",
                  "displayName": "Delimiter Strategy",
                  "description": "Determines if Header, Footer, and Demarcator should point to files containing the respective content, or if the values of the properties should be used as the content.",
                  "defaultValue": "Filename",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Filename",
                        "value": "Filename",
                        "description": "The values of Header, Footer, and Demarcator will be retrieved from the contents of a file"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Text",
                        "value": "Text",
                        "description": "The values of Header, Footer, and Demarcator will be specified as property values"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Header File": {
                  "name": "Header File",
                  "displayName": "Header",
                  "description": "Filename specifying the header to use. If not specified, no header is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Footer File": {
                  "name": "Footer File",
                  "displayName": "Footer",
                  "description": "Filename specifying the footer to use. If not specified, no footer is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Demarcator File": {
                  "name": "Demarcator File",
                  "displayName": "Demarcator",
                  "description": "Filename specifying the demarcator to use. If not specified, no demarcator is supplied. This property is valid only when using the binary-concatenation merge strategy; otherwise, it is ignored.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Compression Level": {
                  "name": "Compression Level",
                  "displayName": "Compression Level",
                  "description": "Specifies the compression level to use when using the Zip Merge Format; if not using the Zip Merge Format, this value is ignored",
                  "defaultValue": "1",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "0",
                        "value": "0"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "1",
                        "value": "1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "2",
                        "value": "2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "3",
                        "value": "3"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "4",
                        "value": "4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "5",
                        "value": "5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "6",
                        "value": "6"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "7",
                        "value": "7"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "8",
                        "value": "8"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "9",
                        "value": "9"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Keep Path": {
                  "name": "Keep Path",
                  "displayName": "Keep Path",
                  "description": "If using the Zip or Tar Merge Format, specifies whether or not the FlowFiles' paths should be included in their entry names; if using other merge strategy, this value is ignored",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "ac8238e1-414f-1ff8-ba0c-e1cee2f337ed",
            "name": "MergeContent",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "ac8238e1-414f-1ff8-ba0c-e1cee2f337ed",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "type": "MergeContent",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 473,
              "tasksDurationNanos": 21245666,
              "tasks": "473",
              "tasksDuration": "00:00:00.021",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 8
          },
          "id": "ffb13783-414c-1962-ba5c-65b7176713be",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/ffb13783-414c-1962-ba5c-65b7176713be",
          "position": {
            "x": -32.63278138032456,
            "y": 535.8596578447649
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "ffb13783-414c-1962-ba5c-65b7176713be",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -32.63278138032456,
              "y": 535.8596578447649
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "venona_unfinished_${UUID()}.avro"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "ffb13783-414c-1962-ba5c-65b7176713be",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "ffb13783-414c-1962-ba5c-65b7176713be",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "63c4f751-015a-1000-82e1-7e29b0536e15",
            "version": 5
          },
          "id": "f7686a0f-0159-1000-ac33-6e67c4ed5371",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/f7686a0f-0159-1000-ac33-6e67c4ed5371",
          "position": {
            "x": 8221.600313186269,
            "y": 1084.957163145026
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "f7686a0f-0159-1000-ac33-6e67c4ed5371",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8221.600313186269,
              "y": 1084.957163145026
            },
            "name": "Extract Encrypted AES Key Filename",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "annotationData": "<criteria>\n    <flowFilePolicy>USE_CLONE</flowFilePolicy>\n    <rules>\n        <actions>\n            <attribute>keyfile</attribute>\n            <id>3a67d140-a2aa-4070-b00b-ad43719d817e</id>\n            <value>${s3-downloads-dir}/${filename}</value>\n        </actions>\n        <conditions>\n            <expression>${filename:endsWith('.key')}</expression>\n            <id>f5c98dd4-bd71-4d1f-bb99-185a395b6938</id>\n        </conditions>\n        <id>f0f81fad-cd87-4131-8bb0-cdc99a673827</id>\n        <name>If encrypted key file is found</name>\n    </rules>\n</criteria>",
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "f7686a0f-0159-1000-ac33-6e67c4ed5371",
            "name": "Extract Encrypted AES Key Filename",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "f7686a0f-0159-1000-ac33-6e67c4ed5371",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "Extract Encrypted AES Key Filename",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 18
          },
          "id": "002994d8-015a-1000-a3d3-75813082776d",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/002994d8-015a-1000-a3d3-75813082776d",
          "position": {
            "x": 8852.873493831776,
            "y": 897.7227255493156
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "002994d8-015a-1000-a3d3-75813082776d",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8852.873493831776,
              "y": 897.7227255493156
            },
            "name": "PutFile",
            "type": "org.apache.nifi.processors.standard.PutFile",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to the output directory for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to the output directory are transferred to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Directory": "${s3-downloads-dir}",
                "Conflict Resolution Strategy": "replace",
                "Create Missing Directories": "true",
                "Maximum File Count": null,
                "Last Modified Time": null,
                "Permissions": null,
                "Owner": null,
                "Group": null
              },
              "descriptors": {
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The directory to which files should be written. You may use expression language such as /aa/bb/${path}",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Create Missing Directories": {
                  "name": "Create Missing Directories",
                  "displayName": "Create Missing Directories",
                  "description": "If true, then missing destination directories will be created. If false, flowfiles are penalized and sent to failure.",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Maximum File Count": {
                  "name": "Maximum File Count",
                  "displayName": "Maximum File Count",
                  "description": "Specifies the maximum number of files that can exist in the output directory",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Last Modified Time": {
                  "name": "Last Modified Time",
                  "displayName": "Last Modified Time",
                  "description": "Sets the lastModifiedTime on the output file to the value of this attribute.  Format must be yyyy-MM-dd'T'HH:mm:ssZ.  You may also use expression language such as ${file.lastModifiedTime}.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Permissions": {
                  "name": "Permissions",
                  "displayName": "Permissions",
                  "description": "Sets the permissions on the output file to the value of this attribute.  Format must be either UNIX rwxrwxrwx with a - in place of denied permissions (e.g. rw-r--r--) or an octal number (e.g. 644).  You may also use expression language such as ${file.permissions}.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Owner": {
                  "name": "Owner",
                  "displayName": "Owner",
                  "description": "Sets the owner on the output file to the value of this attribute.  You may also use expression language such as ${file.owner}.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Group": {
                  "name": "Group",
                  "displayName": "Group",
                  "description": "Sets the group on the output file to the value of this attribute.  You may also use expression language such as ${file.group}.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "002994d8-015a-1000-a3d3-75813082776d",
            "name": "PutFile",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "002994d8-015a-1000-a3d3-75813082776d",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutFile",
              "type": "PutFile",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bf036e7-015a-1000-f5ad-b0a3e635bfe1",
            "version": 6
          },
          "id": "015a1007-94d8-1029-86f5-1ffe2849f489",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/015a1007-94d8-1029-86f5-1ffe2849f489",
          "position": {
            "x": 10011.419993430163,
            "y": 470.24733350875056
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "015a1007-94d8-1029-86f5-1ffe2849f489",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 10011.419993430163,
              "y": 470.24733350875056
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "${filename:substringAfterLast('/')}",
                "sftp-downloads-dir": "/data/nifi/sftp_decryption_downloads/sftp_encrypted_input"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "sftp-downloads-dir": {
                  "name": "sftp-downloads-dir",
                  "displayName": "sftp-downloads-dir",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "015a1007-94d8-1029-86f5-1ffe2849f489",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "015a1007-94d8-1029-86f5-1ffe2849f489",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "aeff3da0-2604-1e1f-9153-7ce2870e40c9",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/aeff3da0-2604-1e1f-9153-7ce2870e40c9",
          "position": {
            "x": 5445.33730506755,
            "y": 743.2885715546504
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "aeff3da0-2604-1e1f-9153-7ce2870e40c9",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 5445.33730506755,
              "y": 743.2885715546504
            },
            "name": "ExtractAvroMetadata",
            "type": "org.apache.nifi.processors.avro.ExtractAvroMetadata",
            "state": "RUNNING",
            "style": {
              "background-color": "#ffffff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "A FlowFile is routed to this relationship if it cannot be parsed as Avro or metadata cannot be extracted for any reason",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "A FlowFile is routed to this relationship after metadata has been extracted.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Fingerprint Algorithm": "CRC-64-AVRO",
                "Metadata Keys": "avro.schema",
                "Count Items": "false"
              },
              "descriptors": {
                "Fingerprint Algorithm": {
                  "name": "Fingerprint Algorithm",
                  "displayName": "Fingerprint Algorithm",
                  "description": "The algorithm used to generate the schema fingerprint. Available choices are based on the Avro recommended practices for fingerprint generation.",
                  "defaultValue": "CRC-64-AVRO",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "CRC-64-AVRO",
                        "value": "CRC-64-AVRO"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "MD5",
                        "value": "MD5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SHA-256",
                        "value": "SHA-256"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Metadata Keys": {
                  "name": "Metadata Keys",
                  "displayName": "Metadata Keys",
                  "description": "A comma-separated list of keys indicating key/value pairs to extract from the Avro file header. The key 'avro.schema' can be used to extract the full schema in JSON format, and 'avro.codec' can be used to extract the codec name if one exists.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Count Items": {
                  "name": "Count Items",
                  "displayName": "Count Items",
                  "description": "If true the number of items in the datafile will be counted and stored in a FlowFile attribute 'item.count'. The counting is done by reading blocks and getting the number of items for each block, thus avoiding de-serializing. The items being counted will be the top-level items in the datafile. For example, with a schema of type record the items will be the records, and for a schema of type Array the items will be the arrays (not the number of entries in each array).",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "aeff3da0-2604-1e1f-9153-7ce2870e40c9",
            "name": "ExtractAvroMetadata",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "aeff3da0-2604-1e1f-9153-7ce2870e40c9",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "type": "ExtractAvroMetadata",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bf036e7-015a-1000-f5ad-b0a3e635bfe1",
            "version": 5
          },
          "id": "015a100a-94d8-1029-8a60-25613fab687b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/015a100a-94d8-1029-8a60-25613fab687b",
          "position": {
            "x": 10013.589095981528,
            "y": 655.7945611103651
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "015a100a-94d8-1029-8a60-25613fab687b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 10013.589095981528,
              "y": 655.7945611103651
            },
            "name": "RouteOnAttribute",
            "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "datafile",
                "description": "",
                "autoTerminate": false
              },
              {
                "name": "unmatched",
                "description": "FlowFiles that do not match any user-define expression will be routed here",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Routing Strategy": "Route to Property name",
                "datafile": "${filename:endsWith('.gpg')}"
              },
              "descriptors": {
                "Routing Strategy": {
                  "name": "Routing Strategy",
                  "displayName": "Routing Strategy",
                  "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                  "defaultValue": "Route to Property name",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Route to Property name",
                        "value": "Route to Property name",
                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Route to 'matched' if all match",
                        "value": "Route to 'match' if all match",
                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Route to 'matched' if any matches",
                        "value": "Route to 'match' if any matches",
                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "datafile": {
                  "name": "datafile",
                  "displayName": "datafile",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "015a100a-94d8-1029-8a60-25613fab687b",
            "name": "RouteOnAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "015a100a-94d8-1029-8a60-25613fab687b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "type": "RouteOnAttribute",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "aeff4253-2604-1e1f-60bd-8d385f539e16",
            "version": 15
          },
          "id": "d9e43cde-35a2-1ab1-b4f5-dc62fee49f9f",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/d9e43cde-35a2-1ab1-b4f5-dc62fee49f9f",
          "position": {
            "x": 774.9571537165809,
            "y": 1191.9983328324315
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "d9e43cde-35a2-1ab1-b4f5-dc62fee49f9f",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 774.9571537165809,
              "y": 1191.9983328324315
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/video_finished_messages_6C568C9AB05D06E0076391F4F771F9F9/partition_date=${now():plus(21600000):format('yyyy-MM-dd')}/partition_hour=${now():plus(21600000):format('HH')}",
                "Conflict Resolution Strategy": "fail",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "d9e43cde-35a2-1ab1-b4f5-dc62fee49f9f",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "d9e43cde-35a2-1ab1-b4f5-dc62fee49f9f",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "aeff4253-2604-1e1f-60bd-8d385f539e16",
            "version": 23
          },
          "id": "30d13956-c29c-17b9-830d-773575354818",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/30d13956-c29c-17b9-830d-773575354818",
          "position": {
            "x": -29.512695256688858,
            "y": 1196.345425965384
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "30d13956-c29c-17b9-830d-773575354818",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -29.512695256688858,
              "y": 1196.345425965384
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/venona/prod_unfinished_messages/partition_date=${now():plus(21600000):format('yyyy-MM-dd')}/partition_hour=${now():plus(21600000):format('HH')}",
                "Conflict Resolution Strategy": "fail",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "30d13956-c29c-17b9-830d-773575354818",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "30d13956-c29c-17b9-830d-773575354818",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 3
          },
          "id": "818531d0-61d6-19cc-8ddd-82f4ebb2596c",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/818531d0-61d6-19cc-8ddd-82f4ebb2596c",
          "position": {
            "x": 1591.7497806534875,
            "y": 758.2562839569941
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "818531d0-61d6-19cc-8ddd-82f4ebb2596c",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 1591.7497806534875,
              "y": 758.2562839569941
            },
            "name": "ExtractAvroMetadata",
            "type": "org.apache.nifi.processors.avro.ExtractAvroMetadata",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "A FlowFile is routed to this relationship if it cannot be parsed as Avro or metadata cannot be extracted for any reason",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "A FlowFile is routed to this relationship after metadata has been extracted.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Fingerprint Algorithm": "CRC-64-AVRO",
                "Metadata Keys": "avro.schema",
                "Count Items": "false"
              },
              "descriptors": {
                "Fingerprint Algorithm": {
                  "name": "Fingerprint Algorithm",
                  "displayName": "Fingerprint Algorithm",
                  "description": "The algorithm used to generate the schema fingerprint. Available choices are based on the Avro recommended practices for fingerprint generation.",
                  "defaultValue": "CRC-64-AVRO",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "CRC-64-AVRO",
                        "value": "CRC-64-AVRO"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "MD5",
                        "value": "MD5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SHA-256",
                        "value": "SHA-256"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Metadata Keys": {
                  "name": "Metadata Keys",
                  "displayName": "Metadata Keys",
                  "description": "A comma-separated list of keys indicating key/value pairs to extract from the Avro file header. The key 'avro.schema' can be used to extract the full schema in JSON format, and 'avro.codec' can be used to extract the codec name if one exists.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Count Items": {
                  "name": "Count Items",
                  "displayName": "Count Items",
                  "description": "If true the number of items in the datafile will be counted and stored in a FlowFile attribute 'item.count'. The counting is done by reading blocks and getting the number of items for each block, thus avoiding de-serializing. The items being counted will be the top-level items in the datafile. For example, with a schema of type record the items will be the records, and for a schema of type Array the items will be the arrays (not the number of entries in each array).",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "818531d0-61d6-19cc-8ddd-82f4ebb2596c",
            "name": "ExtractAvroMetadata",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "818531d0-61d6-19cc-8ddd-82f4ebb2596c",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "type": "ExtractAvroMetadata",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 9
          },
          "id": "02d83f53-b69e-1b62-98a8-5f90595f1512",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/02d83f53-b69e-1b62-98a8-5f90595f1512",
          "position": {
            "x": 1186.84205162548,
            "y": 984.0688762549473
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "02d83f53-b69e-1b62-98a8-5f90595f1512",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 1186.84205162548,
              "y": 984.0688762549473
            },
            "name": "ConvertAvroSchema",
            "type": "org.apache.nifi.processors.kite.ConvertAvroSchema",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Avro content that failed to convert",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Avro content that converted successfully",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Input Schema": "${avro.schema}",
                "Output Schema": "${avro.schema}",
                "Locale": "default",
                "kite-compression-type": "DEFLATE"
              },
              "descriptors": {
                "Input Schema": {
                  "name": "Input Schema",
                  "displayName": "Input Schema",
                  "description": "Avro Schema of Input Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Output Schema": {
                  "name": "Output Schema",
                  "displayName": "Output Schema",
                  "description": "Avro Schema of Output Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Locale": {
                  "name": "Locale",
                  "displayName": "Locale",
                  "description": "Locale to use for scanning data (see https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html)or \" default\" for JVM default",
                  "defaultValue": "default",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "kite-compression-type": {
                  "name": "kite-compression-type",
                  "displayName": "Compression type",
                  "description": "Compression type to use when writting Avro files. Default is Snappy.",
                  "defaultValue": "SNAPPY",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "BZIP2",
                        "value": "BZIP2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFLATE",
                        "value": "DEFLATE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZO",
                        "value": "LZO"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "02d83f53-b69e-1b62-98a8-5f90595f1512",
            "name": "ConvertAvroSchema",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "02d83f53-b69e-1b62-98a8-5f90595f1512",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "type": "ConvertAvroSchema",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 2
          },
          "id": "94d81034-100a-115a-86d8-39c9316a0b35",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/94d81034-100a-115a-86d8-39c9316a0b35",
          "position": {
            "x": 10180.275540217093,
            "y": 1074.9126440900188
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "94d81034-100a-115a-86d8-39c9316a0b35",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 10180.275540217093,
              "y": 1074.9126440900188
            },
            "name": "Extract GPG Encrypted Date Filename",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "annotationData": "<criteria>\n    <flowFilePolicy>USE_CLONE</flowFilePolicy>\n    <rules>\n        <actions>\n            <attribute>datafile</attribute>\n            <id>1068d566-5da4-4fb2-acf6-9ddfd7f981bc</id>\n            <value>${sftp-downloads-dir}/${filename}</value>\n        </actions>\n        <conditions>\n            <expression>${filename:endsWith('gpg')}</expression>\n            <id>5ed462c1-9864-4d98-adfb-db5b75e6f7ba</id>\n        </conditions>\n        <id>bdff43fe-344c-4889-b38c-918602e1765a</id>\n        <name>if gpg encrypted data file is found</name>\n    </rules>\n</criteria>",
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "94d81034-100a-115a-86d8-39c9316a0b35",
            "name": "Extract GPG Encrypted Date Filename",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "94d81034-100a-115a-86d8-39c9316a0b35",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "Extract GPG Encrypted Date Filename",
              "type": "UpdateAttribute",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 16
          },
          "id": "ed6d32bc-10a9-1604-b75a-c2997861ef03",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/ed6d32bc-10a9-1604-b75a-c2997861ef03",
          "position": {
            "x": 5437.266920873908,
            "y": 42.312318593534144
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "ed6d32bc-10a9-1604-b75a-c2997861ef03",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 5437.266920873908,
              "y": 42.312318593534144
            },
            "name": "GetXGAnalyticsKafka - staging venona_error",
            "type": "org.apache.nifi.processors.kafka.GetKafka",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are created are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "ZooKeeper Connection String": "zookeeper.xganalytics.io:2181",
                "Topic Name": "venona_error_977FC20E5971627026E12B03BDF7914E",
                "Zookeeper Commit Frequency": "60 secs",
                "Batch Size": "1",
                "Message Demarcator": "\\n",
                "Client Name": "NiFi-f4b3e296-0158-1000-0000-00003aeefad8",
                "Group ID": "f4b3e296-0158-1000-0000-00003aeefad8",
                "Kafka Communications Timeout": "30 secs",
                "ZooKeeper Communications Timeout": "30 secs",
                "Auto Offset Reset": "largest",
                "zookeeper.connection.timeout.ms": "15000",
                "zookeeper.session.timeout.ms": "15000"
              },
              "descriptors": {
                "ZooKeeper Connection String": {
                  "name": "ZooKeeper Connection String",
                  "displayName": "ZooKeeper Connection String",
                  "description": "The Connection String to use in order to connect to ZooKeeper. This is often a comma-separated list of <host>:<port> combinations. For example, host1:2181,host2:2181,host3:2188",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Topic Name": {
                  "name": "Topic Name",
                  "displayName": "Topic Name",
                  "description": "The Kafka Topic to pull messages from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Zookeeper Commit Frequency": {
                  "name": "Zookeeper Commit Frequency",
                  "displayName": "Zookeeper Commit Frequency",
                  "description": "Specifies how often to communicate with ZooKeeper to indicate which messages have been pulled. A longer time period will result in better overall performance but can result in more data duplication if a NiFi node is lost",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "Specifies the maximum number of messages to combine into a single FlowFile. These messages will be concatenated together with the <Message Demarcator> string placed between the content of each message. If the messages from Kafka should not be concatenated together, leave this value at 1.",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Message Demarcator": {
                  "name": "Message Demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the characters to use in order to demarcate multiple messages from Kafka. If the <Batch Size> property is set to 1, this value is ignored. Otherwise, for each two subsequent messages in the batch, this value will be placed in between them.",
                  "defaultValue": "\\n",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Client Name": {
                  "name": "Client Name",
                  "displayName": "Client Name",
                  "description": "Client Name to use when communicating with Kafka",
                  "defaultValue": "NiFi-ed6d32bc-10a9-1604-b75a-c2997861ef03",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Group ID": {
                  "name": "Group ID",
                  "displayName": "Group ID",
                  "description": "A Group ID is used to identify consumers that are within the same consumer group",
                  "defaultValue": "ed6d32bc-10a9-1604-b75a-c2997861ef03",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kafka Communications Timeout": {
                  "name": "Kafka Communications Timeout",
                  "displayName": "Kafka Communications Timeout",
                  "description": "The amount of time to wait for a response from Kafka before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "ZooKeeper Communications Timeout": {
                  "name": "ZooKeeper Communications Timeout",
                  "displayName": "ZooKeeper Communications Timeout",
                  "description": "The amount of time to wait for a response from ZooKeeper before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Auto Offset Reset": {
                  "name": "Auto Offset Reset",
                  "displayName": "Auto Offset Reset",
                  "description": "Automatically reset the offset to the smallest or largest offset available on the broker",
                  "defaultValue": "largest",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "smallest",
                        "value": "smallest"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "largest",
                        "value": "largest"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "zookeeper.connection.timeout.ms": {
                  "name": "zookeeper.connection.timeout.ms",
                  "displayName": "zookeeper.connection.timeout.ms",
                  "description": "Specifies the value for 'zookeeper.connection.timeout.ms' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "zookeeper.session.timeout.ms": {
                  "name": "zookeeper.session.timeout.ms",
                  "displayName": "zookeeper.session.timeout.ms",
                  "description": "Specifies the value for 'zookeeper.session.timeout.ms' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "300 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 2000,
              "concurrentlySchedulableTaskCount": 32,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "ed6d32bc-10a9-1604-b75a-c2997861ef03",
            "name": "GetXGAnalyticsKafka - staging venona_error",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "ed6d32bc-10a9-1604-b75a-c2997861ef03",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetXGAnalyticsKafka - staging venona_error",
              "type": "GetKafka",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 107463,
              "tasksDurationNanos": 192551358066,
              "tasks": "107,463",
              "tasksDuration": "00:03:12.551",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "aeff4253-2604-1e1f-60bd-8d385f539e16",
            "version": 26
          },
          "id": "692034ae-0832-182e-bcd0-43fc060d09dd",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/692034ae-0832-182e-bcd0-43fc060d09dd",
          "position": {
            "x": 1183.9322013806254,
            "y": 1190.1342039150454
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "692034ae-0832-182e-bcd0-43fc060d09dd",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 1183.9322013806254,
              "y": 1190.1342039150454
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/video_messages_D3DA2AF2671B84F37F9E0F83A73EB1DC/partition_date=${now():plus(21600000):format('yyyy-MM-dd')}/partition_hour=${now():plus(21600000):format('HH')}",
                "Conflict Resolution Strategy": "fail",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "1 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "692034ae-0832-182e-bcd0-43fc060d09dd",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "692034ae-0832-182e-bcd0-43fc060d09dd",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "aeff4253-2604-1e1f-60bd-8d385f539e16",
            "version": 11
          },
          "id": "caed33ae-4565-1b3f-bbf5-0c922d9e7f18",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/caed33ae-4565-1b3f-bbf5-0c922d9e7f18",
          "position": {
            "x": 5047.127635505386,
            "y": 1181.2595302268387
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "caed33ae-4565-1b3f-bbf5-0c922d9e7f18",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 5047.127635505386,
              "y": 1181.2595302268387
            },
            "name": "PutHDFS",
            "type": "org.apache.nifi.processors.hadoop.PutHDFS",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "failure",
                "description": "Files that could not be written to HDFS for some reason are transferred to this relationship",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Files that have been successfully written to HDFS are transferred to this relationship",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Hadoop Configuration Resources": "/usr/hdp/current/hadoop-client/conf/core-site.xml,/usr/hdp/current/hadoop-client/conf/hdfs-site.xml",
                "Kerberos Principal": "svc-dm-nifi@HADOOP.CHARTER.COM",
                "Kerberos Keytab": "/usr/hdf/2.0.1.0-12/nifi/nifi.keytab",
                "Kerberos Relogin Period": "4 hours",
                "Additional Classpath Resources": null,
                "Directory": "/incoming/venona/staging_unfinished/partition_date=${now():plus(21600000):format('yyyy-MM-dd')}/partition_hour=${now():plus(21600000):format('HH')}",
                "Conflict Resolution Strategy": "fail",
                "Block Size": null,
                "IO Buffer Size": null,
                "Replication": null,
                "Permissions umask": "0002",
                "Remote Owner": null,
                "Remote Group": "ingest",
                "Compression codec": "NONE"
              },
              "descriptors": {
                "Hadoop Configuration Resources": {
                  "name": "Hadoop Configuration Resources",
                  "displayName": "Hadoop Configuration Resources",
                  "description": "A file or comma separated list of files which contains the Hadoop file system configuration. Without this, Hadoop will search the classpath for a 'core-site.xml' and 'hdfs-site.xml' file or will revert to a default configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Principal": {
                  "name": "Kerberos Principal",
                  "displayName": "Kerberos Principal",
                  "description": "Kerberos principal to authenticate as. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Keytab": {
                  "name": "Kerberos Keytab",
                  "displayName": "Kerberos Keytab",
                  "description": "Kerberos keytab associated with the principal. Requires nifi.kerberos.krb5.file to be set in your nifi.properties",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kerberos Relogin Period": {
                  "name": "Kerberos Relogin Period",
                  "displayName": "Kerberos Relogin Period",
                  "description": "Period of time which should pass before attempting a kerberos relogin",
                  "defaultValue": "4 hours",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Additional Classpath Resources": {
                  "name": "Additional Classpath Resources",
                  "displayName": "Additional Classpath Resources",
                  "description": "A comma-separated list of paths to files and/or directories that will be added to the classpath. When specifying a directory, all files with in the directory will be added to the classpath, but further sub-directories will not be included.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Directory": {
                  "name": "Directory",
                  "displayName": "Directory",
                  "description": "The parent HDFS directory to which files should be written",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Conflict Resolution Strategy": {
                  "name": "Conflict Resolution Strategy",
                  "displayName": "Conflict Resolution Strategy",
                  "description": "Indicates what should happen when a file with the same name already exists in the output directory",
                  "defaultValue": "fail",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "replace",
                        "value": "replace",
                        "description": "Replaces the existing file if any."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ignore",
                        "value": "ignore",
                        "description": "Ignores the flow file and routes it to success."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "fail",
                        "value": "fail",
                        "description": "Penalizes the flow file and routes it to failure."
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "append",
                        "value": "append",
                        "description": "Appends to the existing file if any, creates a new file otherwise."
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Block Size": {
                  "name": "Block Size",
                  "displayName": "Block Size",
                  "description": "Size of each block as written to HDFS. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "IO Buffer Size": {
                  "name": "IO Buffer Size",
                  "displayName": "IO Buffer Size",
                  "description": "Amount of memory to use to buffer file contents during IO. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Replication": {
                  "name": "Replication",
                  "displayName": "Replication",
                  "description": "Number of times that HDFS will replicate each file. This overrides the Hadoop Configuration",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Permissions umask": {
                  "name": "Permissions umask",
                  "displayName": "Permissions umask",
                  "description": "A umask represented as an octal number which determines the permissions of files written to HDFS. This overrides the Hadoop Configuration dfs.umaskmode",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Owner": {
                  "name": "Remote Owner",
                  "displayName": "Remote Owner",
                  "description": "Changes the owner of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change owner",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Group": {
                  "name": "Remote Group",
                  "displayName": "Remote Group",
                  "description": "Changes the group of the HDFS file to this value after it is written. This only works if NiFi is running as a user that has HDFS super user privilege to change group",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Compression codec": {
                  "name": "Compression codec",
                  "displayName": "Compression codec",
                  "description": "",
                  "defaultValue": "NONE",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFAULT",
                        "value": "DEFAULT"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "BZIP",
                        "value": "BZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "GZIP",
                        "value": "GZIP"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZ4",
                        "value": "LZ4"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "AUTOMATIC",
                        "value": "AUTOMATIC"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "caed33ae-4565-1b3f-bbf5-0c922d9e7f18",
            "name": "PutHDFS",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "caed33ae-4565-1b3f-bbf5-0c922d9e7f18",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "type": "PutHDFS",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 17
          },
          "id": "c6583cb9-460c-1435-86df-de1b499a6eec",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/c6583cb9-460c-1435-86df-de1b499a6eec",
          "position": {
            "x": 1183.029003684724,
            "y": 530.7947980991139
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "c6583cb9-460c-1435-86df-de1b499a6eec",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 1183.029003684724,
              "y": 530.7947980991139
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "video_unfinished_${UUID()}.avro"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "c6583cb9-460c-1435-86df-de1b499a6eec",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "c6583cb9-460c-1435-86df-de1b499a6eec",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "68eb5681-015a-1000-8dd3-d254d78d3f3b",
            "version": 110
          },
          "id": "48d031c4-015a-1000-99d5-5b02a18a5039",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/48d031c4-015a-1000-99d5-5b02a18a5039",
          "position": {
            "x": 8234.224516333346,
            "y": 465.30124938565274
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48d031c4-015a-1000-99d5-5b02a18a5039",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8234.224516333346,
              "y": 465.30124938565274
            },
            "name": "ListS3",
            "type": "org.apache.nifi.processors.aws.s3.ListS3",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "FlowFiles are routed to success relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": false,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": true,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "Bucket": "pigateway",
                "Region": "us-west-2",
                "Access Key": "********",
                "Secret Key": "********",
                "Credentials File": null,
                "AWS Credentials Provider service": null,
                "Communications Timeout": "30 secs",
                "SSL Context Service": null,
                "Endpoint Override URL": "https://s3.amazonaws.com/",
                "Signer Override": "Default Signature",
                "Proxy Host": null,
                "Proxy Host Port": null,
                "delimiter": null,
                "prefix": null,
                "use-versions": "false"
              },
              "descriptors": {
                "Bucket": {
                  "name": "Bucket",
                  "displayName": "Bucket",
                  "description": "",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Region": {
                  "name": "Region",
                  "displayName": "Region",
                  "description": "",
                  "defaultValue": "us-west-2",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "us-gov-west-1",
                        "value": "us-gov-west-1",
                        "description": "us-gov-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-east-1",
                        "value": "us-east-1",
                        "description": "us-east-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-west-1",
                        "value": "us-west-1",
                        "description": "us-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "us-west-2",
                        "value": "us-west-2",
                        "description": "us-west-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "eu-west-1",
                        "value": "eu-west-1",
                        "description": "eu-west-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "eu-central-1",
                        "value": "eu-central-1",
                        "description": "eu-central-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-southeast-1",
                        "value": "ap-southeast-1",
                        "description": "ap-southeast-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-southeast-2",
                        "value": "ap-southeast-2",
                        "description": "ap-southeast-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-northeast-1",
                        "value": "ap-northeast-1",
                        "description": "ap-northeast-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "ap-northeast-2",
                        "value": "ap-northeast-2",
                        "description": "ap-northeast-2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "sa-east-1",
                        "value": "sa-east-1",
                        "description": "sa-east-1"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "cn-north-1",
                        "value": "cn-north-1",
                        "description": "cn-north-1"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Access Key": {
                  "name": "Access Key",
                  "displayName": "Access Key",
                  "description": "",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Secret Key": {
                  "name": "Secret Key",
                  "displayName": "Secret Key",
                  "description": "",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Credentials File": {
                  "name": "Credentials File",
                  "displayName": "Credentials File",
                  "description": "Path to a file containing AWS access key and secret key in properties file format.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "AWS Credentials Provider service": {
                  "name": "AWS Credentials Provider service",
                  "displayName": "AWS Credentials Provider service",
                  "description": "The Controller Service that is used to obtain aws credentials provider",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.processors.aws.credentials.provider.service.AWSCredentialsProviderService"
                },
                "Communications Timeout": {
                  "name": "Communications Timeout",
                  "displayName": "Communications Timeout",
                  "description": "",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "SSL Context Service": {
                  "name": "SSL Context Service",
                  "displayName": "SSL Context Service",
                  "description": "Specifies an optional SSL Context Service that, if provided, will be used to create connections",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.ssl.SSLContextService"
                },
                "Endpoint Override URL": {
                  "name": "Endpoint Override URL",
                  "displayName": "Endpoint Override URL",
                  "description": "Endpoint URL to use instead of the AWS default including scheme, host, port, and path. The AWS libraries select an endpoint URL based on the AWS region, but this property overrides the selected endpoint URL, allowing use with other S3-compatible endpoints.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Signer Override": {
                  "name": "Signer Override",
                  "displayName": "Signer Override",
                  "description": "The AWS libraries use the default signer but this property allows you to specify a custom signer to support older S3-compatible services.",
                  "defaultValue": "Default Signature",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Default Signature",
                        "value": "Default Signature"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Signature v4",
                        "value": "AWSS3V4SignerType"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Signature v2",
                        "value": "S3SignerType"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Proxy Host": {
                  "name": "Proxy Host",
                  "displayName": "Proxy Host",
                  "description": "Proxy host name or IP",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Proxy Host Port": {
                  "name": "Proxy Host Port",
                  "displayName": "Proxy Host Port",
                  "description": "Proxy host port",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "delimiter": {
                  "name": "delimiter",
                  "displayName": "Delimiter",
                  "description": "The string used to delimit directories within the bucket. Please consult the AWS documentation for the correct use of this field.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "prefix": {
                  "name": "prefix",
                  "displayName": "Prefix",
                  "description": "The prefix used to filter the object list. In most cases, it should end with a forward slash ('/').",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "use-versions": {
                  "name": "use-versions",
                  "displayName": "Use Versions",
                  "description": "Specifies whether to use S3 versions, if applicable.  If false, only the latest version of each object will be returned.",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "48d031c4-015a-1000-99d5-5b02a18a5039",
            "name": "ListS3",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "48d031c4-015a-1000-99d5-5b02a18a5039",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListS3",
              "type": "ListS3",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 846,
              "tasksDurationNanos": 50460345999,
              "tasks": "846",
              "tasksDuration": "00:00:50.460",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "17463bca-2db1-128f-a2ee-c40e003a403a",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/17463bca-2db1-128f-a2ee-c40e003a403a",
          "position": {
            "x": 5049.47890663005,
            "y": 743.1632663788691
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "17463bca-2db1-128f-a2ee-c40e003a403a",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 5049.47890663005,
              "y": 743.1632663788691
            },
            "name": "ExtractAvroMetadata",
            "type": "org.apache.nifi.processors.avro.ExtractAvroMetadata",
            "state": "RUNNING",
            "style": {
              "background-color": "#ffffff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "A FlowFile is routed to this relationship if it cannot be parsed as Avro or metadata cannot be extracted for any reason",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "A FlowFile is routed to this relationship after metadata has been extracted.",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Fingerprint Algorithm": "CRC-64-AVRO",
                "Metadata Keys": "avro.schema",
                "Count Items": "false"
              },
              "descriptors": {
                "Fingerprint Algorithm": {
                  "name": "Fingerprint Algorithm",
                  "displayName": "Fingerprint Algorithm",
                  "description": "The algorithm used to generate the schema fingerprint. Available choices are based on the Avro recommended practices for fingerprint generation.",
                  "defaultValue": "CRC-64-AVRO",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "CRC-64-AVRO",
                        "value": "CRC-64-AVRO"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "MD5",
                        "value": "MD5"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SHA-256",
                        "value": "SHA-256"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Metadata Keys": {
                  "name": "Metadata Keys",
                  "displayName": "Metadata Keys",
                  "description": "A comma-separated list of keys indicating key/value pairs to extract from the Avro file header. The key 'avro.schema' can be used to extract the full schema in JSON format, and 'avro.codec' can be used to extract the codec name if one exists.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Count Items": {
                  "name": "Count Items",
                  "displayName": "Count Items",
                  "description": "If true the number of items in the datafile will be counted and stored in a FlowFile attribute 'item.count'. The counting is done by reading blocks and getting the number of items for each block, thus avoiding de-serializing. The items being counted will be the top-level items in the datafile. For example, with a schema of type record the items will be the records, and for a schema of type Array the items will be the arrays (not the number of entries in each array).",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "17463bca-2db1-128f-a2ee-c40e003a403a",
            "name": "ExtractAvroMetadata",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "17463bca-2db1-128f-a2ee-c40e003a403a",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "type": "ExtractAvroMetadata",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 2
          },
          "id": "94d8103f-100a-115a-9d9f-6ce60a417418",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/94d8103f-100a-115a-9d9f-6ce60a417418",
          "position": {
            "x": 9569.689254672934,
            "y": 1075.2796895130753
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "94d8103f-100a-115a-9d9f-6ce60a417418",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 9569.689254672934,
              "y": 1075.2796895130753
            },
            "name": "ExecuteStreamCommand",
            "type": "org.apache.nifi.processors.standard.ExecuteStreamCommand",
            "state": "STOPPED",
            "style": {},
            "relationships": [
              {
                "name": "original",
                "description": "FlowFiles that were successfully processed",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": true,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Command Arguments": "\"/Users/p2345716/dev/s3-encryptor/s3-encryptor/decryptor.py\";\"-f${datafile}\";\"-k/Users/p2345716/nifi/.ssh/gpg_passphrase.key\";\"-mGPG\"",
                "Command Path": "python",
                "Ignore STDIN": "false",
                "Working Directory": null,
                "Argument Delimiter": ";",
                "Output Destination Attribute": "output",
                "Max Attribute Length": "256"
              },
              "descriptors": {
                "Command Arguments": {
                  "name": "Command Arguments",
                  "displayName": "Command Arguments",
                  "description": "The arguments to supply to the executable delimited by the ';' character.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Command Path": {
                  "name": "Command Path",
                  "displayName": "Command Path",
                  "description": "Specifies the command to be executed; if just the name of an executable is provided, it must be in the user's environment PATH.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Ignore STDIN": {
                  "name": "Ignore STDIN",
                  "displayName": "Ignore STDIN",
                  "description": "If true, the contents of the incoming flowfile will not be passed to the executing command",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Working Directory": {
                  "name": "Working Directory",
                  "displayName": "Working Directory",
                  "description": "The directory to use as the current working directory when executing the command",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Argument Delimiter": {
                  "name": "Argument Delimiter",
                  "displayName": "Argument Delimiter",
                  "description": "Delimiter to use to separate arguments for a command [default: ;]. Must be a single character",
                  "defaultValue": ";",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Output Destination Attribute": {
                  "name": "Output Destination Attribute",
                  "displayName": "Output Destination Attribute",
                  "description": "If set, the output of the stream command will be put into an attribute of the original FlowFile instead of a separate FlowFile. There will no longer be a relationship for 'output stream'. The value of this property will be the key for the output attribute.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Max Attribute Length": {
                  "name": "Max Attribute Length",
                  "displayName": "Max Attribute Length",
                  "description": "If routing the output of the stream command to an attribute, the number of characters put to the attribute value will be at most this amount. This is important because attributes are held in memory and large attributes will quickly cause out of memory issues. If the output goes longer than this value, it will truncated to fit. Consider making this smaller if able.",
                  "defaultValue": "256",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "94d8103f-100a-115a-9d9f-6ce60a417418",
            "name": "ExecuteStreamCommand",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "94d8103f-100a-115a-9d9f-6ce60a417418",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExecuteStreamCommand",
              "type": "ExecuteStreamCommand",
              "runStatus": "Stopped",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 12
          },
          "id": "3b6d3a7e-d17c-15a0-ac8c-4c876d626594",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/3b6d3a7e-d17c-15a0-ac8c-4c876d626594",
          "position": {
            "x": 9054.225700802228,
            "y": 2126.1018264211925
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "3b6d3a7e-d17c-15a0-ac8c-4c876d626594",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 9054.225700802228,
              "y": 2126.1018264211925
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "filename": "${filename:substringAfterLast('/')}",
                "hdfs-table-name": "PiGwOauthTokens"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "filename": {
                  "name": "filename",
                  "displayName": "filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "hdfs-table-name": {
                  "name": "hdfs-table-name",
                  "displayName": "hdfs-table-name",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "3b6d3a7e-d17c-15a0-ac8c-4c876d626594",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "3b6d3a7e-d17c-15a0-ac8c-4c876d626594",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "version": 0
          },
          "id": "3ab630fb-5118-15d4-9cd4-43ac42e0c9ad",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/3ab630fb-5118-15d4-9cd4-43ac42e0c9ad",
          "position": {
            "x": 3731.640647580435,
            "y": 34.993962536752974
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "3ab630fb-5118-15d4-9cd4-43ac42e0c9ad",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 3731.640647580435,
              "y": 34.993962536752974
            },
            "name": "ListSFTP charcomw@tms:/On2/",
            "type": "org.apache.nifi.processors.standard.ListSFTP",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are received are routed to success",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": false,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": true,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "Hostname": "on.tmstv.com",
                "Port": "22",
                "Username": "twinvid",
                "Password": "********",
                "Private Key Path": null,
                "Private Key Passphrase": null,
                "Remote Path": "/On2/",
                "Distributed Cache Service": null,
                "Search Recursively": "false",
                "File Filter Regex": ".*on_(tv|mov)_(programs|schedules|sources)_v22-(up|db)_.*\\.xml\\.gz",
                "Path Filter Regex": null,
                "Ignore Dotted Files": "true",
                "Strict Host Key Checking": "false",
                "Host Key File": null,
                "Connection Timeout": "30 sec",
                "Data Timeout": "30 sec",
                "Send Keep Alive On Timeout": "true"
              },
              "descriptors": {
                "Hostname": {
                  "name": "Hostname",
                  "displayName": "Hostname",
                  "description": "The fully qualified hostname or IP address of the remote system",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Port": {
                  "name": "Port",
                  "displayName": "Port",
                  "description": "The port to connect to on the remote host to fetch the data from",
                  "defaultValue": "22",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Username": {
                  "name": "Username",
                  "displayName": "Username",
                  "description": "Username",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Password": {
                  "name": "Password",
                  "displayName": "Password",
                  "description": "Password for the user account",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Path": {
                  "name": "Private Key Path",
                  "displayName": "Private Key Path",
                  "description": "The fully qualified path to the Private Key file",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Private Key Passphrase": {
                  "name": "Private Key Passphrase",
                  "displayName": "Private Key Passphrase",
                  "description": "Password for the private key",
                  "required": false,
                  "sensitive": true,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Remote Path": {
                  "name": "Remote Path",
                  "displayName": "Remote Path",
                  "description": "The path on the remote system from which to pull or push files",
                  "defaultValue": ".",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Distributed Cache Service": {
                  "name": "Distributed Cache Service",
                  "displayName": "Distributed Cache Service",
                  "description": "Specifies the Controller Service that should be used to maintain state about what has been pulled from the remote server so that if a new node begins pulling data, it won't duplicate all of the work that has been done. If not specified, the information will not be shared across the cluster. This property does not need to be set for standalone instances of NiFi but should be configured if NiFi is run within a cluster.",
                  "allowableValues": [],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false,
                  "identifiesControllerService": "org.apache.nifi.distributed.cache.client.DistributedMapCacheClient"
                },
                "Search Recursively": {
                  "name": "Search Recursively",
                  "displayName": "Search Recursively",
                  "description": "If true, will pull files from arbitrarily nested subdirectories; otherwise, will not traverse subdirectories",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "File Filter Regex": {
                  "name": "File Filter Regex",
                  "displayName": "File Filter Regex",
                  "description": "Provides a Java Regular Expression for filtering Filenames; if a filter is supplied, only files whose names match that Regular Expression will be fetched",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Path Filter Regex": {
                  "name": "Path Filter Regex",
                  "displayName": "Path Filter Regex",
                  "description": "When Search Recursively is true, then only subdirectories whose path matches the given Regular Expression will be scanned",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Ignore Dotted Files": {
                  "name": "Ignore Dotted Files",
                  "displayName": "Ignore Dotted Files",
                  "description": "If true, files whose names begin with a dot (\".\") will be ignored",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Strict Host Key Checking": {
                  "name": "Strict Host Key Checking",
                  "displayName": "Strict Host Key Checking",
                  "description": "Indicates whether or not strict enforcement of hosts keys should be applied",
                  "defaultValue": "false",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Host Key File": {
                  "name": "Host Key File",
                  "displayName": "Host Key File",
                  "description": "If supplied, the given file will be used as the Host Key; otherwise, no use host key file will be used",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Connection Timeout": {
                  "name": "Connection Timeout",
                  "displayName": "Connection Timeout",
                  "description": "Amount of time to wait before timing out while creating a connection",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Data Timeout": {
                  "name": "Data Timeout",
                  "displayName": "Data Timeout",
                  "description": "When transferring a file between the local and remote system, this value specifies how long is allowed to elapse without any data being transferred between systems",
                  "defaultValue": "30 sec",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Send Keep Alive On Timeout": {
                  "name": "Send Keep Alive On Timeout",
                  "displayName": "Send Keep Alive On Timeout",
                  "description": "Indicates whether or not to send a single Keep Alive message when SSH socket times out",
                  "defaultValue": "true",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "true",
                        "value": "true"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "false",
                        "value": "false"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "3600 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "PRIMARY",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "3ab630fb-5118-15d4-9cd4-43ac42e0c9ad",
            "name": "ListSFTP charcomw@tms:/On2/",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "3ab630fb-5118-15d4-9cd4-43ac42e0c9ad",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListSFTP charcomw@tms:/On2/",
              "type": "ListSFTP",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 21
          },
          "id": "fb540221-0159-1000-b6b3-c6abf480f99f",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/fb540221-0159-1000-b6b3-c6abf480f99f",
          "position": {
            "x": 8851.778358883283,
            "y": 463.35246729033275
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "fb540221-0159-1000-b6b3-c6abf480f99f",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8851.778358883283,
              "y": 463.35246729033275
            },
            "name": "UpdateAttribute",
            "type": "org.apache.nifi.processors.attributes.UpdateAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Delete Attributes Expression": null,
                "original-filename": "${basename:substringBeforeLast('.')}",
                "s3-downloads-dir": "/data/nifi/s3_decryption_downloads/s3_encrypted_input",
                "s3-finished-dir": "/data/nifi/s3_decryption_downloads/s3_decrypted_output",
                "s3key": "${filename:substringAfterLast('/')}"
              },
              "descriptors": {
                "Delete Attributes Expression": {
                  "name": "Delete Attributes Expression",
                  "displayName": "Delete Attributes Expression",
                  "description": "Regular expression for attributes to be deleted from flowfiles.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "original-filename": {
                  "name": "original-filename",
                  "displayName": "original-filename",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "s3-downloads-dir": {
                  "name": "s3-downloads-dir",
                  "displayName": "s3-downloads-dir",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "s3-finished-dir": {
                  "name": "s3-finished-dir",
                  "displayName": "s3-finished-dir",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "s3key": {
                  "name": "s3key",
                  "displayName": "s3key",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "customUiUrl": "/nifi-update-attribute-ui-1.1.0.2.1.1.0-2/configure",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "fb540221-0159-1000-b6b3-c6abf480f99f",
            "name": "UpdateAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "fb540221-0159-1000-b6b3-c6abf480f99f",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "type": "UpdateAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "25594ed2-db90-108c-7f79-f7eae8cc229f",
            "version": 37
          },
          "id": "cc5831b2-e208-1b25-9b2f-8496302ea60b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/cc5831b2-e208-1b25-9b2f-8496302ea60b",
          "position": {
            "x": -33.28493942918249,
            "y": 58.11299323222579
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "cc5831b2-e208-1b25-9b2f-8496302ea60b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": -33.28493942918249,
              "y": 58.11299323222579
            },
            "name": "GetKafka - venona_unfinished_messages_avro_516904A9518C654DB9BF3FF7E35E1E6A",
            "type": "org.apache.nifi.processors.kafka.GetKafka",
            "state": "RUNNING",
            "style": {
              "background-color": "#a600ff"
            },
            "relationships": [
              {
                "name": "success",
                "description": "All FlowFiles that are created are routed to this relationship",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_FORBIDDEN",
            "config": {
              "properties": {
                "ZooKeeper Connection String": "zk2-internal.dp.aws.charter.com:2181,zk3-internal.dp.aws.charter.com:2181,zk3-internal.dp.aws.charter.com:2181",
                "Topic Name": "venona_unfinished_messages_avro_516904A9518C654DB9BF3FF7E35E1E6A",
                "Zookeeper Commit Frequency": "60 secs",
                "Batch Size": "1",
                "Message Demarcator": "\\n",
                "Client Name": "NiFi-f4b3e296-0158-1000-0000-00003aeefad8",
                "Group ID": "cc5831b2-e208-1b25-9b2f-8496302ea60b",
                "Kafka Communications Timeout": "30 secs",
                "ZooKeeper Communications Timeout": "30 secs",
                "Auto Offset Reset": "smallest",
                "fetch.message.max.bytes": "20971520",
                "fetch.min.bytes": "10485760",
                "num.consumer.fetchers": "2",
                "queued.max.message.chunks": "5",
                "socket.receive.buffer.bytes": "1048576"
              },
              "descriptors": {
                "ZooKeeper Connection String": {
                  "name": "ZooKeeper Connection String",
                  "displayName": "ZooKeeper Connection String",
                  "description": "The Connection String to use in order to connect to ZooKeeper. This is often a comma-separated list of <host>:<port> combinations. For example, host1:2181,host2:2181,host3:2188",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Topic Name": {
                  "name": "Topic Name",
                  "displayName": "Topic Name",
                  "description": "The Kafka Topic to pull messages from",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Zookeeper Commit Frequency": {
                  "name": "Zookeeper Commit Frequency",
                  "displayName": "Zookeeper Commit Frequency",
                  "description": "Specifies how often to communicate with ZooKeeper to indicate which messages have been pulled. A longer time period will result in better overall performance but can result in more data duplication if a NiFi node is lost",
                  "defaultValue": "60 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Batch Size": {
                  "name": "Batch Size",
                  "displayName": "Batch Size",
                  "description": "Specifies the maximum number of messages to combine into a single FlowFile. These messages will be concatenated together with the <Message Demarcator> string placed between the content of each message. If the messages from Kafka should not be concatenated together, leave this value at 1.",
                  "defaultValue": "1",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Message Demarcator": {
                  "name": "Message Demarcator",
                  "displayName": "Message Demarcator",
                  "description": "Specifies the characters to use in order to demarcate multiple messages from Kafka. If the <Batch Size> property is set to 1, this value is ignored. Otherwise, for each two subsequent messages in the batch, this value will be placed in between them.",
                  "defaultValue": "\\n",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Client Name": {
                  "name": "Client Name",
                  "displayName": "Client Name",
                  "description": "Client Name to use when communicating with Kafka",
                  "defaultValue": "NiFi-cc5831b2-e208-1b25-9b2f-8496302ea60b",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Group ID": {
                  "name": "Group ID",
                  "displayName": "Group ID",
                  "description": "A Group ID is used to identify consumers that are within the same consumer group",
                  "defaultValue": "cc5831b2-e208-1b25-9b2f-8496302ea60b",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Kafka Communications Timeout": {
                  "name": "Kafka Communications Timeout",
                  "displayName": "Kafka Communications Timeout",
                  "description": "The amount of time to wait for a response from Kafka before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "ZooKeeper Communications Timeout": {
                  "name": "ZooKeeper Communications Timeout",
                  "displayName": "ZooKeeper Communications Timeout",
                  "description": "The amount of time to wait for a response from ZooKeeper before determining that there is a communications error",
                  "defaultValue": "30 secs",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "Auto Offset Reset": {
                  "name": "Auto Offset Reset",
                  "displayName": "Auto Offset Reset",
                  "description": "Automatically reset the offset to the smallest or largest offset available on the broker",
                  "defaultValue": "largest",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "smallest",
                        "value": "smallest"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "largest",
                        "value": "largest"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "fetch.message.max.bytes": {
                  "name": "fetch.message.max.bytes",
                  "displayName": "fetch.message.max.bytes",
                  "description": "Specifies the value for 'fetch.message.max.bytes' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "fetch.min.bytes": {
                  "name": "fetch.min.bytes",
                  "displayName": "fetch.min.bytes",
                  "description": "Specifies the value for 'fetch.min.bytes' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "num.consumer.fetchers": {
                  "name": "num.consumer.fetchers",
                  "displayName": "num.consumer.fetchers",
                  "description": "Specifies the value for 'num.consumer.fetchers' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "queued.max.message.chunks": {
                  "name": "queued.max.message.chunks",
                  "displayName": "queued.max.message.chunks",
                  "description": "Specifies the value for 'queued.max.message.chunks' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                },
                "socket.receive.buffer.bytes": {
                  "name": "socket.receive.buffer.bytes",
                  "displayName": "socket.receive.buffer.bytes",
                  "description": "Specifies the value for 'socket.receive.buffer.bytes' Kafka Configuration.",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "3600 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 2000,
              "concurrentlySchedulableTaskCount": 32,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_FORBIDDEN",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "cc5831b2-e208-1b25-9b2f-8496302ea60b",
            "name": "GetKafka - venona_unfinished_messages_avro_516904A9518C654DB9BF3FF7E35E1E6A",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "cc5831b2-e208-1b25-9b2f-8496302ea60b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka - venona_unfinished_messages_avro_516904A9518C654DB9BF3FF7E35E1E6A",
              "type": "GetKafka",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 9
          },
          "id": "0a3839dd-2d93-184d-9c6c-81cfd9123f84",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/0a3839dd-2d93-184d-9c6c-81cfd9123f84",
          "position": {
            "x": 4647.171763539543,
            "y": 970.9131145361973
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "0a3839dd-2d93-184d-9c6c-81cfd9123f84",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 4647.171763539543,
              "y": 970.9131145361973
            },
            "name": "ConvertAvroSchema",
            "type": "org.apache.nifi.processors.kite.ConvertAvroSchema",
            "state": "RUNNING",
            "style": {
              "background-color": "#ffffff"
            },
            "relationships": [
              {
                "name": "failure",
                "description": "Avro content that failed to convert",
                "autoTerminate": true
              },
              {
                "name": "success",
                "description": "Avro content that converted successfully",
                "autoTerminate": false
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": false,
            "supportsBatching": false,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Input Schema": "${avro.schema}",
                "Output Schema": "${avro.schema}",
                "Locale": "default",
                "kite-compression-type": "DEFLATE"
              },
              "descriptors": {
                "Input Schema": {
                  "name": "Input Schema",
                  "displayName": "Input Schema",
                  "description": "Avro Schema of Input Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Output Schema": {
                  "name": "Output Schema",
                  "displayName": "Output Schema",
                  "description": "Avro Schema of Output Flowfiles.  This can be a URI (dataset, view, or resource) or literal JSON schema.",
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": true
                },
                "Locale": {
                  "name": "Locale",
                  "displayName": "Locale",
                  "description": "Locale to use for scanning data (see https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html)or \" default\" for JVM default",
                  "defaultValue": "default",
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "kite-compression-type": {
                  "name": "kite-compression-type",
                  "displayName": "Compression type",
                  "description": "Compression type to use when writting Avro files. Default is Snappy.",
                  "defaultValue": "SNAPPY",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "BZIP2",
                        "value": "BZIP2"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "DEFLATE",
                        "value": "DEFLATE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "NONE",
                        "value": "NONE"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "SNAPPY",
                        "value": "SNAPPY"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "LZO",
                        "value": "LZO"
                      },
                      "canRead": true
                    }
                  ],
                  "required": false,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 3,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "0a3839dd-2d93-184d-9c6c-81cfd9123f84",
            "name": "ConvertAvroSchema",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "0a3839dd-2d93-184d-9c6c-81cfd9123f84",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "type": "ConvertAvroSchema",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 9
          },
          "id": "ffef35e5-0159-1000-a07b-fd36f3725aae",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/processors/ffef35e5-0159-1000-a07b-fd36f3725aae",
          "position": {
            "x": 8853.143811532305,
            "y": 1082.422949286479
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "ffef35e5-0159-1000-a07b-fd36f3725aae",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8853.143811532305,
              "y": 1082.422949286479
            },
            "name": "RouteOnAttribute",
            "type": "org.apache.nifi.processors.standard.RouteOnAttribute",
            "state": "RUNNING",
            "style": {},
            "relationships": [
              {
                "name": "datafile",
                "description": "",
                "autoTerminate": false
              },
              {
                "name": "keyfile",
                "description": "",
                "autoTerminate": false
              },
              {
                "name": "unmatched",
                "description": "FlowFiles that do not match any user-define expression will be routed here",
                "autoTerminate": true
              }
            ],
            "supportsParallelProcessing": true,
            "supportsEventDriven": true,
            "supportsBatching": true,
            "persistsState": false,
            "restricted": false,
            "inputRequirement": "INPUT_REQUIRED",
            "config": {
              "properties": {
                "Routing Strategy": "Route to Property name",
                "datafile": "${filename:endsWith('.enc')}",
                "keyfile": "${filename:endsWith('.key')}"
              },
              "descriptors": {
                "Routing Strategy": {
                  "name": "Routing Strategy",
                  "displayName": "Routing Strategy",
                  "description": "Specifies how to determine which relationship to use when evaluating the Expression Language",
                  "defaultValue": "Route to Property name",
                  "allowableValues": [
                    {
                      "allowableValue": {
                        "displayName": "Route to Property name",
                        "value": "Route to Property name",
                        "description": "A copy of the FlowFile will be routed to each relationship whose corresponding expression evaluates to 'true'"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Route to 'matched' if all match",
                        "value": "Route to 'match' if all match",
                        "description": "Requires that all user-defined expressions evaluate to 'true' for the FlowFile to be considered a match"
                      },
                      "canRead": true
                    },
                    {
                      "allowableValue": {
                        "displayName": "Route to 'matched' if any matches",
                        "value": "Route to 'match' if any matches",
                        "description": "Requires that at least one user-defined expression evaluate to 'true' for the FlowFile to be considered a match"
                      },
                      "canRead": true
                    }
                  ],
                  "required": true,
                  "sensitive": false,
                  "dynamic": false,
                  "supportsEl": false
                },
                "datafile": {
                  "name": "datafile",
                  "displayName": "datafile",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                },
                "keyfile": {
                  "name": "keyfile",
                  "displayName": "keyfile",
                  "description": "",
                  "required": false,
                  "sensitive": false,
                  "dynamic": true,
                  "supportsEl": true
                }
              },
              "schedulingPeriod": "0 sec",
              "schedulingStrategy": "TIMER_DRIVEN",
              "executionNode": "ALL",
              "penaltyDuration": "30 sec",
              "yieldDuration": "1 sec",
              "bulletinLevel": "WARN",
              "runDurationMillis": 0,
              "concurrentlySchedulableTaskCount": 1,
              "comments": "",
              "lossTolerant": false,
              "defaultConcurrentTasks": {
                "TIMER_DRIVEN": "1",
                "EVENT_DRIVEN": "0",
                "CRON_DRIVEN": "1"
              },
              "defaultSchedulingPeriod": {
                "TIMER_DRIVEN": "0 sec",
                "CRON_DRIVEN": "* * * * * ?"
              }
            },
            "validationErrors": []
          },
          "inputRequirement": "INPUT_REQUIRED",
          "status": {
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "id": "ffef35e5-0159-1000-a07b-fd36f3725aae",
            "name": "RouteOnAttribute",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "ffef35e5-0159-1000-a07b-fd36f3725aae",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "type": "RouteOnAttribute",
              "runStatus": "Running",
              "bytesRead": 0,
              "bytesWritten": 0,
              "read": "0 bytes",
              "written": "0 bytes",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "taskCount": 0,
              "tasksDurationNanos": 0,
              "tasks": "0",
              "tasksDuration": "00:00:00.000",
              "activeThreadCount": 0
            }
          }
        }
      ],
      "inputPorts": [
        {
          "revision": {
            "clientId": "3e5be680-015a-1000-62d4-058f83d0fa76",
            "version": 8
          },
          "id": "25595d3d-db90-108c-ffff-ffffc421c2c5",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/input-ports/25595d3d-db90-108c-ffff-ffffc421c2c5",
          "position": {
            "x": 6549.47310965187,
            "y": 57.77540092488232
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "25595d3d-db90-108c-ffff-ffffc421c2c5",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 6549.47310965187,
              "y": 57.77540092488232
            },
            "name": "avn_ftp_fetch_input",
            "comments": "",
            "state": "RUNNING",
            "type": "INPUT_PORT",
            "transmitting": false,
            "concurrentlySchedulableTaskCount": 1,
            "userAccessControl": [],
            "groupAccessControl": [],
            "validationErrors": []
          },
          "status": {
            "id": "25595d3d-db90-108c-ffff-ffffc421c2c5",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "avn_ftp_fetch_input",
            "transmitting": false,
            "runStatus": "Running",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "25595d3d-db90-108c-ffff-ffffc421c2c5",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "avn_ftp_fetch_input",
              "activeThreadCount": 3,
              "flowFilesIn": 53,
              "bytesIn": 0,
              "input": "53 (0 bytes)",
              "flowFilesOut": 53,
              "bytesOut": 0,
              "output": "53 (0 bytes)",
              "transmitting": false,
              "runStatus": "Running"
            }
          },
          "portType": "INPUT_PORT"
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 14
          },
          "id": "27cc402a-e681-1ace-ffff-ffffbf55d2ba",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/input-ports/27cc402a-e681-1ace-ffff-ffffbf55d2ba",
          "position": {
            "x": 2760.367257434442,
            "y": 492.11932980140455
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "27cc402a-e681-1ace-ffff-ffffbf55d2ba",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 2760.367257434442,
              "y": 492.11932980140455
            },
            "name": "pi-wireless-s3-downlaod",
            "comments": "",
            "state": "RUNNING",
            "type": "INPUT_PORT",
            "transmitting": false,
            "concurrentlySchedulableTaskCount": 1,
            "userAccessControl": [],
            "groupAccessControl": [],
            "validationErrors": []
          },
          "status": {
            "id": "27cc402a-e681-1ace-ffff-ffffbf55d2ba",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "pi-wireless-s3-downlaod",
            "transmitting": false,
            "runStatus": "Running",
            "statsLastRefreshed": "14:31:32 CST",
            "aggregateSnapshot": {
              "id": "27cc402a-e681-1ace-ffff-ffffbf55d2ba",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "pi-wireless-s3-downlaod",
              "activeThreadCount": 3,
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "transmitting": false,
              "runStatus": "Running"
            }
          },
          "portType": "INPUT_PORT"
        }
      ],
      "outputPorts": [],
      "connections": [
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "aeff3db5-2604-1e1f-ffff-ffffd53b5ec8",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/aeff3db5-2604-1e1f-ffff-ffffd53b5ec8",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "aeff3db5-2604-1e1f-ffff-ffffd53b5ec8",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "04d9325b-9931-1a0b-b8bd-79c8d0ded775",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "0a3839dd-2d93-184d-9c6c-81cfd9123f84",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "aeff3db5-2604-1e1f-ffff-ffffd53b5ec8",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "04d9325b-9931-1a0b-b8bd-79c8d0ded775",
            "sourceName": "ExtractAvroMetadata",
            "destinationId": "0a3839dd-2d93-184d-9c6c-81cfd9123f84",
            "destinationName": "ConvertAvroSchema",
            "aggregateSnapshot": {
              "id": "aeff3db5-2604-1e1f-ffff-ffffd53b5ec8",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ExtractAvroMetadata",
              "destinationName": "ConvertAvroSchema",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "04d9325b-9931-1a0b-b8bd-79c8d0ded775",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "0a3839dd-2d93-184d-9c6c-81cfd9123f84",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 3
          },
          "id": "aeff3dc9-2604-1e1f-0000-000073a47acb",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/aeff3dc9-2604-1e1f-0000-000073a47acb",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "aeff3dc9-2604-1e1f-0000-000073a47acb",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "0a3839dd-2d93-184d-9c6c-81cfd9123f84",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "d9e43cde-35a2-1ab1-b579-ebaebbf6b78e",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "200 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "aeff3dc9-2604-1e1f-0000-000073a47acb",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "0a3839dd-2d93-184d-9c6c-81cfd9123f84",
            "sourceName": "ConvertAvroSchema",
            "destinationId": "d9e43cde-35a2-1ab1-b579-ebaebbf6b78e",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "aeff3dc9-2604-1e1f-0000-000073a47acb",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ConvertAvroSchema",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "0a3839dd-2d93-184d-9c6c-81cfd9123f84",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "d9e43cde-35a2-1ab1-b579-ebaebbf6b78e",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "48ae876a-015a-1000-ffff-ffffde601363",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/48ae876a-015a-1000-ffff-ffffde601363",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48ae876a-015a-1000-ffff-ffffde601363",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "c6583cb9-460c-1435-86df-de1b499a6eec",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "e6553106-6271-1f6e-b90a-dca0e3098b10",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "48ae876a-015a-1000-ffff-ffffde601363",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "c6583cb9-460c-1435-86df-de1b499a6eec",
            "sourceName": "UpdateAttribute",
            "destinationId": "e6553106-6271-1f6e-b90a-dca0e3098b10",
            "destinationName": "ExtractAvroMetadata",
            "aggregateSnapshot": {
              "id": "48ae876a-015a-1000-ffff-ffffde601363",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "ExtractAvroMetadata",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "c6583cb9-460c-1435-86df-de1b499a6eec",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "e6553106-6271-1f6e-b90a-dca0e3098b10",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "eaff3438-b081-1142-8f72-e5d0d3cf6324",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/eaff3438-b081-1142-8f72-e5d0d3cf6324",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "eaff3438-b081-1142-8f72-e5d0d3cf6324",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "ed6d32bc-10a9-1604-b75a-c2997861ef03",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetXGAnalyticsKafka - staging venona_error",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "8f033ce9-3bbb-16dc-91d0-90dfe5a74aec",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 5000000,
            "backPressureDataSizeThreshold": "100 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [
              "org.apache.nifi.prioritizer.FirstInFirstOutPrioritizer"
            ],
            "bends": []
          },
          "status": {
            "id": "eaff3438-b081-1142-8f72-e5d0d3cf6324",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "ed6d32bc-10a9-1604-b75a-c2997861ef03",
            "sourceName": "GetXGAnalyticsKafka - staging venona_error",
            "destinationId": "8f033ce9-3bbb-16dc-91d0-90dfe5a74aec",
            "destinationName": "MergeContent",
            "aggregateSnapshot": {
              "id": "eaff3438-b081-1142-8f72-e5d0d3cf6324",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "GetXGAnalyticsKafka - staging venona_error",
              "destinationName": "MergeContent",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 12,
              "bytesQueued": 44431,
              "queued": "12 (43.39 KB)",
              "queuedSize": "43.39 KB",
              "queuedCount": "12",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "ed6d32bc-10a9-1604-b75a-c2997861ef03",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "8f033ce9-3bbb-16dc-91d0-90dfe5a74aec",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "fff07b39-0159-1000-97aa-18e1f3f0b97c",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/fff07b39-0159-1000-97aa-18e1f3f0b97c",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "fff07b39-0159-1000-97aa-18e1f3f0b97c",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "ffef35e5-0159-1000-a07b-fd36f3725aae",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "f75fd162-0159-1000-9ec1-767dd0cf31c2",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "Extract Encrypted Date Filename",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "datafile"
            ],
            "availableRelationships": [
              "keyfile",
              "datafile",
              "unmatched"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "fff07b39-0159-1000-97aa-18e1f3f0b97c",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "datafile",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "ffef35e5-0159-1000-a07b-fd36f3725aae",
            "sourceName": "RouteOnAttribute",
            "destinationId": "f75fd162-0159-1000-9ec1-767dd0cf31c2",
            "destinationName": "Extract Encrypted Date Filename",
            "aggregateSnapshot": {
              "id": "fff07b39-0159-1000-97aa-18e1f3f0b97c",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "datafile",
              "sourceName": "RouteOnAttribute",
              "destinationName": "Extract Encrypted Date Filename",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "ffef35e5-0159-1000-a07b-fd36f3725aae",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "f75fd162-0159-1000-9ec1-767dd0cf31c2",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "d1e03347-bf18-1fbd-be15-8bbd31f0b577",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/d1e03347-bf18-1fbd-be15-8bbd31f0b577",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "d1e03347-bf18-1fbd-be15-8bbd31f0b577",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "012d3536-8eda-12a0-8e70-77f7dd3b6d14",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "50ad35e6-2a89-1f64-8f93-844c858e372d",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "merged"
            ],
            "availableRelationships": [
              "original",
              "failure",
              "merged"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "d1e03347-bf18-1fbd-be15-8bbd31f0b577",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "merged",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "012d3536-8eda-12a0-8e70-77f7dd3b6d14",
            "sourceName": "MergeContent",
            "destinationId": "50ad35e6-2a89-1f64-8f93-844c858e372d",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "d1e03347-bf18-1fbd-be15-8bbd31f0b577",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "merged",
              "sourceName": "MergeContent",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 2,
              "bytesIn": 1053579381,
              "input": "2 (1,004.77 MB)",
              "flowFilesOut": 2,
              "bytesOut": 1053579381,
              "output": "2 (1,004.77 MB)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "012d3536-8eda-12a0-8e70-77f7dd3b6d14",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "50ad35e6-2a89-1f64-8f93-844c858e372d",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "02a03196-93d6-106a-8d48-2207d12bef0e",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/02a03196-93d6-106a-8d48-2207d12bef0e",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "02a03196-93d6-106a-8d48-2207d12bef0e",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "a7843bb4-7051-13d0-8de7-539209949fe9",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka - venona_error_977FC20E5971627026E12B03BDF7914E",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "ac8238e1-414f-1ff8-ba0c-e1cee2f337ed",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 5000000,
            "backPressureDataSizeThreshold": "100 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [
              "org.apache.nifi.prioritizer.FirstInFirstOutPrioritizer"
            ],
            "bends": []
          },
          "status": {
            "id": "02a03196-93d6-106a-8d48-2207d12bef0e",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "a7843bb4-7051-13d0-8de7-539209949fe9",
            "sourceName": "GetKafka - venona_error_977FC20E5971627026E12B03BDF7914E",
            "destinationId": "ac8238e1-414f-1ff8-ba0c-e1cee2f337ed",
            "destinationName": "MergeContent",
            "aggregateSnapshot": {
              "id": "02a03196-93d6-106a-8d48-2207d12bef0e",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "GetKafka - venona_error_977FC20E5971627026E12B03BDF7914E",
              "destinationName": "MergeContent",
              "flowFilesIn": 164,
              "bytesIn": 175281,
              "input": "164 (171.17 KB)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 3525,
              "bytesQueued": 3262557,
              "queued": "3,525 (3.11 MB)",
              "queuedSize": "3.11 MB",
              "queuedCount": "3,525",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "a7843bb4-7051-13d0-8de7-539209949fe9",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "ac8238e1-414f-1ff8-ba0c-e1cee2f337ed",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "aeff3dc1-2604-1e1f-ffff-ffffd0a982e1",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/aeff3dc1-2604-1e1f-ffff-ffffd0a982e1",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "aeff3dc1-2604-1e1f-ffff-ffffd0a982e1",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "aeff3da0-2604-1e1f-9153-7ce2870e40c9",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "73b73b91-5663-11bf-b936-89cec00c70d6",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "aeff3dc1-2604-1e1f-ffff-ffffd0a982e1",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "aeff3da0-2604-1e1f-9153-7ce2870e40c9",
            "sourceName": "ExtractAvroMetadata",
            "destinationId": "73b73b91-5663-11bf-b936-89cec00c70d6",
            "destinationName": "ConvertAvroSchema",
            "aggregateSnapshot": {
              "id": "aeff3dc1-2604-1e1f-ffff-ffffd0a982e1",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ExtractAvroMetadata",
              "destinationName": "ConvertAvroSchema",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "aeff3da0-2604-1e1f-9153-7ce2870e40c9",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "73b73b91-5663-11bf-b936-89cec00c70d6",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "aeff3dae-2604-1e1f-ffff-ffff870c7718",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/aeff3dae-2604-1e1f-ffff-ffff870c7718",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "aeff3dae-2604-1e1f-ffff-ffff870c7718",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "df973b69-5b00-14ab-81cb-89bb6a4b6d0c",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "17463bca-2db1-128f-a2ee-c40e003a403a",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "aeff3dae-2604-1e1f-ffff-ffff870c7718",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "df973b69-5b00-14ab-81cb-89bb6a4b6d0c",
            "sourceName": "UpdateAttribute",
            "destinationId": "17463bca-2db1-128f-a2ee-c40e003a403a",
            "destinationName": "ExtractAvroMetadata",
            "aggregateSnapshot": {
              "id": "aeff3dae-2604-1e1f-ffff-ffff870c7718",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "ExtractAvroMetadata",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "df973b69-5b00-14ab-81cb-89bb6a4b6d0c",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "17463bca-2db1-128f-a2ee-c40e003a403a",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "010a3bb0-1034-1a5c-96e0-77af133beda6",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/010a3bb0-1034-1a5c-96e0-77af133beda6",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "010a3bb0-1034-1a5c-96e0-77af133beda6",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "fe8f3017-92c9-10a2-a4d5-ed1412841c72",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka - video_messages_D3DA2AF2671B84F37F9E0F83A73EB1DC",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "316b35c2-801b-102f-80d1-f2a408dae33e",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 5000000,
            "backPressureDataSizeThreshold": "100 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [
              "org.apache.nifi.prioritizer.FirstInFirstOutPrioritizer"
            ],
            "bends": []
          },
          "status": {
            "id": "010a3bb0-1034-1a5c-96e0-77af133beda6",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "fe8f3017-92c9-10a2-a4d5-ed1412841c72",
            "sourceName": "GetKafka - video_messages_D3DA2AF2671B84F37F9E0F83A73EB1DC",
            "destinationId": "316b35c2-801b-102f-80d1-f2a408dae33e",
            "destinationName": "MergeContent",
            "aggregateSnapshot": {
              "id": "010a3bb0-1034-1a5c-96e0-77af133beda6",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "GetKafka - video_messages_D3DA2AF2671B84F37F9E0F83A73EB1DC",
              "destinationName": "MergeContent",
              "flowFilesIn": 11245,
              "bytesIn": 212542330,
              "input": "11,245 (202.7 MB)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 188651,
              "bytesQueued": 3564204822,
              "queued": "188,651 (3.32 GB)",
              "queuedSize": "3.32 GB",
              "queuedCount": "188,651",
              "percentUseCount": 2,
              "percentUseBytes": 2
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "fe8f3017-92c9-10a2-a4d5-ed1412841c72",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "316b35c2-801b-102f-80d1-f2a408dae33e",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "482b60f7-015a-1000-909a-7a4c87739340",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/482b60f7-015a-1000-909a-7a4c87739340",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "482b60f7-015a-1000-909a-7a4c87739340",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "94d81031-100a-115a-8609-027bb26dfb87",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "94d81034-100a-115a-86d8-39c9316a0b35",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "Extract GPG Encrypted Date Filename",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "datafile"
            ],
            "availableRelationships": [
              "datafile",
              "unmatched"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "482b60f7-015a-1000-909a-7a4c87739340",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "datafile",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "94d81031-100a-115a-8609-027bb26dfb87",
            "sourceName": "RouteOnAttribute",
            "destinationId": "94d81034-100a-115a-86d8-39c9316a0b35",
            "destinationName": "Extract GPG Encrypted Date Filename",
            "aggregateSnapshot": {
              "id": "482b60f7-015a-1000-909a-7a4c87739340",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "datafile",
              "sourceName": "RouteOnAttribute",
              "destinationName": "Extract GPG Encrypted Date Filename",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "94d81031-100a-115a-8609-027bb26dfb87",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "94d81034-100a-115a-86d8-39c9316a0b35",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "351b381c-869c-161f-b37b-f660c277c104",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/351b381c-869c-161f-b37b-f660c277c104",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "351b381c-869c-161f-b37b-f660c277c104",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "8f033ce9-3bbb-16dc-91d0-90dfe5a74aec",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "29263fa8-aa65-130e-adb4-8bdcfb0499fa",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "merged"
            ],
            "availableRelationships": [
              "original",
              "failure",
              "merged"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "351b381c-869c-161f-b37b-f660c277c104",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "merged",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "8f033ce9-3bbb-16dc-91d0-90dfe5a74aec",
            "sourceName": "MergeContent",
            "destinationId": "29263fa8-aa65-130e-adb4-8bdcfb0499fa",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "351b381c-869c-161f-b37b-f660c277c104",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "merged",
              "sourceName": "MergeContent",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "8f033ce9-3bbb-16dc-91d0-90dfe5a74aec",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "29263fa8-aa65-130e-adb4-8bdcfb0499fa",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "48d0dcbb-015a-1000-9eb5-db7a99e829ff",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/48d0dcbb-015a-1000-9eb5-db7a99e829ff",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48d0dcbb-015a-1000-9eb5-db7a99e829ff",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "48d031c4-015a-1000-99d5-5b02a18a5039",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListS3",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "fb540221-0159-1000-b6b3-c6abf480f99f",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "48d0dcbb-015a-1000-9eb5-db7a99e829ff",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "48d031c4-015a-1000-99d5-5b02a18a5039",
            "sourceName": "ListS3",
            "destinationId": "fb540221-0159-1000-b6b3-c6abf480f99f",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "48d0dcbb-015a-1000-9eb5-db7a99e829ff",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ListS3",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "48d031c4-015a-1000-99d5-5b02a18a5039",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "fb540221-0159-1000-b6b3-c6abf480f99f",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "e69c3ee5-0d73-120f-ffff-ffffa55558ca",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/e69c3ee5-0d73-120f-ffff-ffffa55558ca",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e69c3ee5-0d73-120f-ffff-ffffa55558ca",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "e69c3edd-0d73-120f-ffff-ffffb72c2ad0",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "8ee6ddbc-0159-1000-ffff-ffff9e5cbd99",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute - filename",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "e69c3ee5-0d73-120f-ffff-ffffa55558ca",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "e69c3edd-0d73-120f-ffff-ffffb72c2ad0",
            "sourceName": "UpdateAttribute",
            "destinationId": "8ee6ddbc-0159-1000-ffff-ffff9e5cbd99",
            "destinationName": "RouteOnAttribute - filename",
            "aggregateSnapshot": {
              "id": "e69c3ee5-0d73-120f-ffff-ffffa55558ca",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "RouteOnAttribute - filename",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "e69c3edd-0d73-120f-ffff-ffffb72c2ad0",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "8ee6ddbc-0159-1000-ffff-ffff9e5cbd99",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "01ed3932-1fcd-1e5d-b786-f2b6a66153bf",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/01ed3932-1fcd-1e5d-b786-f2b6a66153bf",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "01ed3932-1fcd-1e5d-b786-f2b6a66153bf",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "65dd3a5f-aefb-1ec4-971d-df277ee8d0ee",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "172c3826-90b0-1810-aa0a-91b33478f354",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "merged"
            ],
            "availableRelationships": [
              "original",
              "failure",
              "merged"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "01ed3932-1fcd-1e5d-b786-f2b6a66153bf",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "merged",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "65dd3a5f-aefb-1ec4-971d-df277ee8d0ee",
            "sourceName": "MergeContent",
            "destinationId": "172c3826-90b0-1810-aa0a-91b33478f354",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "01ed3932-1fcd-1e5d-b786-f2b6a66153bf",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "merged",
              "sourceName": "MergeContent",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "65dd3a5f-aefb-1ec4-971d-df277ee8d0ee",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "172c3826-90b0-1810-aa0a-91b33478f354",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "48ae4fc5-015a-1000-0000-00007e2e116c",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/48ae4fc5-015a-1000-0000-00007e2e116c",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48ae4fc5-015a-1000-0000-00007e2e116c",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "134d324b-bf55-1e92-94e0-b8cea8ad972c",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "d9e43cde-35a2-1ab1-b4f5-dc62fee49f9f",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "200 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "48ae4fc5-015a-1000-0000-00007e2e116c",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "134d324b-bf55-1e92-94e0-b8cea8ad972c",
            "sourceName": "ConvertAvroSchema",
            "destinationId": "d9e43cde-35a2-1ab1-b4f5-dc62fee49f9f",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "48ae4fc5-015a-1000-0000-00007e2e116c",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ConvertAvroSchema",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "134d324b-bf55-1e92-94e0-b8cea8ad972c",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "d9e43cde-35a2-1ab1-b4f5-dc62fee49f9f",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "221f32ca-2121-11de-9909-d80f1c0b4f75",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/221f32ca-2121-11de-9909-d80f1c0b4f75",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "221f32ca-2121-11de-9909-d80f1c0b4f75",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "76da3475-2307-11d6-af57-4a9cf1c8c0a8",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetXGAnalyticsKafka - staging venona_finished_messages",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "a397371a-a1d2-170b-bf8c-0aaa11e157a6",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 5000000,
            "backPressureDataSizeThreshold": "100 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [
              "org.apache.nifi.prioritizer.FirstInFirstOutPrioritizer"
            ],
            "bends": []
          },
          "status": {
            "id": "221f32ca-2121-11de-9909-d80f1c0b4f75",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "76da3475-2307-11d6-af57-4a9cf1c8c0a8",
            "sourceName": "GetXGAnalyticsKafka - staging venona_finished_messages",
            "destinationId": "a397371a-a1d2-170b-bf8c-0aaa11e157a6",
            "destinationName": "MergeContent",
            "aggregateSnapshot": {
              "id": "221f32ca-2121-11de-9909-d80f1c0b4f75",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "GetXGAnalyticsKafka - staging venona_finished_messages",
              "destinationName": "MergeContent",
              "flowFilesIn": 69,
              "bytesIn": 1907502,
              "input": "69 (1.82 MB)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 825,
              "bytesQueued": 22846155,
              "queued": "825 (21.79 MB)",
              "queuedSize": "21.79 MB",
              "queuedCount": "825",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "76da3475-2307-11d6-af57-4a9cf1c8c0a8",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "a397371a-a1d2-170b-bf8c-0aaa11e157a6",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "e69c3e76-0d73-120f-0000-00004de68fd0",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/e69c3e76-0d73-120f-0000-00004de68fd0",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e69c3e76-0d73-120f-0000-00004de68fd0",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "8ee6432d-0159-1000-0000-00007be84223",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListS3 pi-wireless bucket",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "e69c3e65-0d73-120f-ffff-ffffdab18724",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "e69c3e76-0d73-120f-0000-00004de68fd0",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "8ee6432d-0159-1000-0000-00007be84223",
            "sourceName": "ListS3 pi-wireless bucket",
            "destinationId": "e69c3e65-0d73-120f-ffff-ffffdab18724",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "e69c3e76-0d73-120f-0000-00004de68fd0",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ListS3 pi-wireless bucket",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "8ee6432d-0159-1000-0000-00007be84223",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "e69c3e65-0d73-120f-ffff-ffffdab18724",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "d7f63a92-1dec-1a61-ffff-ffff8cba1b7a",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/d7f63a92-1dec-1a61-ffff-ffff8cba1b7a",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "d7f63a92-1dec-1a61-ffff-ffff8cba1b7a",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "b5b232a3-f229-1384-ffff-ffff8114013d",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "d7f63a80-1dec-1a61-b22a-69a8db3dbecf",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "d7f63a92-1dec-1a61-ffff-ffff8cba1b7a",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "b5b232a3-f229-1384-ffff-ffff8114013d",
            "sourceName": "ConvertAvroSchema",
            "destinationId": "d7f63a80-1dec-1a61-b22a-69a8db3dbecf",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "d7f63a92-1dec-1a61-ffff-ffff8cba1b7a",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ConvertAvroSchema",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "b5b232a3-f229-1384-ffff-ffff8114013d",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "d7f63a80-1dec-1a61-b22a-69a8db3dbecf",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "221f32ca-2121-11de-81fa-71842e0898f7",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/221f32ca-2121-11de-81fa-71842e0898f7",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "221f32ca-2121-11de-81fa-71842e0898f7",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "76da3475-2307-11d6-81ee-dce15cbc2a47",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka - video_finished_messages_6C568C9AB05D06E0076391F4F771F9F9",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "a397371a-a1d2-170b-b21c-4bea6300b2ec",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 5000000,
            "backPressureDataSizeThreshold": "100 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [
              "org.apache.nifi.prioritizer.FirstInFirstOutPrioritizer"
            ],
            "bends": []
          },
          "status": {
            "id": "221f32ca-2121-11de-81fa-71842e0898f7",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "76da3475-2307-11d6-81ee-dce15cbc2a47",
            "sourceName": "GetKafka - video_finished_messages_6C568C9AB05D06E0076391F4F771F9F9",
            "destinationId": "a397371a-a1d2-170b-b21c-4bea6300b2ec",
            "destinationName": "MergeContent",
            "aggregateSnapshot": {
              "id": "221f32ca-2121-11de-81fa-71842e0898f7",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "GetKafka - video_finished_messages_6C568C9AB05D06E0076391F4F771F9F9",
              "destinationName": "MergeContent",
              "flowFilesIn": 6179,
              "bytesIn": 146135378,
              "input": "6,179 (139.37 MB)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 196524,
              "bytesQueued": 4647893241,
              "queued": "196,524 (4.33 GB)",
              "queuedSize": "4.33 GB",
              "queuedCount": "196,524",
              "percentUseCount": 2,
              "percentUseBytes": 2
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "76da3475-2307-11d6-81ee-dce15cbc2a47",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "a397371a-a1d2-170b-b21c-4bea6300b2ec",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "015a100c-94d8-1029-b511-c06eb3ff419d",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/015a100c-94d8-1029-b511-c06eb3ff419d",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "015a100c-94d8-1029-b511-c06eb3ff419d",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "015a1007-94d8-1029-86f5-1ffe2849f489",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "015a100a-94d8-1029-8a60-25613fab687b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "015a100c-94d8-1029-b511-c06eb3ff419d",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "015a1007-94d8-1029-86f5-1ffe2849f489",
            "sourceName": "UpdateAttribute",
            "destinationId": "015a100a-94d8-1029-8a60-25613fab687b",
            "destinationName": "RouteOnAttribute",
            "aggregateSnapshot": {
              "id": "015a100c-94d8-1029-b511-c06eb3ff419d",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "RouteOnAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 1,
              "bytesQueued": 0,
              "queued": "1 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "1",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "015a1007-94d8-1029-86f5-1ffe2849f489",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "015a100a-94d8-1029-8a60-25613fab687b",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "e1a83688-47bf-1c6e-9839-7415787c0aa8",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/e1a83688-47bf-1c6e-9839-7415787c0aa8",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e1a83688-47bf-1c6e-9839-7415787c0aa8",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "cc5831b2-e208-1b25-9b2f-8496302ea60b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka - venona_unfinished_messages_avro_516904A9518C654DB9BF3FF7E35E1E6A",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "09123a9e-742b-1d64-bc9e-1aadb06a066e",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 5000000,
            "backPressureDataSizeThreshold": "100 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [
              "org.apache.nifi.prioritizer.FirstInFirstOutPrioritizer"
            ],
            "bends": []
          },
          "status": {
            "id": "e1a83688-47bf-1c6e-9839-7415787c0aa8",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "cc5831b2-e208-1b25-9b2f-8496302ea60b",
            "sourceName": "GetKafka - venona_unfinished_messages_avro_516904A9518C654DB9BF3FF7E35E1E6A",
            "destinationId": "09123a9e-742b-1d64-bc9e-1aadb06a066e",
            "destinationName": "MergeContent",
            "aggregateSnapshot": {
              "id": "e1a83688-47bf-1c6e-9839-7415787c0aa8",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "GetKafka - venona_unfinished_messages_avro_516904A9518C654DB9BF3FF7E35E1E6A",
              "destinationName": "MergeContent",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 37565,
              "bytesQueued": 819991553,
              "queued": "37,565 (782 MB)",
              "queuedSize": "782 MB",
              "queuedCount": "37,565",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "cc5831b2-e208-1b25-9b2f-8496302ea60b",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "09123a9e-742b-1d64-bc9e-1aadb06a066e",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "6bf036e7-015a-1000-f5ad-b0a3e635bfe1",
            "version": 1
          },
          "id": "015a100d-94d8-1029-aa03-0e683053b2d3",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/015a100d-94d8-1029-aa03-0e683053b2d3",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "015a100d-94d8-1029-aa03-0e683053b2d3",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "015a100a-94d8-1029-8a60-25613fab687b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "35495de6-015a-1000-a990-785fb9b044d5",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchSFTP",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "datafile"
            ],
            "availableRelationships": [
              "datafile",
              "unmatched"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "015a100d-94d8-1029-aa03-0e683053b2d3",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "datafile",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "015a100a-94d8-1029-8a60-25613fab687b",
            "sourceName": "RouteOnAttribute",
            "destinationId": "35495de6-015a-1000-a990-785fb9b044d5",
            "destinationName": "FetchSFTP",
            "aggregateSnapshot": {
              "id": "015a100d-94d8-1029-aa03-0e683053b2d3",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "datafile",
              "sourceName": "RouteOnAttribute",
              "destinationName": "FetchSFTP",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "015a100a-94d8-1029-8a60-25613fab687b",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "35495de6-015a-1000-a990-785fb9b044d5",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "48ff33b0-015a-1000-b7c2-88f345b12914",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/48ff33b0-015a-1000-b7c2-88f345b12914",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48ff33b0-015a-1000-b7c2-88f345b12914",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "ffdcd346-0159-1000-9c1e-088ce0697c7e",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchS3Object",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "48fe8692-015a-1000-b354-5eec57a27b34",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "48ff33b0-015a-1000-b7c2-88f345b12914",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "ffdcd346-0159-1000-9c1e-088ce0697c7e",
            "sourceName": "FetchS3Object",
            "destinationId": "48fe8692-015a-1000-b354-5eec57a27b34",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "48ff33b0-015a-1000-b7c2-88f345b12914",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "FetchS3Object",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "ffdcd346-0159-1000-9c1e-088ce0697c7e",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "48fe8692-015a-1000-b354-5eec57a27b34",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "008ab638-015a-1000-9f82-ca7ebca4a0d6",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/008ab638-015a-1000-9f82-ca7ebca4a0d6",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "008ab638-015a-1000-9f82-ca7ebca4a0d6",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "002994d8-015a-1000-a3d3-75813082776d",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutFile",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "ffef35e5-0159-1000-a07b-fd36f3725aae",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "008ab638-015a-1000-9f82-ca7ebca4a0d6",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "002994d8-015a-1000-a3d3-75813082776d",
            "sourceName": "PutFile",
            "destinationId": "ffef35e5-0159-1000-a07b-fd36f3725aae",
            "destinationName": "RouteOnAttribute",
            "aggregateSnapshot": {
              "id": "008ab638-015a-1000-9f82-ca7ebca4a0d6",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "PutFile",
              "destinationName": "RouteOnAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "002994d8-015a-1000-a3d3-75813082776d",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "ffef35e5-0159-1000-a07b-fd36f3725aae",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "e9963c5e-3f71-1869-7545-9b8be521c8c6",
            "version": 1
          },
          "id": "27cc31d4-e681-1ace-ffff-fffff7318fcf",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/27cc31d4-e681-1ace-ffff-fffff7318fcf",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "27cc31d4-e681-1ace-ffff-fffff7318fcf",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "f430348f-ae64-1fe6-870d-0fae85ec578b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "7d9c3fa7-679c-1305-8da8-721549b32592",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "oauth_token_information"
            ],
            "availableRelationships": [
              "ngxgw_access",
              "oauth_token_information",
              "unmatched",
              "PiGwOauthTokens"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "27cc31d4-e681-1ace-ffff-fffff7318fcf",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "oauth_token_information",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "f430348f-ae64-1fe6-870d-0fae85ec578b",
            "sourceName": "RouteOnAttribute",
            "destinationId": "7d9c3fa7-679c-1305-8da8-721549b32592",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "27cc31d4-e681-1ace-ffff-fffff7318fcf",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "oauth_token_information",
              "sourceName": "RouteOnAttribute",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "f430348f-ae64-1fe6-870d-0fae85ec578b",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "7d9c3fa7-679c-1305-8da8-721549b32592",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "473632b8-686e-1612-ffff-ffffc974b920",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/473632b8-686e-1612-ffff-ffffc974b920",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "473632b8-686e-1612-ffff-ffffc974b920",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "45223a78-0257-1985-b532-e9a1ef2c61d6",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "81983a94-4bfe-142c-ab90-dce8fbb98c49",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "500 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "473632b8-686e-1612-ffff-ffffc974b920",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "45223a78-0257-1985-b532-e9a1ef2c61d6",
            "sourceName": "ConvertAvroSchema",
            "destinationId": "81983a94-4bfe-142c-ab90-dce8fbb98c49",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "473632b8-686e-1612-ffff-ffffc974b920",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ConvertAvroSchema",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "45223a78-0257-1985-b532-e9a1ef2c61d6",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "81983a94-4bfe-142c-ab90-dce8fbb98c49",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "f0443634-fbe6-1fbb-b597-4a8335343fad",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/f0443634-fbe6-1fbb-b597-4a8335343fad",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "f0443634-fbe6-1fbb-b597-4a8335343fad",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "bd8235ca-912e-11f2-8ec9-efdca084e6ea",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListSFTP charcomw@tms:/On2/char",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "2e403b0b-ea71-1b91-8aaa-ba8a3cd173f5",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "f0443634-fbe6-1fbb-b597-4a8335343fad",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "bd8235ca-912e-11f2-8ec9-efdca084e6ea",
            "sourceName": "ListSFTP charcomw@tms:/On2/char",
            "destinationId": "2e403b0b-ea71-1b91-8aaa-ba8a3cd173f5",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "f0443634-fbe6-1fbb-b597-4a8335343fad",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ListSFTP charcomw@tms:/On2/char",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "bd8235ca-912e-11f2-8ec9-efdca084e6ea",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "2e403b0b-ea71-1b91-8aaa-ba8a3cd173f5",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "1b8a3bbe-49b0-1c57-9908-3015f7ce4ffc",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/1b8a3bbe-49b0-1c57-9908-3015f7ce4ffc",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "1b8a3bbe-49b0-1c57-9908-3015f7ce4ffc",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "6e8635aa-739b-1c1b-829f-4730779c8da4",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka - video_error_977FC20E5971627026E12B03BDF7914E",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "65dd3a5f-aefb-1ec4-971d-df277ee8d0ee",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 5000000,
            "backPressureDataSizeThreshold": "100 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [
              "org.apache.nifi.prioritizer.FirstInFirstOutPrioritizer"
            ],
            "bends": []
          },
          "status": {
            "id": "1b8a3bbe-49b0-1c57-9908-3015f7ce4ffc",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "6e8635aa-739b-1c1b-829f-4730779c8da4",
            "sourceName": "GetKafka - video_error_977FC20E5971627026E12B03BDF7914E",
            "destinationId": "65dd3a5f-aefb-1ec4-971d-df277ee8d0ee",
            "destinationName": "MergeContent",
            "aggregateSnapshot": {
              "id": "1b8a3bbe-49b0-1c57-9908-3015f7ce4ffc",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "GetKafka - video_error_977FC20E5971627026E12B03BDF7914E",
              "destinationName": "MergeContent",
              "flowFilesIn": 159,
              "bytesIn": 256031,
              "input": "159 (250.03 KB)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 5709,
              "bytesQueued": 9057093,
              "queued": "5,709 (8.64 MB)",
              "queuedSize": "8.64 MB",
              "queuedCount": "5,709",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "6e8635aa-739b-1c1b-829f-4730779c8da4",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "65dd3a5f-aefb-1ec4-971d-df277ee8d0ee",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "e9963c5e-3f71-1869-7545-9b8be521c8c6",
            "version": 1
          },
          "id": "27cc324b-e681-1ace-ffff-ffffb14ac249",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/27cc324b-e681-1ace-ffff-ffffb14ac249",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "27cc324b-e681-1ace-ffff-ffffb14ac249",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "3b6d3a7e-d17c-15a0-ac8c-4c876d626594",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "82c53c3a-977b-1733-94ce-f980761be987",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutFile",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "27cc324b-e681-1ace-ffff-ffffb14ac249",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "3b6d3a7e-d17c-15a0-ac8c-4c876d626594",
            "sourceName": "UpdateAttribute",
            "destinationId": "82c53c3a-977b-1733-94ce-f980761be987",
            "destinationName": "PutFile",
            "aggregateSnapshot": {
              "id": "27cc324b-e681-1ace-ffff-ffffb14ac249",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "PutFile",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "3b6d3a7e-d17c-15a0-ac8c-4c876d626594",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "82c53c3a-977b-1733-94ce-f980761be987",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "b7f1a657-0158-1000-ffff-ffffe086769d",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/b7f1a657-0158-1000-ffff-ffffe086769d",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "b7f1a657-0158-1000-ffff-ffffe086769d",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "b7f11420-0158-1000-ffff-ffffdcb4aaa5",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetHDFS",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "b7f1770f-0158-1000-0000-00007edf1c62",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "b7f1a657-0158-1000-ffff-ffffe086769d",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "b7f11420-0158-1000-ffff-ffffdcb4aaa5",
            "sourceName": "GetHDFS",
            "destinationId": "b7f1770f-0158-1000-0000-00007edf1c62",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "b7f1a657-0158-1000-ffff-ffffe086769d",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "GetHDFS",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "b7f11420-0158-1000-ffff-ffffdcb4aaa5",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "b7f1770f-0158-1000-0000-00007edf1c62",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "a4e844ac-89bc-15f9-ffff-ffff81d38ced",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/a4e844ac-89bc-15f9-ffff-ffff81d38ced",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a4e844ac-89bc-15f9-ffff-ffff81d38ced",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "a4e84493-89bc-15f9-0000-00004f18d645",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "eedd3b84-eecd-1633-addc-181c7337ae0b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchSFTP-tms-download",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "a4e844ac-89bc-15f9-ffff-ffff81d38ced",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "a4e84493-89bc-15f9-0000-00004f18d645",
            "sourceName": "UpdateAttribute",
            "destinationId": "eedd3b84-eecd-1633-addc-181c7337ae0b",
            "destinationName": "FetchSFTP-tms-download",
            "aggregateSnapshot": {
              "id": "a4e844ac-89bc-15f9-ffff-ffff81d38ced",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "FetchSFTP-tms-download",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "a4e84493-89bc-15f9-0000-00004f18d645",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "eedd3b84-eecd-1633-addc-181c7337ae0b",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "91d73350-4187-19bc-8ac3-44c24b69854f",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/91d73350-4187-19bc-8ac3-44c24b69854f",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "91d73350-4187-19bc-8ac3-44c24b69854f",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "91e53671-478c-1f55-bd9d-1b1e75a5509f",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka - venona_finished_messages_avro_9B71F1F26C65EC48006D80ED957A9511",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "012d3536-8eda-12a0-8e70-77f7dd3b6d14",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 5000000,
            "backPressureDataSizeThreshold": "100 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [
              "org.apache.nifi.prioritizer.FirstInFirstOutPrioritizer"
            ],
            "bends": []
          },
          "status": {
            "id": "91d73350-4187-19bc-8ac3-44c24b69854f",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "91e53671-478c-1f55-bd9d-1b1e75a5509f",
            "sourceName": "GetKafka - venona_finished_messages_avro_9B71F1F26C65EC48006D80ED957A9511",
            "destinationId": "012d3536-8eda-12a0-8e70-77f7dd3b6d14",
            "destinationName": "MergeContent",
            "aggregateSnapshot": {
              "id": "91d73350-4187-19bc-8ac3-44c24b69854f",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "GetKafka - venona_finished_messages_avro_9B71F1F26C65EC48006D80ED957A9511",
              "destinationName": "MergeContent",
              "flowFilesIn": 864,
              "bytesIn": 24952114,
              "input": "864 (23.8 MB)",
              "flowFilesOut": 409448,
              "bytesOut": 11828969731,
              "output": "409,448 (11.02 GB)",
              "flowFilesQueued": 674016,
              "bytesQueued": 19468482119,
              "queued": "674,016 (18.13 GB)",
              "queuedSize": "18.13 GB",
              "queuedCount": "674,016",
              "percentUseCount": 6,
              "percentUseBytes": 8
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "91e53671-478c-1f55-bd9d-1b1e75a5509f",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "012d3536-8eda-12a0-8e70-77f7dd3b6d14",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "bb463c12-bde3-136a-ffff-ffffc33065fd",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/bb463c12-bde3-136a-ffff-ffffc33065fd",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "bb463c12-bde3-136a-ffff-ffffc33065fd",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "b5b232a3-f229-1384-ffff-ffff8114013d",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "bb463c12-bde3-136a-ffff-ffffc33065fd",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
            "sourceName": "UpdateAttribute",
            "destinationId": "b5b232a3-f229-1384-ffff-ffff8114013d",
            "destinationName": "ConvertAvroSchema",
            "aggregateSnapshot": {
              "id": "bb463c12-bde3-136a-ffff-ffffc33065fd",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "ConvertAvroSchema",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "b5b232a3-f229-1384-ffff-ffff8114013d",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "473632b4-686e-1612-0000-000042e3ec00",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/473632b4-686e-1612-0000-000042e3ec00",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "473632b4-686e-1612-0000-000042e3ec00",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "a5833290-003e-154e-943f-103238eb7948",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "30d13956-c29c-17b9-830d-773575354818",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "500 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "473632b4-686e-1612-0000-000042e3ec00",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "a5833290-003e-154e-943f-103238eb7948",
            "sourceName": "ConvertAvroSchema",
            "destinationId": "30d13956-c29c-17b9-830d-773575354818",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "473632b4-686e-1612-0000-000042e3ec00",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ConvertAvroSchema",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "a5833290-003e-154e-943f-103238eb7948",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "30d13956-c29c-17b9-830d-773575354818",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "bb463c0d-bde3-136a-0000-00004c0665a9",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/bb463c0d-bde3-136a-0000-00004c0665a9",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "bb463c0d-bde3-136a-0000-00004c0665a9",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "b5b23225-f229-1384-ffff-fffffbc0c8ff",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "bb463c0d-bde3-136a-0000-00004c0665a9",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "b5b23225-f229-1384-ffff-fffffbc0c8ff",
            "sourceName": "ExtractAvroMetadata",
            "destinationId": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "bb463c0d-bde3-136a-0000-00004c0665a9",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ExtractAvroMetadata",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "b5b23225-f229-1384-ffff-fffffbc0c8ff",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 1
          },
          "id": "27cc4149-e681-1ace-ffff-ffff946b95fe",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/27cc4149-e681-1ace-ffff-ffff946b95fe",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "27cc4149-e681-1ace-ffff-ffff946b95fe",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "86f23334-35c7-1a42-a094-d49c23f406b4",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "27cc413f-e681-1ace-ffff-fffff063e363",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ControlRate",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "27cc4149-e681-1ace-ffff-ffff946b95fe",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "86f23334-35c7-1a42-a094-d49c23f406b4",
            "sourceName": "UpdateAttribute",
            "destinationId": "27cc413f-e681-1ace-ffff-fffff063e363",
            "destinationName": "ControlRate",
            "aggregateSnapshot": {
              "id": "27cc4149-e681-1ace-ffff-ffff946b95fe",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "ControlRate",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "86f23334-35c7-1a42-a094-d49c23f406b4",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "27cc413f-e681-1ace-ffff-fffff063e363",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "2559336b-db90-108c-03f4-961c5223d846",
            "version": 1
          },
          "id": "2a23a3af-015a-1000-ffff-ffffd8e78c7b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/2a23a3af-015a-1000-ffff-ffffd8e78c7b",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "2a23a3af-015a-1000-ffff-ffffd8e78c7b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "0e813e03-326c-11a0-b9dc-6efac864289b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListSFTP",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "2a2319b1-015a-1000-ffff-ffff9dc86a55",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ControlRate",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "2a23a3af-015a-1000-ffff-ffffd8e78c7b",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "0e813e03-326c-11a0-b9dc-6efac864289b",
            "sourceName": "ListSFTP",
            "destinationId": "2a2319b1-015a-1000-ffff-ffff9dc86a55",
            "destinationName": "ControlRate",
            "aggregateSnapshot": {
              "id": "2a23a3af-015a-1000-ffff-ffffd8e78c7b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ListSFTP",
              "destinationName": "ControlRate",
              "flowFilesIn": 53,
              "bytesIn": 0,
              "input": "53 (0 bytes)",
              "flowFilesOut": 53,
              "bytesOut": 0,
              "output": "53 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "0e813e03-326c-11a0-b9dc-6efac864289b",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "2a2319b1-015a-1000-ffff-ffff9dc86a55",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "bd9e34b1-19fa-1ae8-995e-925359422cf8",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/bd9e34b1-19fa-1ae8-995e-925359422cf8",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "bd9e34b1-19fa-1ae8-995e-925359422cf8",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "6cca351a-e7b8-13df-bf15-5b558c1ac9a2",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "a5833290-003e-154e-943f-103238eb7948",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "bd9e34b1-19fa-1ae8-995e-925359422cf8",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "6cca351a-e7b8-13df-bf15-5b558c1ac9a2",
            "sourceName": "ExtractAvroMetadata",
            "destinationId": "a5833290-003e-154e-943f-103238eb7948",
            "destinationName": "ConvertAvroSchema",
            "aggregateSnapshot": {
              "id": "bd9e34b1-19fa-1ae8-995e-925359422cf8",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ExtractAvroMetadata",
              "destinationName": "ConvertAvroSchema",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "6cca351a-e7b8-13df-bf15-5b558c1ac9a2",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "a5833290-003e-154e-943f-103238eb7948",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "5cc60123-015a-1000-a9a8-c01798974430",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/5cc60123-015a-1000-a9a8-c01798974430",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "5cc60123-015a-1000-a9a8-c01798974430",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "94d81034-100a-115a-86d8-39c9316a0b35",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "Extract GPG Encrypted Date Filename",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "94d8103f-100a-115a-9d9f-6ce60a417418",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExecuteStreamCommand",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "5cc60123-015a-1000-a9a8-c01798974430",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "94d81034-100a-115a-86d8-39c9316a0b35",
            "sourceName": "Extract GPG Encrypted Date Filename",
            "destinationId": "94d8103f-100a-115a-9d9f-6ce60a417418",
            "destinationName": "ExecuteStreamCommand",
            "aggregateSnapshot": {
              "id": "5cc60123-015a-1000-a9a8-c01798974430",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "Extract GPG Encrypted Date Filename",
              "destinationName": "ExecuteStreamCommand",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "94d81034-100a-115a-86d8-39c9316a0b35",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "94d8103f-100a-115a-9d9f-6ce60a417418",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "bb463c15-bde3-136a-ffff-ffff99d578d2",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/bb463c15-bde3-136a-ffff-ffff99d578d2",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "bb463c15-bde3-136a-ffff-ffff99d578d2",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "b5b23225-f229-1384-ffff-fffffbc0c8ff",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "bb463c15-bde3-136a-ffff-ffff99d578d2",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "b5b23225-f229-1384-ffff-fffffbc0c8ff",
            "sourceName": "ExtractAvroMetadata",
            "destinationId": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "bb463c15-bde3-136a-ffff-ffff99d578d2",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ExtractAvroMetadata",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "b5b23225-f229-1384-ffff-fffffbc0c8ff",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "bb463bfc-bde3-136a-b81f-4eb61ffed6eb",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "48aed08f-015a-1000-0000-000070a59df5",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/48aed08f-015a-1000-0000-000070a59df5",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48aed08f-015a-1000-0000-000070a59df5",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "818531d0-61d6-19cc-8ddd-82f4ebb2596c",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "785d3112-8934-16b0-b14f-25518f2c0a4c",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "48aed08f-015a-1000-0000-000070a59df5",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "818531d0-61d6-19cc-8ddd-82f4ebb2596c",
            "sourceName": "ExtractAvroMetadata",
            "destinationId": "785d3112-8934-16b0-b14f-25518f2c0a4c",
            "destinationName": "ConvertAvroSchema",
            "aggregateSnapshot": {
              "id": "48aed08f-015a-1000-0000-000070a59df5",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ExtractAvroMetadata",
              "destinationName": "ConvertAvroSchema",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "818531d0-61d6-19cc-8ddd-82f4ebb2596c",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "785d3112-8934-16b0-b14f-25518f2c0a4c",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 3
          },
          "id": "ffe10c8d-0159-1000-9a3c-e66394a7fc73",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/ffe10c8d-0159-1000-9a3c-e66394a7fc73",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "ffe10c8d-0159-1000-9a3c-e66394a7fc73",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "f6f7ec9a-0159-1000-a372-eed2cfd4cebb",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "ffdcd346-0159-1000-9c1e-088ce0697c7e",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchS3Object",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "keyfile",
              "datafile"
            ],
            "availableRelationships": [
              "keyfile",
              "datafile",
              "unmatched"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": [
              {
                "x": 8712.5732421875,
                "y": 746.0075073242188
              }
            ]
          },
          "status": {
            "id": "ffe10c8d-0159-1000-9a3c-e66394a7fc73",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "keyfile, datafile",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "f6f7ec9a-0159-1000-a372-eed2cfd4cebb",
            "sourceName": "RouteOnAttribute",
            "destinationId": "ffdcd346-0159-1000-9c1e-088ce0697c7e",
            "destinationName": "FetchS3Object",
            "aggregateSnapshot": {
              "id": "ffe10c8d-0159-1000-9a3c-e66394a7fc73",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "keyfile, datafile",
              "sourceName": "RouteOnAttribute",
              "destinationName": "FetchS3Object",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [
            {
              "x": 8712.5732421875,
              "y": 746.0075073242188
            }
          ],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "f6f7ec9a-0159-1000-a372-eed2cfd4cebb",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "ffdcd346-0159-1000-9c1e-088ce0697c7e",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "3e5be680-015a-1000-62d4-058f83d0fa76",
            "version": 1
          },
          "id": "3eead614-015a-1000-0000-000035478ccd",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/3eead614-015a-1000-0000-000035478ccd",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "3eead614-015a-1000-0000-000035478ccd",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "6e0c47a4-f622-17ad-0000-00005ce0c934",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListenHTTP",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "ad113bd0-cd83-166b-87e3-3f030723c296",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "100 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "3eead614-015a-1000-0000-000035478ccd",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "6e0c47a4-f622-17ad-0000-00005ce0c934",
            "sourceName": "ListenHTTP",
            "destinationId": "ad113bd0-cd83-166b-87e3-3f030723c296",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "3eead614-015a-1000-0000-000035478ccd",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ListenHTTP",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "6e0c47a4-f622-17ad-0000-00005ce0c934",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "ad113bd0-cd83-166b-87e3-3f030723c296",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "94d81043-100a-115a-b56a-207d9ee5ca61",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/94d81043-100a-115a-b56a-207d9ee5ca61",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "94d81043-100a-115a-b56a-207d9ee5ca61",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "94d8103f-100a-115a-9d9f-6ce60a417418",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExecuteStreamCommand",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "94d81042-100a-115a-8dd7-db1c14323572",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "LogAttribute",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "original"
            ],
            "availableRelationships": [
              "original"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "94d81043-100a-115a-b56a-207d9ee5ca61",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "original",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "94d8103f-100a-115a-9d9f-6ce60a417418",
            "sourceName": "ExecuteStreamCommand",
            "destinationId": "94d81042-100a-115a-8dd7-db1c14323572",
            "destinationName": "LogAttribute",
            "aggregateSnapshot": {
              "id": "94d81043-100a-115a-b56a-207d9ee5ca61",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "original",
              "sourceName": "ExecuteStreamCommand",
              "destinationName": "LogAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "94d8103f-100a-115a-9d9f-6ce60a417418",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "94d81042-100a-115a-8dd7-db1c14323572",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "48ae01d7-015a-1000-ffff-ffffe5e04fb5",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/48ae01d7-015a-1000-ffff-ffffe5e04fb5",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48ae01d7-015a-1000-ffff-ffffe5e04fb5",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "e8033678-3da3-1493-a428-663f94cb3dd9",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "121d3091-2cd0-1ba2-b1e7-434aeaad8971",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "48ae01d7-015a-1000-ffff-ffffe5e04fb5",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "e8033678-3da3-1493-a428-663f94cb3dd9",
            "sourceName": "UpdateAttribute",
            "destinationId": "121d3091-2cd0-1ba2-b1e7-434aeaad8971",
            "destinationName": "ExtractAvroMetadata",
            "aggregateSnapshot": {
              "id": "48ae01d7-015a-1000-ffff-ffffe5e04fb5",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "ExtractAvroMetadata",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "e8033678-3da3-1493-a428-663f94cb3dd9",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "121d3091-2cd0-1ba2-b1e7-434aeaad8971",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "fff08c24-0159-1000-a172-bc6cf4522cfd",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/fff08c24-0159-1000-a172-bc6cf4522cfd",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "fff08c24-0159-1000-a172-bc6cf4522cfd",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "ffef35e5-0159-1000-a07b-fd36f3725aae",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "f7686a0f-0159-1000-ac33-6e67c4ed5371",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "Extract Encrypted AES Key Filename",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "keyfile"
            ],
            "availableRelationships": [
              "keyfile",
              "datafile",
              "unmatched"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "fff08c24-0159-1000-a172-bc6cf4522cfd",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "keyfile",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "ffef35e5-0159-1000-a07b-fd36f3725aae",
            "sourceName": "RouteOnAttribute",
            "destinationId": "f7686a0f-0159-1000-ac33-6e67c4ed5371",
            "destinationName": "Extract Encrypted AES Key Filename",
            "aggregateSnapshot": {
              "id": "fff08c24-0159-1000-a172-bc6cf4522cfd",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "keyfile",
              "sourceName": "RouteOnAttribute",
              "destinationName": "Extract Encrypted AES Key Filename",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "ffef35e5-0159-1000-a07b-fd36f3725aae",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "f7686a0f-0159-1000-ac33-6e67c4ed5371",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "e9963c5e-3f71-1869-7545-9b8be521c8c6",
            "version": 1
          },
          "id": "27cc3250-e681-1ace-ffff-ffffef17deda",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/27cc3250-e681-1ace-ffff-ffffef17deda",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "27cc3250-e681-1ace-ffff-ffffef17deda",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "7d9c3fa7-679c-1305-8da8-721549b32592",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "82c53c3a-977b-1733-94ce-f980761be987",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutFile",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "27cc3250-e681-1ace-ffff-ffffef17deda",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "7d9c3fa7-679c-1305-8da8-721549b32592",
            "sourceName": "UpdateAttribute",
            "destinationId": "82c53c3a-977b-1733-94ce-f980761be987",
            "destinationName": "PutFile",
            "aggregateSnapshot": {
              "id": "27cc3250-e681-1ace-ffff-ffffef17deda",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "PutFile",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "7d9c3fa7-679c-1305-8da8-721549b32592",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "82c53c3a-977b-1733-94ce-f980761be987",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "81343c28-301b-137c-81c6-c4cd20f6824d",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/81343c28-301b-137c-81c6-c4cd20f6824d",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "81343c28-301b-137c-81c6-c4cd20f6824d",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "525f35ba-66c3-1afb-be4d-7d29347c12c3",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "39ad37f1-4155-17af-82d8-d647e831dbfb",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "100 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "81343c28-301b-137c-81c6-c4cd20f6824d",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "525f35ba-66c3-1afb-be4d-7d29347c12c3",
            "sourceName": "ExtractAvroMetadata",
            "destinationId": "39ad37f1-4155-17af-82d8-d647e831dbfb",
            "destinationName": "ConvertAvroSchema",
            "aggregateSnapshot": {
              "id": "81343c28-301b-137c-81c6-c4cd20f6824d",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ExtractAvroMetadata",
              "destinationName": "ConvertAvroSchema",
              "flowFilesIn": 2,
              "bytesIn": 1053579381,
              "input": "2 (1,004.77 MB)",
              "flowFilesOut": 3,
              "bytesOut": 1608355425,
              "output": "3 (1.5 GB)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "525f35ba-66c3-1afb-be4d-7d29347c12c3",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "39ad37f1-4155-17af-82d8-d647e831dbfb",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "c69a31a7-af0b-1eab-9d5d-a916a965b786",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/c69a31a7-af0b-1eab-9d5d-a916a965b786",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "c69a31a7-af0b-1eab-9d5d-a916a965b786",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "09123a9e-742b-1d64-bc9e-1aadb06a066e",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "ffb13783-414c-1962-ba5c-65b7176713be",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "merged"
            ],
            "availableRelationships": [
              "original",
              "failure",
              "merged"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "c69a31a7-af0b-1eab-9d5d-a916a965b786",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "merged",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "09123a9e-742b-1d64-bc9e-1aadb06a066e",
            "sourceName": "MergeContent",
            "destinationId": "ffb13783-414c-1962-ba5c-65b7176713be",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "c69a31a7-af0b-1eab-9d5d-a916a965b786",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "merged",
              "sourceName": "MergeContent",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "09123a9e-742b-1d64-bc9e-1aadb06a066e",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "ffb13783-414c-1962-ba5c-65b7176713be",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "fb546d4d-0159-1000-87ae-e4c6e6010637",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/fb546d4d-0159-1000-87ae-e4c6e6010637",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "fb546d4d-0159-1000-87ae-e4c6e6010637",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "fb540221-0159-1000-b6b3-c6abf480f99f",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "f6f7ec9a-0159-1000-a372-eed2cfd4cebb",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "fb546d4d-0159-1000-87ae-e4c6e6010637",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "fb540221-0159-1000-b6b3-c6abf480f99f",
            "sourceName": "UpdateAttribute",
            "destinationId": "f6f7ec9a-0159-1000-a372-eed2cfd4cebb",
            "destinationName": "RouteOnAttribute",
            "aggregateSnapshot": {
              "id": "fb546d4d-0159-1000-87ae-e4c6e6010637",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "RouteOnAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "fb540221-0159-1000-b6b3-c6abf480f99f",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "f6f7ec9a-0159-1000-a372-eed2cfd4cebb",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "015a100b-94d8-1029-900b-42a10ce8d1f2",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/015a100b-94d8-1029-900b-42a10ce8d1f2",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "015a100b-94d8-1029-900b-42a10ce8d1f2",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "28de9970-015a-1000-926b-8789fa1bd340",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListSFTP",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "015a1007-94d8-1029-86f5-1ffe2849f489",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "015a100b-94d8-1029-900b-42a10ce8d1f2",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "28de9970-015a-1000-926b-8789fa1bd340",
            "sourceName": "ListSFTP",
            "destinationId": "015a1007-94d8-1029-86f5-1ffe2849f489",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "015a100b-94d8-1029-900b-42a10ce8d1f2",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ListSFTP",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "28de9970-015a-1000-926b-8789fa1bd340",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "015a1007-94d8-1029-86f5-1ffe2849f489",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "aeff3db2-2604-1e1f-ffff-ffffc617021b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/aeff3db2-2604-1e1f-ffff-ffffc617021b",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "aeff3db2-2604-1e1f-ffff-ffffc617021b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "29263fa8-aa65-130e-adb4-8bdcfb0499fa",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "aeff3da0-2604-1e1f-9153-7ce2870e40c9",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "aeff3db2-2604-1e1f-ffff-ffffc617021b",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "29263fa8-aa65-130e-adb4-8bdcfb0499fa",
            "sourceName": "UpdateAttribute",
            "destinationId": "aeff3da0-2604-1e1f-9153-7ce2870e40c9",
            "destinationName": "ExtractAvroMetadata",
            "aggregateSnapshot": {
              "id": "aeff3db2-2604-1e1f-ffff-ffffc617021b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "ExtractAvroMetadata",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "29263fa8-aa65-130e-adb4-8bdcfb0499fa",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "aeff3da0-2604-1e1f-9153-7ce2870e40c9",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "e9963c5e-3f71-1869-7545-9b8be521c8c6",
            "version": 1
          },
          "id": "66eada6d-015a-1000-0000-00004e3a3076",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/66eada6d-015a-1000-0000-00004e3a3076",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "66eada6d-015a-1000-0000-00004e3a3076",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "553a3fba-9cb3-1cf6-a46a-50125786f790",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "f430348f-ae64-1fe6-870d-0fae85ec578b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "66eada6d-015a-1000-0000-00004e3a3076",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "553a3fba-9cb3-1cf6-a46a-50125786f790",
            "sourceName": "UpdateAttribute",
            "destinationId": "f430348f-ae64-1fe6-870d-0fae85ec578b",
            "destinationName": "RouteOnAttribute",
            "aggregateSnapshot": {
              "id": "66eada6d-015a-1000-0000-00004e3a3076",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "RouteOnAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "553a3fba-9cb3-1cf6-a46a-50125786f790",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "f430348f-ae64-1fe6-870d-0fae85ec578b",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "e9963c5e-3f71-1869-7545-9b8be521c8c6",
            "version": 1
          },
          "id": "27cc3253-e681-1ace-0000-000053dbd422",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/27cc3253-e681-1ace-0000-000053dbd422",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "27cc3253-e681-1ace-0000-000053dbd422",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "27cc31ce-e681-1ace-8599-00b05241995b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "82c53c3a-977b-1733-94ce-f980761be987",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutFile",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "27cc3253-e681-1ace-0000-000053dbd422",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "27cc31ce-e681-1ace-8599-00b05241995b",
            "sourceName": "UpdateAttribute",
            "destinationId": "82c53c3a-977b-1733-94ce-f980761be987",
            "destinationName": "PutFile",
            "aggregateSnapshot": {
              "id": "27cc3253-e681-1ace-0000-000053dbd422",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "PutFile",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "27cc31ce-e681-1ace-8599-00b05241995b",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "82c53c3a-977b-1733-94ce-f980761be987",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "63c4f751-015a-1000-82e1-7e29b0536e15",
            "version": 1
          },
          "id": "641d101e-015a-1000-0000-00000590e035",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/641d101e-015a-1000-0000-00000590e035",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "641d101e-015a-1000-0000-00000590e035",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "f75fd162-0159-1000-9ec1-767dd0cf31c2",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "Extract Encrypted Date Filename",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "641d101e-015a-1000-0000-00000590e035",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "f75fd162-0159-1000-9ec1-767dd0cf31c2",
            "sourceName": "Extract Encrypted Date Filename",
            "destinationId": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "641d101e-015a-1000-0000-00000590e035",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "Extract Encrypted Date Filename",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "f75fd162-0159-1000-9ec1-767dd0cf31c2",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "48aeaf81-015a-1000-ffff-ffffb941f801",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/48aeaf81-015a-1000-ffff-ffffb941f801",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48aeaf81-015a-1000-ffff-ffffb941f801",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "02d83f53-b69e-1b62-98a8-5f90595f1512",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "692034ae-0832-182e-bcd0-43fc060d09dd",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "200 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "48aeaf81-015a-1000-ffff-ffffb941f801",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "02d83f53-b69e-1b62-98a8-5f90595f1512",
            "sourceName": "ConvertAvroSchema",
            "destinationId": "692034ae-0832-182e-bcd0-43fc060d09dd",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "48aeaf81-015a-1000-ffff-ffffb941f801",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ConvertAvroSchema",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "02d83f53-b69e-1b62-98a8-5f90595f1512",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "692034ae-0832-182e-bcd0-43fc060d09dd",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "d73e478d-0159-1000-ffff-ffffec91e5fe",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/d73e478d-0159-1000-ffff-ffffec91e5fe",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "d73e478d-0159-1000-ffff-ffffec91e5fe",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "d733624c-0159-1000-ffff-ffffe20fd6c5",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "CompressContent",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "22093965-75a9-1320-943a-147cd4c13f6e",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "500 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "d73e478d-0159-1000-ffff-ffffec91e5fe",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "d733624c-0159-1000-ffff-ffffe20fd6c5",
            "sourceName": "CompressContent",
            "destinationId": "22093965-75a9-1320-943a-147cd4c13f6e",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "d73e478d-0159-1000-ffff-ffffec91e5fe",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "CompressContent",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "d733624c-0159-1000-ffff-ffffe20fd6c5",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "22093965-75a9-1320-943a-147cd4c13f6e",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "29123dc6-856e-1c88-0000-000023605ecb",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/29123dc6-856e-1c88-0000-000023605ecb",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "29123dc6-856e-1c88-0000-000023605ecb",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "29123db0-856e-1c88-0000-00000707924b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListSFTP truconnect_etl@files.chartercom.com",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "29123dbf-856e-1c88-ffff-ffffd658d0e3",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchSFTP",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "29123dc6-856e-1c88-0000-000023605ecb",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "29123db0-856e-1c88-0000-00000707924b",
            "sourceName": "ListSFTP truconnect_etl@files.chartercom.com",
            "destinationId": "29123dbf-856e-1c88-ffff-ffffd658d0e3",
            "destinationName": "FetchSFTP",
            "aggregateSnapshot": {
              "id": "29123dc6-856e-1c88-0000-000023605ecb",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ListSFTP truconnect_etl@files.chartercom.com",
              "destinationName": "FetchSFTP",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "29123db0-856e-1c88-0000-00000707924b",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "29123dbf-856e-1c88-ffff-ffffd658d0e3",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "488cad9b-015a-1000-ffff-ffff964704df",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/488cad9b-015a-1000-ffff-ffff964704df",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "488cad9b-015a-1000-ffff-ffff964704df",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "50ad35e6-2a89-1f64-8f93-844c858e372d",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "525f35ba-66c3-1afb-be4d-7d29347c12c3",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "488cad9b-015a-1000-ffff-ffff964704df",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "50ad35e6-2a89-1f64-8f93-844c858e372d",
            "sourceName": "UpdateAttribute",
            "destinationId": "525f35ba-66c3-1afb-be4d-7d29347c12c3",
            "destinationName": "ExtractAvroMetadata",
            "aggregateSnapshot": {
              "id": "488cad9b-015a-1000-ffff-ffff964704df",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "ExtractAvroMetadata",
              "flowFilesIn": 2,
              "bytesIn": 1053579381,
              "input": "2 (1,004.77 MB)",
              "flowFilesOut": 2,
              "bytesOut": 1053579381,
              "output": "2 (1,004.77 MB)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "50ad35e6-2a89-1f64-8f93-844c858e372d",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "525f35ba-66c3-1afb-be4d-7d29347c12c3",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "a9bbbdbf-0159-1000-ffff-ffffb4e8680e",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/a9bbbdbf-0159-1000-ffff-ffffb4e8680e",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a9bbbdbf-0159-1000-ffff-ffffb4e8680e",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "2e403b0b-ea71-1b91-8aaa-ba8a3cd173f5",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "eedd3b84-eecd-1633-addc-181c7337ae0b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchSFTP-tms-download",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "a9bbbdbf-0159-1000-ffff-ffffb4e8680e",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "2e403b0b-ea71-1b91-8aaa-ba8a3cd173f5",
            "sourceName": "UpdateAttribute",
            "destinationId": "eedd3b84-eecd-1633-addc-181c7337ae0b",
            "destinationName": "FetchSFTP-tms-download",
            "aggregateSnapshot": {
              "id": "a9bbbdbf-0159-1000-ffff-ffffb4e8680e",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "FetchSFTP-tms-download",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "2e403b0b-ea71-1b91-8aaa-ba8a3cd173f5",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "eedd3b84-eecd-1633-addc-181c7337ae0b",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "1bed3f2e-1a5c-10d5-ffff-ffffb7694b47",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/1bed3f2e-1a5c-10d5-ffff-ffffb7694b47",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "1bed3f2e-1a5c-10d5-ffff-ffffb7694b47",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "29123dbf-856e-1c88-ffff-ffffd658d0e3",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchSFTP",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "1bed3f27-1a5c-10d5-a8d4-081efbc5b2e5",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "comms.failure",
              "permission.denied",
              "success",
              "not.found"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "1bed3f2e-1a5c-10d5-ffff-ffffb7694b47",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "29123dbf-856e-1c88-ffff-ffffd658d0e3",
            "sourceName": "FetchSFTP",
            "destinationId": "1bed3f27-1a5c-10d5-a8d4-081efbc5b2e5",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "1bed3f2e-1a5c-10d5-ffff-ffffb7694b47",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "FetchSFTP",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "29123dbf-856e-1c88-ffff-ffffd658d0e3",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "1bed3f27-1a5c-10d5-a8d4-081efbc5b2e5",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "2559336b-db90-108c-03f4-961c5223d846",
            "version": 1
          },
          "id": "2a23beaa-015a-1000-0000-0000319927f9",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/2a23beaa-015a-1000-0000-0000319927f9",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "2a23beaa-015a-1000-0000-0000319927f9",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "2a2319b1-015a-1000-ffff-ffff9dc86a55",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ControlRate",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "25595d3d-db90-108c-ffff-ffffc421c2c5",
              "type": "REMOTE_INPUT_PORT",
              "groupId": "25595cd7-db90-108c-ffff-ffff9b1df94c",
              "name": "avn_ftp_fetch_input",
              "running": true,
              "transmitting": true,
              "exists": true
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "2a23beaa-015a-1000-0000-0000319927f9",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "2a2319b1-015a-1000-ffff-ffff9dc86a55",
            "sourceName": "ControlRate",
            "destinationId": "25595d3d-db90-108c-ffff-ffffc421c2c5",
            "destinationName": "avn_ftp_fetch_input",
            "aggregateSnapshot": {
              "id": "2a23beaa-015a-1000-0000-0000319927f9",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ControlRate",
              "destinationName": "avn_ftp_fetch_input",
              "flowFilesIn": 53,
              "bytesIn": 0,
              "input": "53 (0 bytes)",
              "flowFilesOut": 53,
              "bytesOut": 0,
              "output": "53 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "2a2319b1-015a-1000-ffff-ffff9dc86a55",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "25595d3d-db90-108c-ffff-ffffc421c2c5",
          "destinationGroupId": "25595cd7-db90-108c-ffff-ffff9b1df94c",
          "destinationType": "REMOTE_INPUT_PORT"
        },
        {
          "revision": {
            "clientId": "2559336b-db90-108c-03f4-961c5223d846",
            "version": 1
          },
          "id": "25595d47-db90-108c-0000-000048d0d5a6",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/25595d47-db90-108c-0000-000048d0d5a6",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "25595d47-db90-108c-0000-000048d0d5a6",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "25595d3d-db90-108c-ffff-ffffc421c2c5",
              "type": "INPUT_PORT",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "avn_ftp_fetch_input",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "25595b8b-db90-108c-0000-00007ed05306",
              "type": "INPUT_PORT",
              "groupId": "25595ab4-db90-108c-ffff-ffffc78ca314",
              "name": "avn_ftp_fetch_input",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "25595d47-db90-108c-0000-000048d0d5a6",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "25595d3d-db90-108c-ffff-ffffc421c2c5",
            "sourceName": "avn_ftp_fetch_input",
            "destinationId": "25595b8b-db90-108c-0000-00007ed05306",
            "destinationName": "avn_ftp_fetch_input",
            "aggregateSnapshot": {
              "id": "25595d47-db90-108c-0000-000048d0d5a6",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "",
              "sourceName": "avn_ftp_fetch_input",
              "destinationName": "avn_ftp_fetch_input",
              "flowFilesIn": 53,
              "bytesIn": 0,
              "input": "53 (0 bytes)",
              "flowFilesOut": 53,
              "bytesOut": 0,
              "output": "53 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "25595d3d-db90-108c-ffff-ffffc421c2c5",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "INPUT_PORT",
          "destinationId": "25595b8b-db90-108c-0000-00007ed05306",
          "destinationGroupId": "25595ab4-db90-108c-ffff-ffffc78ca314",
          "destinationType": "INPUT_PORT"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "aeff3dcd-2604-1e1f-ffff-ffff8cdda239",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/aeff3dcd-2604-1e1f-ffff-ffff8cdda239",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "aeff3dcd-2604-1e1f-ffff-ffff8cdda239",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "ae17374f-ba3a-1ca2-92c8-0a3463e3e590",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "caed33ae-4565-1b3f-bbf5-0c922d9e7f18",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "200 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "aeff3dcd-2604-1e1f-ffff-ffff8cdda239",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "ae17374f-ba3a-1ca2-92c8-0a3463e3e590",
            "sourceName": "ConvertAvroSchema",
            "destinationId": "caed33ae-4565-1b3f-bbf5-0c922d9e7f18",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "aeff3dcd-2604-1e1f-ffff-ffff8cdda239",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ConvertAvroSchema",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "ae17374f-ba3a-1ca2-92c8-0a3463e3e590",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "caed33ae-4565-1b3f-bbf5-0c922d9e7f18",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "aeff3db9-2604-1e1f-0000-0000125873b7",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/aeff3db9-2604-1e1f-0000-0000125873b7",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "aeff3db9-2604-1e1f-0000-0000125873b7",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "17463bca-2db1-128f-a2ee-c40e003a403a",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "ae17374f-ba3a-1ca2-92c8-0a3463e3e590",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "aeff3db9-2604-1e1f-0000-0000125873b7",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "17463bca-2db1-128f-a2ee-c40e003a403a",
            "sourceName": "ExtractAvroMetadata",
            "destinationId": "ae17374f-ba3a-1ca2-92c8-0a3463e3e590",
            "destinationName": "ConvertAvroSchema",
            "aggregateSnapshot": {
              "id": "aeff3db9-2604-1e1f-0000-0000125873b7",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ExtractAvroMetadata",
              "destinationName": "ConvertAvroSchema",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "17463bca-2db1-128f-a2ee-c40e003a403a",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "ae17374f-ba3a-1ca2-92c8-0a3463e3e590",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "27cc31d1-e681-1ace-a55b-dd4b5ebd1485",
            "version": 1
          },
          "id": "67871dad-015a-1000-ffff-ffff8d9465d7",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/67871dad-015a-1000-ffff-ffff8d9465d7",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "67871dad-015a-1000-ffff-ffff8d9465d7",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "f6f94f44-0159-1000-ab29-62833efb2221",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "73e53c97-f892-13f2-a707-a93a8a6f361a",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExecuteStreamCommand",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "merged"
            ],
            "availableRelationships": [
              "original",
              "failure",
              "merged"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "67871dad-015a-1000-ffff-ffff8d9465d7",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "merged",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "f6f94f44-0159-1000-ab29-62833efb2221",
            "sourceName": "MergeContent",
            "destinationId": "73e53c97-f892-13f2-a707-a93a8a6f361a",
            "destinationName": "ExecuteStreamCommand",
            "aggregateSnapshot": {
              "id": "67871dad-015a-1000-ffff-ffff8d9465d7",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "merged",
              "sourceName": "MergeContent",
              "destinationName": "ExecuteStreamCommand",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "f6f94f44-0159-1000-ab29-62833efb2221",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "73e53c97-f892-13f2-a707-a93a8a6f361a",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "aeff3dd0-2604-1e1f-0000-0000181221db",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/aeff3dd0-2604-1e1f-0000-0000181221db",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "aeff3dd0-2604-1e1f-0000-0000181221db",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "73b73b91-5663-11bf-b936-89cec00c70d6",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "4ef73f54-cc5d-14c3-88cc-bc35813eb926",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "200 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "aeff3dd0-2604-1e1f-0000-0000181221db",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "73b73b91-5663-11bf-b936-89cec00c70d6",
            "sourceName": "ConvertAvroSchema",
            "destinationId": "4ef73f54-cc5d-14c3-88cc-bc35813eb926",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "aeff3dd0-2604-1e1f-0000-0000181221db",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ConvertAvroSchema",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "73b73b91-5663-11bf-b936-89cec00c70d6",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "4ef73f54-cc5d-14c3-88cc-bc35813eb926",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "928f34fd-6a5b-1f7d-9275-27cbcbf65c31",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/928f34fd-6a5b-1f7d-9275-27cbcbf65c31",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "928f34fd-6a5b-1f7d-9275-27cbcbf65c31",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "316b35c2-801b-102f-80d1-f2a408dae33e",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "c6583cb9-460c-1435-86df-de1b499a6eec",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "merged"
            ],
            "availableRelationships": [
              "original",
              "failure",
              "merged"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "928f34fd-6a5b-1f7d-9275-27cbcbf65c31",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "merged",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "316b35c2-801b-102f-80d1-f2a408dae33e",
            "sourceName": "MergeContent",
            "destinationId": "c6583cb9-460c-1435-86df-de1b499a6eec",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "928f34fd-6a5b-1f7d-9275-27cbcbf65c31",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "merged",
              "sourceName": "MergeContent",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "316b35c2-801b-102f-80d1-f2a408dae33e",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "c6583cb9-460c-1435-86df-de1b499a6eec",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "48aebf12-015a-1000-ffff-ffff83aef5e4",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/48aebf12-015a-1000-ffff-ffff83aef5e4",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48aebf12-015a-1000-ffff-ffff83aef5e4",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "172c3826-90b0-1810-aa0a-91b33478f354",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "818531d0-61d6-19cc-8ddd-82f4ebb2596c",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "48aebf12-015a-1000-ffff-ffff83aef5e4",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "172c3826-90b0-1810-aa0a-91b33478f354",
            "sourceName": "UpdateAttribute",
            "destinationId": "818531d0-61d6-19cc-8ddd-82f4ebb2596c",
            "destinationName": "ExtractAvroMetadata",
            "aggregateSnapshot": {
              "id": "48aebf12-015a-1000-ffff-ffff83aef5e4",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "ExtractAvroMetadata",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "172c3826-90b0-1810-aa0a-91b33478f354",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "818531d0-61d6-19cc-8ddd-82f4ebb2596c",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "48ae3750-015a-1000-0000-00007c614d2b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/48ae3750-015a-1000-0000-00007c614d2b",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48ae3750-015a-1000-0000-00007c614d2b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "121d3091-2cd0-1ba2-b1e7-434aeaad8971",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "134d324b-bf55-1e92-94e0-b8cea8ad972c",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "48ae3750-015a-1000-0000-00007c614d2b",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "121d3091-2cd0-1ba2-b1e7-434aeaad8971",
            "sourceName": "ExtractAvroMetadata",
            "destinationId": "134d324b-bf55-1e92-94e0-b8cea8ad972c",
            "destinationName": "ConvertAvroSchema",
            "aggregateSnapshot": {
              "id": "48ae3750-015a-1000-0000-00007c614d2b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ExtractAvroMetadata",
              "destinationName": "ConvertAvroSchema",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "121d3091-2cd0-1ba2-b1e7-434aeaad8971",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "134d324b-bf55-1e92-94e0-b8cea8ad972c",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "1212375b-a47d-1b25-ffff-ffffeff1693b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/1212375b-a47d-1b25-ffff-ffffeff1693b",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "1212375b-a47d-1b25-ffff-ffffeff1693b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "b5b23009-f229-1384-ffff-fffffb426281",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetKafka",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "b5b2301a-f229-1384-0000-000004580ff9",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHiveStreaming",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 100000,
            "backPressureDataSizeThreshold": "20 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [
              "org.apache.nifi.prioritizer.FirstInFirstOutPrioritizer"
            ],
            "bends": []
          },
          "status": {
            "id": "1212375b-a47d-1b25-ffff-ffffeff1693b",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "b5b23009-f229-1384-ffff-fffffb426281",
            "sourceName": "GetKafka",
            "destinationId": "b5b2301a-f229-1384-0000-000004580ff9",
            "destinationName": "PutHiveStreaming",
            "aggregateSnapshot": {
              "id": "1212375b-a47d-1b25-ffff-ffffeff1693b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "GetKafka",
              "destinationName": "PutHiveStreaming",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 6970,
              "bytesQueued": 161659926,
              "queued": "6,970 (154.17 MB)",
              "queuedSize": "154.17 MB",
              "queuedCount": "6,970",
              "percentUseCount": 3,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "b5b23009-f229-1384-ffff-fffffb426281",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "b5b2301a-f229-1384-0000-000004580ff9",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "27cc31d1-e681-1ace-a55b-dd4b5ebd1485",
            "version": 1
          },
          "id": "67872e50-015a-1000-ffff-ffffa9aa3b74",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/67872e50-015a-1000-ffff-ffffa9aa3b74",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "67872e50-015a-1000-ffff-ffffa9aa3b74",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "73e53c97-f892-13f2-a707-a93a8a6f361a",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExecuteStreamCommand",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "f6fcddff-0159-1000-adf9-063fcff52548",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExecuteStreamCommand",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "original"
            ],
            "availableRelationships": [
              "original"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "67872e50-015a-1000-ffff-ffffa9aa3b74",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "original",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "73e53c97-f892-13f2-a707-a93a8a6f361a",
            "sourceName": "ExecuteStreamCommand",
            "destinationId": "f6fcddff-0159-1000-adf9-063fcff52548",
            "destinationName": "ExecuteStreamCommand",
            "aggregateSnapshot": {
              "id": "67872e50-015a-1000-ffff-ffffa9aa3b74",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "original",
              "sourceName": "ExecuteStreamCommand",
              "destinationName": "ExecuteStreamCommand",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "73e53c97-f892-13f2-a707-a93a8a6f361a",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "f6fcddff-0159-1000-adf9-063fcff52548",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "5ceceece-015a-1000-0021-c69c6347da09",
            "version": 1
          },
          "id": "5d0336ab-015a-1000-ffff-ffff8c13ec86",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/5d0336ab-015a-1000-ffff-ffff8c13ec86",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "5d0336ab-015a-1000-ffff-ffff8c13ec86",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "015a1000-94d8-1029-8826-93a7cc98cac1",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutFile",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "94d81031-100a-115a-8609-027bb26dfb87",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "5d0336ab-015a-1000-ffff-ffff8c13ec86",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "015a1000-94d8-1029-8826-93a7cc98cac1",
            "sourceName": "PutFile",
            "destinationId": "94d81031-100a-115a-8609-027bb26dfb87",
            "destinationName": "RouteOnAttribute",
            "aggregateSnapshot": {
              "id": "5d0336ab-015a-1000-ffff-ffff8c13ec86",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "PutFile",
              "destinationName": "RouteOnAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "015a1000-94d8-1029-8826-93a7cc98cac1",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "94d81031-100a-115a-8609-027bb26dfb87",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 1
          },
          "id": "27cc4033-e681-1ace-ffff-ffffba443a49",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/27cc4033-e681-1ace-ffff-ffffba443a49",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "27cc4033-e681-1ace-ffff-ffffba443a49",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "27cc402a-e681-1ace-ffff-ffffbf55d2ba",
              "type": "INPUT_PORT",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "pi-wireless-s3-downlaod",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "8eac2442-0159-1000-ffff-ffffe615df33",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchS3Object-truconnect-download",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "27cc4033-e681-1ace-ffff-ffffba443a49",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "27cc402a-e681-1ace-ffff-ffffbf55d2ba",
            "sourceName": "pi-wireless-s3-downlaod",
            "destinationId": "8eac2442-0159-1000-ffff-ffffe615df33",
            "destinationName": "FetchS3Object-truconnect-download",
            "aggregateSnapshot": {
              "id": "27cc4033-e681-1ace-ffff-ffffba443a49",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "",
              "sourceName": "pi-wireless-s3-downlaod",
              "destinationName": "FetchS3Object-truconnect-download",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "27cc402a-e681-1ace-ffff-ffffbf55d2ba",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "INPUT_PORT",
          "destinationId": "8eac2442-0159-1000-ffff-ffffe615df33",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 1
          },
          "id": "8f24f64e-0159-1000-ffff-ffffdb1c6949",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/8f24f64e-0159-1000-ffff-ffffdb1c6949",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "8f24f64e-0159-1000-ffff-ffffdb1c6949",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "e69c3e2b-0d73-120f-90a7-8a70c9875079",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "8f24ade9-0159-1000-ffff-ffff974ef97c",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "DeleteS3Object",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 100000,
            "backPressureDataSizeThreshold": "100GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "8f24f64e-0159-1000-ffff-ffffdb1c6949",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "e69c3e2b-0d73-120f-90a7-8a70c9875079",
            "sourceName": "PutHDFS",
            "destinationId": "8f24ade9-0159-1000-ffff-ffff974ef97c",
            "destinationName": "DeleteS3Object",
            "aggregateSnapshot": {
              "id": "8f24f64e-0159-1000-ffff-ffffdb1c6949",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "PutHDFS",
              "destinationName": "DeleteS3Object",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "e69c3e2b-0d73-120f-90a7-8a70c9875079",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "8f24ade9-0159-1000-ffff-ffff974ef97c",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "e69c3ee2-0d73-120f-0000-000012c3c8fb",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/e69c3ee2-0d73-120f-0000-000012c3c8fb",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e69c3ee2-0d73-120f-0000-000012c3c8fb",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "e69c3e65-0d73-120f-ffff-ffffdab18724",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "e69c3edd-0d73-120f-ffff-ffffb72c2ad0",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "e69c3ee2-0d73-120f-0000-000012c3c8fb",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "e69c3e65-0d73-120f-ffff-ffffdab18724",
            "sourceName": "UpdateAttribute",
            "destinationId": "e69c3edd-0d73-120f-ffff-ffffb72c2ad0",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "e69c3ee2-0d73-120f-0000-000012c3c8fb",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "e69c3e65-0d73-120f-ffff-ffffdab18724",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "e69c3edd-0d73-120f-ffff-ffffb72c2ad0",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "015a1001-94d8-1029-bcc3-d0d80febe337",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/015a1001-94d8-1029-bcc3-d0d80febe337",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "015a1001-94d8-1029-bcc3-d0d80febe337",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "35495de6-015a-1000-a990-785fb9b044d5",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchSFTP",
              "running": false,
              "comments": ""
            },
            "destination": {
              "id": "015a1000-94d8-1029-8826-93a7cc98cac1",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutFile",
              "running": false,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "comms.failure",
              "permission.denied",
              "success",
              "not.found"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "015a1001-94d8-1029-bcc3-d0d80febe337",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "35495de6-015a-1000-a990-785fb9b044d5",
            "sourceName": "FetchSFTP",
            "destinationId": "015a1000-94d8-1029-8826-93a7cc98cac1",
            "destinationName": "PutFile",
            "aggregateSnapshot": {
              "id": "015a1001-94d8-1029-bcc3-d0d80febe337",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "FetchSFTP",
              "destinationName": "PutFile",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "35495de6-015a-1000-a990-785fb9b044d5",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "015a1000-94d8-1029-8826-93a7cc98cac1",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "a4e844a5-89bc-15f9-ffff-ffffa05794d7",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/a4e844a5-89bc-15f9-ffff-ffffa05794d7",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a4e844a5-89bc-15f9-ffff-ffffa05794d7",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "3ab630fb-5118-15d4-9cd4-43ac42e0c9ad",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListSFTP charcomw@tms:/On2/",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "a4e84493-89bc-15f9-0000-00004f18d645",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "a4e844a5-89bc-15f9-ffff-ffffa05794d7",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "3ab630fb-5118-15d4-9cd4-43ac42e0c9ad",
            "sourceName": "ListSFTP charcomw@tms:/On2/",
            "destinationId": "a4e84493-89bc-15f9-0000-00004f18d645",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "a4e844a5-89bc-15f9-ffff-ffffa05794d7",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ListSFTP charcomw@tms:/On2/",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "3ab630fb-5118-15d4-9cd4-43ac42e0c9ad",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "a4e84493-89bc-15f9-0000-00004f18d645",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "e9963c5e-3f71-1869-7545-9b8be521c8c6",
            "version": 1
          },
          "id": "3b6d3a84-d17c-15a0-ffff-fffffefbcd94",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/3b6d3a84-d17c-15a0-ffff-fffffefbcd94",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "3b6d3a84-d17c-15a0-ffff-fffffefbcd94",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "f430348f-ae64-1fe6-870d-0fae85ec578b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "3b6d3a7e-d17c-15a0-ac8c-4c876d626594",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "PiGwOauthTokens"
            ],
            "availableRelationships": [
              "ngxgw_access",
              "oauth_token_information",
              "unmatched",
              "PiGwOauthTokens"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "3b6d3a84-d17c-15a0-ffff-fffffefbcd94",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "PiGwOauthTokens",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "f430348f-ae64-1fe6-870d-0fae85ec578b",
            "sourceName": "RouteOnAttribute",
            "destinationId": "3b6d3a7e-d17c-15a0-ac8c-4c876d626594",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "3b6d3a84-d17c-15a0-ffff-fffffefbcd94",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PiGwOauthTokens",
              "sourceName": "RouteOnAttribute",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "f430348f-ae64-1fe6-870d-0fae85ec578b",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "3b6d3a7e-d17c-15a0-ac8c-4c876d626594",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "0c153f14-1f13-1d86-b04a-f1cff6edd749",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/0c153f14-1f13-1d86-b04a-f1cff6edd749",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "0c153f14-1f13-1d86-b04a-f1cff6edd749",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "18713a1d-0435-1f14-91ad-5e5f69c8124c",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "df973b69-5b00-14ab-81cb-89bb6a4b6d0c",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "merged"
            ],
            "availableRelationships": [
              "original",
              "failure",
              "merged"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "0c153f14-1f13-1d86-b04a-f1cff6edd749",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "merged",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "18713a1d-0435-1f14-91ad-5e5f69c8124c",
            "sourceName": "MergeContent",
            "destinationId": "df973b69-5b00-14ab-81cb-89bb6a4b6d0c",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "0c153f14-1f13-1d86-b04a-f1cff6edd749",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "merged",
              "sourceName": "MergeContent",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "18713a1d-0435-1f14-91ad-5e5f69c8124c",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "df973b69-5b00-14ab-81cb-89bb6a4b6d0c",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "66c7132f-015a-1000-63ad-75ac9e6525ff",
            "version": 1
          },
          "id": "e9963c68-3f71-1869-0000-00002165c769",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/e9963c68-3f71-1869-0000-00002165c769",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "e9963c68-3f71-1869-0000-00002165c769",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "82c53c3a-977b-1733-94ce-f980761be987",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutFile",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "e9963c5c-3f71-1869-9bb3-10ea3cccb612",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "e9963c68-3f71-1869-0000-00002165c769",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "82c53c3a-977b-1733-94ce-f980761be987",
            "sourceName": "PutFile",
            "destinationId": "e9963c5c-3f71-1869-9bb3-10ea3cccb612",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "e9963c68-3f71-1869-0000-00002165c769",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "PutFile",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "82c53c3a-977b-1733-94ce-f980761be987",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "e9963c5c-3f71-1869-9bb3-10ea3cccb612",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "4736328b-686e-1612-a5fc-a64494148ef5",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/4736328b-686e-1612-a5fc-a64494148ef5",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "4736328b-686e-1612-a5fc-a64494148ef5",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "cf133663-1892-11b0-8c1b-1cf3b59603b5",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "45223a78-0257-1985-b532-e9a1ef2c61d6",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "4736328b-686e-1612-a5fc-a64494148ef5",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "cf133663-1892-11b0-8c1b-1cf3b59603b5",
            "sourceName": "ExtractAvroMetadata",
            "destinationId": "45223a78-0257-1985-b532-e9a1ef2c61d6",
            "destinationName": "ConvertAvroSchema",
            "aggregateSnapshot": {
              "id": "4736328b-686e-1612-a5fc-a64494148ef5",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ExtractAvroMetadata",
              "destinationName": "ConvertAvroSchema",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "cf133663-1892-11b0-8c1b-1cf3b59603b5",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "45223a78-0257-1985-b532-e9a1ef2c61d6",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "63c4f751-015a-1000-82e1-7e29b0536e15",
            "version": 1
          },
          "id": "641d02d4-015a-1000-0000-00000aacd7c2",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/641d02d4-015a-1000-0000-00000aacd7c2",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "641d02d4-015a-1000-0000-00000aacd7c2",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "f7686a0f-0159-1000-ac33-6e67c4ed5371",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "Extract Encrypted AES Key Filename",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "641d02d4-015a-1000-0000-00000aacd7c2",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "f7686a0f-0159-1000-ac33-6e67c4ed5371",
            "sourceName": "Extract Encrypted AES Key Filename",
            "destinationId": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "641d02d4-015a-1000-0000-00000aacd7c2",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "Extract Encrypted AES Key Filename",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "f7686a0f-0159-1000-ac33-6e67c4ed5371",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "e9963c5d-3f71-1869-7f2b-6414c9e2ef90",
            "version": 1
          },
          "id": "27cc415d-e681-1ace-ffff-ffffa39a5736",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/27cc415d-e681-1ace-ffff-ffffa39a5736",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "27cc415d-e681-1ace-ffff-ffffa39a5736",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "27cc413f-e681-1ace-ffff-fffff063e363",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ControlRate",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "27cc402a-e681-1ace-ffff-ffffbf55d2ba",
              "type": "REMOTE_INPUT_PORT",
              "groupId": "27cc4069-e681-1ace-0000-00005d15370f",
              "name": "pi-wireless-s3-downlaod",
              "running": true,
              "transmitting": true,
              "exists": true
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "27cc415d-e681-1ace-ffff-ffffa39a5736",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "27cc413f-e681-1ace-ffff-fffff063e363",
            "sourceName": "ControlRate",
            "destinationId": "27cc402a-e681-1ace-ffff-ffffbf55d2ba",
            "destinationName": "pi-wireless-s3-downlaod",
            "aggregateSnapshot": {
              "id": "27cc415d-e681-1ace-ffff-ffffa39a5736",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ControlRate",
              "destinationName": "pi-wireless-s3-downlaod",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "27cc413f-e681-1ace-ffff-fffff063e363",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "27cc402a-e681-1ace-ffff-ffffbf55d2ba",
          "destinationGroupId": "27cc4069-e681-1ace-0000-00005d15370f",
          "destinationType": "REMOTE_INPUT_PORT"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "d7357065-0159-1000-ffff-ffffb1a49da0",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/d7357065-0159-1000-ffff-ffffb1a49da0",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "d7357065-0159-1000-ffff-ffffb1a49da0",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "8eac2442-0159-1000-ffff-ffffe615df33",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchS3Object-truconnect-download",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "e69c3e2b-0d73-120f-90a7-8a70c9875079",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "500 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "d7357065-0159-1000-ffff-ffffb1a49da0",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "8eac2442-0159-1000-ffff-ffffe615df33",
            "sourceName": "FetchS3Object-truconnect-download",
            "destinationId": "e69c3e2b-0d73-120f-90a7-8a70c9875079",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "d7357065-0159-1000-ffff-ffffb1a49da0",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "FetchS3Object-truconnect-download",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "8eac2442-0159-1000-ffff-ffffe615df33",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "e69c3e2b-0d73-120f-90a7-8a70c9875079",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "59cf3bc9-5d7b-1f00-8fc8-d0c2ca1e0a99",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/59cf3bc9-5d7b-1f00-8fc8-d0c2ca1e0a99",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "59cf3bc9-5d7b-1f00-8fc8-d0c2ca1e0a99",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "ac8238e1-414f-1ff8-ba0c-e1cee2f337ed",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "b2aa3bb3-aa52-1406-bc7e-8e1ac87c4dae",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "merged"
            ],
            "availableRelationships": [
              "original",
              "failure",
              "merged"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "59cf3bc9-5d7b-1f00-8fc8-d0c2ca1e0a99",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "merged",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "ac8238e1-414f-1ff8-ba0c-e1cee2f337ed",
            "sourceName": "MergeContent",
            "destinationId": "b2aa3bb3-aa52-1406-bc7e-8e1ac87c4dae",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "59cf3bc9-5d7b-1f00-8fc8-d0c2ca1e0a99",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "merged",
              "sourceName": "MergeContent",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "ac8238e1-414f-1ff8-ba0c-e1cee2f337ed",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "b2aa3bb3-aa52-1406-bc7e-8e1ac87c4dae",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "48ae9904-015a-1000-0000-0000591944b5",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/48ae9904-015a-1000-0000-0000591944b5",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48ae9904-015a-1000-0000-0000591944b5",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "e6553106-6271-1f6e-b90a-dca0e3098b10",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "02d83f53-b69e-1b62-98a8-5f90595f1512",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "48ae9904-015a-1000-0000-0000591944b5",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "e6553106-6271-1f6e-b90a-dca0e3098b10",
            "sourceName": "ExtractAvroMetadata",
            "destinationId": "02d83f53-b69e-1b62-98a8-5f90595f1512",
            "destinationName": "ConvertAvroSchema",
            "aggregateSnapshot": {
              "id": "48ae9904-015a-1000-0000-0000591944b5",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ExtractAvroMetadata",
              "destinationName": "ConvertAvroSchema",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "e6553106-6271-1f6e-b90a-dca0e3098b10",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "02d83f53-b69e-1b62-98a8-5f90595f1512",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "8f1e35fd-0159-1000-ffff-ffffc5afa453",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/8f1e35fd-0159-1000-ffff-ffffc5afa453",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "8f1e35fd-0159-1000-ffff-ffffc5afa453",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "8ee6ddbc-0159-1000-ffff-ffff9e5cbd99",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute - filename",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "86f23334-35c7-1a42-a094-d49c23f406b4",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "tru-connect"
            ],
            "availableRelationships": [
              "tru-connect",
              "unmatched"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "8f1e35fd-0159-1000-ffff-ffffc5afa453",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "tru-connect",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "8ee6ddbc-0159-1000-ffff-ffff9e5cbd99",
            "sourceName": "RouteOnAttribute - filename",
            "destinationId": "86f23334-35c7-1a42-a094-d49c23f406b4",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "8f1e35fd-0159-1000-ffff-ffffc5afa453",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "tru-connect",
              "sourceName": "RouteOnAttribute - filename",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "8ee6ddbc-0159-1000-ffff-ffff9e5cbd99",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "86f23334-35c7-1a42-a094-d49c23f406b4",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "4736329c-686e-1612-ffff-ffffb6db8d67",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/4736329c-686e-1612-ffff-ffffb6db8d67",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "4736329c-686e-1612-ffff-ffffb6db8d67",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "ffb13783-414c-1962-ba5c-65b7176713be",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "6cca351a-e7b8-13df-bf15-5b558c1ac9a2",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "4736329c-686e-1612-ffff-ffffb6db8d67",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "ffb13783-414c-1962-ba5c-65b7176713be",
            "sourceName": "UpdateAttribute",
            "destinationId": "6cca351a-e7b8-13df-bf15-5b558c1ac9a2",
            "destinationName": "ExtractAvroMetadata",
            "aggregateSnapshot": {
              "id": "4736329c-686e-1612-ffff-ffffb6db8d67",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "ExtractAvroMetadata",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "ffb13783-414c-1962-ba5c-65b7176713be",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "6cca351a-e7b8-13df-bf15-5b558c1ac9a2",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "a8f938c3-aaa8-18af-b4e5-e3a9215f330a",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/a8f938c3-aaa8-18af-b4e5-e3a9215f330a",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a8f938c3-aaa8-18af-b4e5-e3a9215f330a",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "a397371a-a1d2-170b-b21c-4bea6300b2ec",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "e8033678-3da3-1493-a428-663f94cb3dd9",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "merged"
            ],
            "availableRelationships": [
              "original",
              "failure",
              "merged"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "a8f938c3-aaa8-18af-b4e5-e3a9215f330a",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "merged",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "a397371a-a1d2-170b-b21c-4bea6300b2ec",
            "sourceName": "MergeContent",
            "destinationId": "e8033678-3da3-1493-a428-663f94cb3dd9",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "a8f938c3-aaa8-18af-b4e5-e3a9215f330a",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "merged",
              "sourceName": "MergeContent",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "a397371a-a1d2-170b-b21c-4bea6300b2ec",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "e8033678-3da3-1493-a428-663f94cb3dd9",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "d73e31ce-0159-1000-0000-00007327de8b",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/d73e31ce-0159-1000-0000-00007327de8b",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "d73e31ce-0159-1000-0000-00007327de8b",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "eedd3b84-eecd-1633-addc-181c7337ae0b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchSFTP-tms-download",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "d733624c-0159-1000-ffff-ffffe20fd6c5",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "CompressContent",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "comms.failure",
              "permission.denied",
              "success",
              "not.found"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "d73e31ce-0159-1000-0000-00007327de8b",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "eedd3b84-eecd-1633-addc-181c7337ae0b",
            "sourceName": "FetchSFTP-tms-download",
            "destinationId": "d733624c-0159-1000-ffff-ffffe20fd6c5",
            "destinationName": "CompressContent",
            "aggregateSnapshot": {
              "id": "d73e31ce-0159-1000-0000-00007327de8b",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "FetchSFTP-tms-download",
              "destinationName": "CompressContent",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "eedd3b84-eecd-1633-addc-181c7337ae0b",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "d733624c-0159-1000-ffff-ffffe20fd6c5",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "488d24c2-015a-1000-0000-00005160baaf",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/488d24c2-015a-1000-0000-00005160baaf",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "488d24c2-015a-1000-0000-00005160baaf",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "39ad37f1-4155-17af-82d8-d647e831dbfb",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "41e23309-855c-1fa3-be0f-f49ebf9d42be",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "500 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "488d24c2-015a-1000-0000-00005160baaf",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "39ad37f1-4155-17af-82d8-d647e831dbfb",
            "sourceName": "ConvertAvroSchema",
            "destinationId": "41e23309-855c-1fa3-be0f-f49ebf9d42be",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "488d24c2-015a-1000-0000-00005160baaf",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ConvertAvroSchema",
              "destinationName": "PutHDFS",
              "flowFilesIn": 3,
              "bytesIn": 480247823,
              "input": "3 (458 MB)",
              "flowFilesOut": 3,
              "bytesOut": 480247823,
              "output": "3 (458 MB)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "39ad37f1-4155-17af-82d8-d647e831dbfb",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "41e23309-855c-1fa3-be0f-f49ebf9d42be",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "66c7132f-015a-1000-63ad-75ac9e6525ff",
            "version": 1
          },
          "id": "66c818f5-015a-1000-ffff-ffffce3818ff",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/66c818f5-015a-1000-ffff-ffffce3818ff",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "66c818f5-015a-1000-ffff-ffffce3818ff",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "66c7bfa4-015a-1000-ffff-ffffbf9b1dc4",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchFile",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "553a3fba-9cb3-1cf6-a46a-50125786f790",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "permission.denied",
              "success",
              "not.found"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "66c818f5-015a-1000-ffff-ffffce3818ff",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "66c7bfa4-015a-1000-ffff-ffffbf9b1dc4",
            "sourceName": "FetchFile",
            "destinationId": "553a3fba-9cb3-1cf6-a46a-50125786f790",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "66c818f5-015a-1000-ffff-ffffce3818ff",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "FetchFile",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "66c7bfa4-015a-1000-ffff-ffffbf9b1dc4",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "553a3fba-9cb3-1cf6-a46a-50125786f790",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "48ff41f7-015a-1000-a309-c4564e9792d8",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/48ff41f7-015a-1000-a309-c4564e9792d8",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48ff41f7-015a-1000-a309-c4564e9792d8",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "48fe8692-015a-1000-b354-5eec57a27b34",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "002994d8-015a-1000-a3d3-75813082776d",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutFile",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "48ff41f7-015a-1000-a309-c4564e9792d8",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "48fe8692-015a-1000-b354-5eec57a27b34",
            "sourceName": "UpdateAttribute",
            "destinationId": "002994d8-015a-1000-a3d3-75813082776d",
            "destinationName": "PutFile",
            "aggregateSnapshot": {
              "id": "48ff41f7-015a-1000-a309-c4564e9792d8",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "PutFile",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "48fe8692-015a-1000-b354-5eec57a27b34",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "002994d8-015a-1000-a3d3-75813082776d",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "66c7132f-015a-1000-63ad-75ac9e6525ff",
            "version": 1
          },
          "id": "66c7f678-015a-1000-ffff-ffffdad04834",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/66c7f678-015a-1000-ffff-ffffdad04834",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "66c7f678-015a-1000-ffff-ffffdad04834",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "669e7cc5-015a-1000-ffff-ffff8ee0e387",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ListFile",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "66c7bfa4-015a-1000-ffff-ffffbf9b1dc4",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "FetchFile",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "66c7f678-015a-1000-ffff-ffffdad04834",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "669e7cc5-015a-1000-ffff-ffff8ee0e387",
            "sourceName": "ListFile",
            "destinationId": "66c7bfa4-015a-1000-ffff-ffffbf9b1dc4",
            "destinationName": "FetchFile",
            "aggregateSnapshot": {
              "id": "66c7f678-015a-1000-ffff-ffffdad04834",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ListFile",
              "destinationName": "FetchFile",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "669e7cc5-015a-1000-ffff-ffff8ee0e387",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "66c7bfa4-015a-1000-ffff-ffffbf9b1dc4",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "66c93dc8-8a7c-1bdc-93df-2d46bcfbeb74",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/66c93dc8-8a7c-1bdc-93df-2d46bcfbeb74",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "66c93dc8-8a7c-1bdc-93df-2d46bcfbeb74",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "07103a48-f202-1063-b1f0-8d12c23e166b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "GetXGAnalyticsKafka - staging venona_unfinished_messages",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "18713a1d-0435-1f14-91ad-5e5f69c8124c",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 5000000,
            "backPressureDataSizeThreshold": "100 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [
              "org.apache.nifi.prioritizer.FirstInFirstOutPrioritizer"
            ],
            "bends": []
          },
          "status": {
            "id": "66c93dc8-8a7c-1bdc-93df-2d46bcfbeb74",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "07103a48-f202-1063-b1f0-8d12c23e166b",
            "sourceName": "GetXGAnalyticsKafka - staging venona_unfinished_messages",
            "destinationId": "18713a1d-0435-1f14-91ad-5e5f69c8124c",
            "destinationName": "MergeContent",
            "aggregateSnapshot": {
              "id": "66c93dc8-8a7c-1bdc-93df-2d46bcfbeb74",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "GetXGAnalyticsKafka - staging venona_unfinished_messages",
              "destinationName": "MergeContent",
              "flowFilesIn": 59,
              "bytesIn": 1248235,
              "input": "59 (1.19 MB)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 2116,
              "bytesQueued": 45167577,
              "queued": "2,116 (43.08 MB)",
              "queuedSize": "43.08 MB",
              "queuedCount": "2,116",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "07103a48-f202-1063-b1f0-8d12c23e166b",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "18713a1d-0435-1f14-91ad-5e5f69c8124c",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "e9963c5e-3f71-1869-7545-9b8be521c8c6",
            "version": 1
          },
          "id": "27cc31d9-e681-1ace-ffff-ffff91ab0569",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/27cc31d9-e681-1ace-ffff-ffff91ab0569",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "27cc31d9-e681-1ace-ffff-ffff91ab0569",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "f430348f-ae64-1fe6-870d-0fae85ec578b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "RouteOnAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "27cc31ce-e681-1ace-8599-00b05241995b",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "ngxgw_access"
            ],
            "availableRelationships": [
              "ngxgw_access",
              "oauth_token_information",
              "unmatched",
              "PiGwOauthTokens"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "27cc31d9-e681-1ace-ffff-ffff91ab0569",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "ngxgw_access",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "f430348f-ae64-1fe6-870d-0fae85ec578b",
            "sourceName": "RouteOnAttribute",
            "destinationId": "27cc31ce-e681-1ace-8599-00b05241995b",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "27cc31d9-e681-1ace-ffff-ffff91ab0569",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ngxgw_access",
              "sourceName": "RouteOnAttribute",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "f430348f-ae64-1fe6-870d-0fae85ec578b",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "27cc31ce-e681-1ace-8599-00b05241995b",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "473632ac-686e-1612-0000-00002df1acdf",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/473632ac-686e-1612-0000-00002df1acdf",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "473632ac-686e-1612-0000-00002df1acdf",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "b2aa3bb3-aa52-1406-bc7e-8e1ac87c4dae",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "cf133663-1892-11b0-8c1b-1cf3b59603b5",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "473632ac-686e-1612-0000-00002df1acdf",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "b2aa3bb3-aa52-1406-bc7e-8e1ac87c4dae",
            "sourceName": "UpdateAttribute",
            "destinationId": "cf133663-1892-11b0-8c1b-1cf3b59603b5",
            "destinationName": "ExtractAvroMetadata",
            "aggregateSnapshot": {
              "id": "473632ac-686e-1612-0000-00002df1acdf",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "ExtractAvroMetadata",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "b2aa3bb3-aa52-1406-bc7e-8e1ac87c4dae",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "cf133663-1892-11b0-8c1b-1cf3b59603b5",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 2
          },
          "id": "48aee482-015a-1000-0000-00006da03bb5",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/48aee482-015a-1000-0000-00006da03bb5",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "48aee482-015a-1000-0000-00006da03bb5",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "785d3112-8934-16b0-b14f-25518f2c0a4c",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ConvertAvroSchema",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "a79034f8-39c6-1c38-a962-b5ea7dca0914",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "PutHDFS",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "failure",
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "200 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "48aee482-015a-1000-0000-00006da03bb5",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "785d3112-8934-16b0-b14f-25518f2c0a4c",
            "sourceName": "ConvertAvroSchema",
            "destinationId": "a79034f8-39c6-1c38-a962-b5ea7dca0914",
            "destinationName": "PutHDFS",
            "aggregateSnapshot": {
              "id": "48aee482-015a-1000-0000-00006da03bb5",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "ConvertAvroSchema",
              "destinationName": "PutHDFS",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "785d3112-8934-16b0-b14f-25518f2c0a4c",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "a79034f8-39c6-1c38-a962-b5ea7dca0914",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "4875da65-015a-1000-0e5c-9d1028ab955c",
            "version": 1
          },
          "id": "aeff3da8-2604-1e1f-ffff-ffff96e47477",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/aeff3da8-2604-1e1f-ffff-ffff96e47477",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "aeff3da8-2604-1e1f-ffff-ffff96e47477",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "e8033678-3da3-1493-b59f-613002f2c513",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "04d9325b-9931-1a0b-b8bd-79c8d0ded775",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "ExtractAvroMetadata",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "aeff3da8-2604-1e1f-ffff-ffff96e47477",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "e8033678-3da3-1493-b59f-613002f2c513",
            "sourceName": "UpdateAttribute",
            "destinationId": "04d9325b-9931-1a0b-b8bd-79c8d0ded775",
            "destinationName": "ExtractAvroMetadata",
            "aggregateSnapshot": {
              "id": "aeff3da8-2604-1e1f-ffff-ffff96e47477",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "ExtractAvroMetadata",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "e8033678-3da3-1493-b59f-613002f2c513",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "04d9325b-9931-1a0b-b8bd-79c8d0ded775",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "clientId": "63c4f751-015a-1000-82e1-7e29b0536e15",
            "version": 1
          },
          "id": "641d3971-015a-1000-0000-000056b836d4",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/641d3971-015a-1000-0000-000056b836d4",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "641d3971-015a-1000-0000-000056b836d4",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "f6f94f44-0159-1000-ab29-62833efb2221",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "success"
            ],
            "availableRelationships": [
              "success"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "641d3971-015a-1000-0000-000056b836d4",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "success",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
            "sourceName": "UpdateAttribute",
            "destinationId": "f6f94f44-0159-1000-ab29-62833efb2221",
            "destinationName": "MergeContent",
            "aggregateSnapshot": {
              "id": "641d3971-015a-1000-0000-000056b836d4",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "success",
              "sourceName": "UpdateAttribute",
              "destinationName": "MergeContent",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 2,
              "bytesQueued": 960,
              "queued": "2 (960 bytes)",
              "queuedSize": "960 bytes",
              "queuedCount": "2",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "ac3e3a50-1836-1cf2-b4a3-cfcde7c8f524",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "f6f94f44-0159-1000-ab29-62833efb2221",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        },
        {
          "revision": {
            "version": 0
          },
          "id": "a8f938c3-aaa8-18af-8f5d-447e72edd7df",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/connections/a8f938c3-aaa8-18af-8f5d-447e72edd7df",
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "component": {
            "id": "a8f938c3-aaa8-18af-8f5d-447e72edd7df",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "source": {
              "id": "a397371a-a1d2-170b-bf8c-0aaa11e157a6",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "MergeContent",
              "running": true,
              "comments": ""
            },
            "destination": {
              "id": "e8033678-3da3-1493-b59f-613002f2c513",
              "type": "PROCESSOR",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "UpdateAttribute",
              "running": true,
              "comments": ""
            },
            "name": "",
            "labelIndex": 1,
            "zIndex": 0,
            "selectedRelationships": [
              "merged"
            ],
            "availableRelationships": [
              "original",
              "failure",
              "merged"
            ],
            "backPressureObjectThreshold": 10000,
            "backPressureDataSizeThreshold": "1 GB",
            "flowFileExpiration": "0 sec",
            "prioritizers": [],
            "bends": []
          },
          "status": {
            "id": "a8f938c3-aaa8-18af-8f5d-447e72edd7df",
            "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "name": "merged",
            "statsLastRefreshed": "14:31:32 CST",
            "sourceId": "a397371a-a1d2-170b-bf8c-0aaa11e157a6",
            "sourceName": "MergeContent",
            "destinationId": "e8033678-3da3-1493-b59f-613002f2c513",
            "destinationName": "UpdateAttribute",
            "aggregateSnapshot": {
              "id": "a8f938c3-aaa8-18af-8f5d-447e72edd7df",
              "groupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
              "name": "merged",
              "sourceName": "MergeContent",
              "destinationName": "UpdateAttribute",
              "flowFilesIn": 0,
              "bytesIn": 0,
              "input": "0 (0 bytes)",
              "flowFilesOut": 0,
              "bytesOut": 0,
              "output": "0 (0 bytes)",
              "flowFilesQueued": 0,
              "bytesQueued": 0,
              "queued": "0 (0 bytes)",
              "queuedSize": "0 bytes",
              "queuedCount": "0",
              "percentUseCount": 0,
              "percentUseBytes": 0
            }
          },
          "bends": [],
          "labelIndex": 1,
          "zIndex": 0,
          "sourceId": "a397371a-a1d2-170b-bf8c-0aaa11e157a6",
          "sourceGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "sourceType": "PROCESSOR",
          "destinationId": "e8033678-3da3-1493-b59f-613002f2c513",
          "destinationGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
          "destinationType": "PROCESSOR"
        }
      ],
      "labels": [
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 11
          },
          "id": "6bd92c49-015a-1000-0000-00002731aa39",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/labels/6bd92c49-015a-1000-0000-00002731aa39",
          "position": {
            "x": 8192.837075902138,
            "y": 411.4477236380668
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "dimensions": {
            "width": 1249.5435791015625,
            "height": 1230.869140625
          },
          "component": {
            "id": "6bd92c49-015a-1000-0000-00002731aa39",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8192.837075902138,
              "y": 411.4477236380668
            },
            "label": "Download Files from S3 and Decrypt them",
            "width": 1249.5435791015625,
            "height": 1230.869140625,
            "style": {
              "font-size": "20px"
            }
          }
        },
        {
          "revision": {
            "clientId": "6bd1646b-015a-1000-0209-fc55f5cb70bf",
            "version": 10
          },
          "id": "6bdb3560-015a-1000-ffff-fffffd1e87f3",
          "uri": "https://pi-datamart-proxy.corp.chartercom.com/nifi-api/labels/6bdb3560-015a-1000-ffff-fffffd1e87f3",
          "position": {
            "x": 8192.838659720765,
            "y": 1692.1118491467907
          },
          "permissions": {
            "canRead": true,
            "canWrite": true
          },
          "bulletins": [],
          "dimensions": {
            "width": 1272.883056640625,
            "height": 971.0018310546875
          },
          "component": {
            "id": "6bdb3560-015a-1000-ffff-fffffd1e87f3",
            "parentGroupId": "8d1d9a24-0158-1000-da01-5d861f4c2834",
            "position": {
              "x": 8192.838659720765,
              "y": 1692.1118491467907
            },
            "label": "Get Decrypted S3 Files and deliver them to HDFS",
            "width": 1272.883056640625,
            "height": 971.0018310546875,
            "style": {
              "background-color": "#d6fdff",
              "font-size": "20px"
            }
          }
        }
      ],
      "funnels": []
    },
    "lastRefreshed": "14:31:32 CST"
  }
}